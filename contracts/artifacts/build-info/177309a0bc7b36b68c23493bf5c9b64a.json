{
	"id": "177309a0bc7b36b68c23493bf5c9b64a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TokenSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TokenSwap is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    IERC20 public tokenA;\r\n    IERC20 public tokenB;\r\n    uint256 public exchangeRate; // 1 Token A = exchangeRate Token B\r\n\r\n    event Swap(address indexed sender, uint256 amountA, uint256 amountB);\r\n\r\n    constructor(IERC20 _tokenA, IERC20 _tokenB, uint256 _exchangeRate,  address initialOwner) Ownable(initialOwner) {\r\n        require(address(_tokenA) != address(0), \"Token A address cannot be zero\");\r\n        require(address(_tokenB) != address(0), \"Token B address cannot be zero\");\r\n        require(_exchangeRate > 0, \"Exchange rate must be greater than zero\");\r\n\r\n        tokenA = _tokenA;\r\n        tokenB = _tokenB;\r\n        exchangeRate = _exchangeRate;\r\n    }\r\n\r\n    function swapAToB(uint256 amountA) external {\r\n        require(amountA > 0, \"Amount must be greater than zero\");\r\n\r\n        uint256 amountB = amountA.mul(exchangeRate);\r\n        require(tokenB.balanceOf(address(this)) >= amountB, \"Insufficient balance of Token B in the contract\");\r\n\r\n        // Transfer Token A from the sender to the contract\r\n        require(tokenA.transferFrom(msg.sender, address(this), amountA), \"Token A transfer failed\");\r\n\r\n        // Transfer Token B from the contract to the sender\r\n        require(tokenB.transfer(msg.sender, amountB), \"Token B transfer failed\");\r\n\r\n        emit Swap(msg.sender, amountA, amountB);\r\n    }\r\n\r\n    function swapBToA(uint256 amountB) external {\r\n        require(amountB > 0, \"Amount must be greater than zero\");\r\n\r\n        uint256 amountA = amountB.div(exchangeRate);\r\n        require(tokenA.balanceOf(address(this)) >= amountA, \"Insufficient balance of Token A in the contract\");\r\n\r\n        // Transfer Token B from the sender to the contract\r\n        require(tokenB.transferFrom(msg.sender, address(this), amountB), \"Token B transfer failed\");\r\n\r\n        // Transfer Token A from the contract to the sender\r\n        require(tokenA.transfer(msg.sender, amountA), \"Token A transfer failed\");\r\n\r\n        emit Swap(msg.sender, amountA, amountB);\r\n    }\r\n\r\n    // Owner can update the exchange rate\r\n    function setExchangeRate(uint256 newExchangeRate) external onlyOwner {\r\n        require(newExchangeRate > 0, \"Exchange rate must be greater than zero\");\r\n        exchangeRate = newExchangeRate;\r\n    }\r\n\r\n    // Owner can withdraw any remaining balance of tokens from the contract\r\n    function withdrawTokenA(uint256 amount) external onlyOwner {\r\n        require(tokenA.transfer(owner(), amount), \"Token A transfer failed\");\r\n    }\r\n\r\n    // Owner can withdraw any remaining balance of tokens from the contract\r\n    function withdrawTokenB(uint256 amount) external onlyOwner {\r\n        require(tokenB.transfer(owner(), amount), \"Token B transfer failed\");\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203e1adad4f89eb56dbdd13e60e667e865d60130c85c561effe0a1ee499317270064736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203e1adad4f89eb56dbdd13e60e667e865d60130c85c561effe0a1ee499317270064736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY BYTE 0xDA 0xD4 0xF8 SWAP15 0xB5 PUSH14 0xBDD13E60E667E865D60130C85C56 0x1E SELFDESTRUCT 0xE0 LOG1 0xEE 0x49 SWAP4 OR 0x27 STOP PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "482:6210:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203e1adad4f89eb56dbdd13e60e667e865d60130c85c561effe0a1ee499317270064736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY BYTE 0xDA 0xD4 0xF8 SWAP15 0xB5 PUSH14 0xBDD13E60E667E865D60130C85C56 0x1E SELFDESTRUCT 0xE0 LOG1 0xEE 0x49 SWAP4 OR 0x27 STOP PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "482:6210:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e1adad4f89eb56dbdd13e60e667e865d60130c85c561effe0a1ee499317270064736f6c63430008170033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/TokenSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TokenSwap.sol": {
				"TokenSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_tokenA",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_exchangeRate",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "exchangeRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newExchangeRate",
									"type": "uint256"
								}
							],
							"name": "setExchangeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								}
							],
							"name": "swapAToB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "swapBToA",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawTokenA",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawTokenB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TokenSwap.sol\":233:3005  contract TokenSwap is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TokenSwap.sol\":508:971  constructor(IERC20 _tokenA, IERC20 _tokenB, uint256 _exchangeRate,  address initialOwner) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/TokenSwap.sol\":606:618  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/TokenSwap.sol\":667:668  0 */\n  0x00\n    /* \"contracts/TokenSwap.sol\":639:669  address(_tokenA) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/TokenSwap.sol\":647:654  _tokenA */\n  dup5\n    /* \"contracts/TokenSwap.sol\":639:669  address(_tokenA) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/TokenSwap.sol\":631:704  require(address(_tokenA) != address(0), \"Token A address cannot be zero\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"contracts/TokenSwap.sol\":751:752  0 */\n  0x00\n    /* \"contracts/TokenSwap.sol\":723:753  address(_tokenB) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/TokenSwap.sol\":731:738  _tokenB */\n  dup4\n    /* \"contracts/TokenSwap.sol\":723:753  address(_tokenB) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/TokenSwap.sol\":715:788  require(address(_tokenB) != address(0), \"Token B address cannot be zero\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n    /* \"contracts/TokenSwap.sol\":823:824  0 */\n  0x00\n    /* \"contracts/TokenSwap.sol\":807:820  _exchangeRate */\n  dup3\n    /* \"contracts/TokenSwap.sol\":807:824  _exchangeRate > 0 */\n  gt\n    /* \"contracts/TokenSwap.sol\":799:868  require(_exchangeRate > 0, \"Exchange rate must be greater than zero\") */\n  tag_19\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_19:\n    /* \"contracts/TokenSwap.sol\":890:897  _tokenA */\n  dup4\n    /* \"contracts/TokenSwap.sol\":881:887  tokenA */\n  0x01\n  0x00\n    /* \"contracts/TokenSwap.sol\":881:897  tokenA = _tokenA */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSwap.sol\":917:924  _tokenB */\n  dup3\n    /* \"contracts/TokenSwap.sol\":908:914  tokenB */\n  0x02\n  0x00\n    /* \"contracts/TokenSwap.sol\":908:924  tokenB = _tokenB */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSwap.sol\":950:963  _exchangeRate */\n  dup2\n    /* \"contracts/TokenSwap.sol\":935:947  exchangeRate */\n  0x03\n    /* \"contracts/TokenSwap.sol\":935:963  exchangeRate = _exchangeRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSwap.sol\":508:971  constructor(IERC20 _tokenA, IERC20 _tokenB, uint256 _exchangeRate,  address initialOwner) Ownable(initialOwner) {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/TokenSwap.sol\":233:3005  contract TokenSwap is Ownable {... */\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_25:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_27:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_28:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_51\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_27\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_29:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_53\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_28\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_30:\n    /* \"#utility.yul\":771:809   */\n  tag_55\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_29\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_56:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_31:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_58\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_30\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1094   */\ntag_32:\n    /* \"#utility.yul\":1054:1061   */\n  0x00\n    /* \"#utility.yul\":1083:1088   */\n  dup2\n    /* \"#utility.yul\":1072:1088   */\n  swap1\n  pop\n    /* \"#utility.yul\":1017:1094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1100:1222   */\ntag_33:\n    /* \"#utility.yul\":1173:1197   */\n  tag_61\n    /* \"#utility.yul\":1191:1196   */\n  dup2\n    /* \"#utility.yul\":1173:1197   */\n  tag_32\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1166:1171   */\n  dup2\n    /* \"#utility.yul\":1163:1198   */\n  eq\n    /* \"#utility.yul\":1153:1216   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1153:1216   */\ntag_62:\n    /* \"#utility.yul\":1100:1222   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1228:1371   */\ntag_34:\n    /* \"#utility.yul\":1285:1290   */\n  0x00\n    /* \"#utility.yul\":1316:1322   */\n  dup2\n    /* \"#utility.yul\":1310:1323   */\n  mload\n    /* \"#utility.yul\":1301:1323   */\n  swap1\n  pop\n    /* \"#utility.yul\":1332:1365   */\n  tag_64\n    /* \"#utility.yul\":1359:1364   */\n  dup2\n    /* \"#utility.yul\":1332:1365   */\n  tag_33\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1228:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:1499   */\ntag_35:\n    /* \"#utility.yul\":1450:1474   */\n  tag_66\n    /* \"#utility.yul\":1468:1473   */\n  dup2\n    /* \"#utility.yul\":1450:1474   */\n  tag_28\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1443:1448   */\n  dup2\n    /* \"#utility.yul\":1440:1475   */\n  eq\n    /* \"#utility.yul\":1430:1493   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1489:1490   */\n  0x00\n    /* \"#utility.yul\":1486:1487   */\n  dup1\n    /* \"#utility.yul\":1479:1491   */\n  revert\n    /* \"#utility.yul\":1430:1493   */\ntag_67:\n    /* \"#utility.yul\":1377:1499   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1505:1648   */\ntag_36:\n    /* \"#utility.yul\":1562:1567   */\n  0x00\n    /* \"#utility.yul\":1593:1599   */\n  dup2\n    /* \"#utility.yul\":1587:1600   */\n  mload\n    /* \"#utility.yul\":1578:1600   */\n  swap1\n  pop\n    /* \"#utility.yul\":1609:1642   */\n  tag_69\n    /* \"#utility.yul\":1636:1641   */\n  dup2\n    /* \"#utility.yul\":1609:1642   */\n  tag_35\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1505:1648   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1654:2530   */\ntag_3:\n    /* \"#utility.yul\":1779:1785   */\n  0x00\n    /* \"#utility.yul\":1787:1793   */\n  dup1\n    /* \"#utility.yul\":1795:1801   */\n  0x00\n    /* \"#utility.yul\":1803:1809   */\n  dup1\n    /* \"#utility.yul\":1852:1855   */\n  0x80\n    /* \"#utility.yul\":1840:1849   */\n  dup6\n    /* \"#utility.yul\":1831:1838   */\n  dup8\n    /* \"#utility.yul\":1827:1850   */\n  sub\n    /* \"#utility.yul\":1823:1856   */\n  slt\n    /* \"#utility.yul\":1820:1940   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1859:1938   */\n  tag_72\n  tag_25\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1820:1940   */\ntag_71:\n    /* \"#utility.yul\":1979:1980   */\n  0x00\n    /* \"#utility.yul\":2004:2082   */\n  tag_73\n    /* \"#utility.yul\":2074:2081   */\n  dup8\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2054:2063   */\n  dup9\n    /* \"#utility.yul\":2050:2072   */\n  add\n    /* \"#utility.yul\":2004:2082   */\n  tag_31\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1994:2082   */\n  swap5\n  pop\n    /* \"#utility.yul\":1950:2092   */\n  pop\n    /* \"#utility.yul\":2131:2133   */\n  0x20\n    /* \"#utility.yul\":2157:2235   */\n  tag_74\n    /* \"#utility.yul\":2227:2234   */\n  dup8\n    /* \"#utility.yul\":2218:2224   */\n  dup3\n    /* \"#utility.yul\":2207:2216   */\n  dup9\n    /* \"#utility.yul\":2203:2225   */\n  add\n    /* \"#utility.yul\":2157:2235   */\n  tag_31\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2147:2235   */\n  swap4\n  pop\n    /* \"#utility.yul\":2102:2245   */\n  pop\n    /* \"#utility.yul\":2284:2286   */\n  0x40\n    /* \"#utility.yul\":2310:2374   */\n  tag_75\n    /* \"#utility.yul\":2366:2373   */\n  dup8\n    /* \"#utility.yul\":2357:2363   */\n  dup3\n    /* \"#utility.yul\":2346:2355   */\n  dup9\n    /* \"#utility.yul\":2342:2364   */\n  add\n    /* \"#utility.yul\":2310:2374   */\n  tag_34\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2300:2374   */\n  swap3\n  pop\n    /* \"#utility.yul\":2255:2384   */\n  pop\n    /* \"#utility.yul\":2423:2425   */\n  0x60\n    /* \"#utility.yul\":2449:2513   */\n  tag_76\n    /* \"#utility.yul\":2505:2512   */\n  dup8\n    /* \"#utility.yul\":2496:2502   */\n  dup3\n    /* \"#utility.yul\":2485:2494   */\n  dup9\n    /* \"#utility.yul\":2481:2503   */\n  add\n    /* \"#utility.yul\":2449:2513   */\n  tag_36\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2439:2513   */\n  swap2\n  pop\n    /* \"#utility.yul\":2394:2523   */\n  pop\n    /* \"#utility.yul\":1654:2530   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2536:2654   */\ntag_37:\n    /* \"#utility.yul\":2623:2647   */\n  tag_78\n    /* \"#utility.yul\":2641:2646   */\n  dup2\n    /* \"#utility.yul\":2623:2647   */\n  tag_28\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2618:2621   */\n  dup3\n    /* \"#utility.yul\":2611:2648   */\n  mstore\n    /* \"#utility.yul\":2536:2654   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2660:2882   */\ntag_9:\n    /* \"#utility.yul\":2753:2757   */\n  0x00\n    /* \"#utility.yul\":2791:2793   */\n  0x20\n    /* \"#utility.yul\":2780:2789   */\n  dup3\n    /* \"#utility.yul\":2776:2794   */\n  add\n    /* \"#utility.yul\":2768:2794   */\n  swap1\n  pop\n    /* \"#utility.yul\":2804:2875   */\n  tag_80\n    /* \"#utility.yul\":2872:2873   */\n  0x00\n    /* \"#utility.yul\":2861:2870   */\n  dup4\n    /* \"#utility.yul\":2857:2874   */\n  add\n    /* \"#utility.yul\":2848:2854   */\n  dup5\n    /* \"#utility.yul\":2804:2875   */\n  tag_37\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2660:2882   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2888:3057   */\ntag_38:\n    /* \"#utility.yul\":2972:2983   */\n  0x00\n    /* \"#utility.yul\":3006:3012   */\n  dup3\n    /* \"#utility.yul\":3001:3004   */\n  dup3\n    /* \"#utility.yul\":2994:3013   */\n  mstore\n    /* \"#utility.yul\":3046:3050   */\n  0x20\n    /* \"#utility.yul\":3041:3044   */\n  dup3\n    /* \"#utility.yul\":3037:3051   */\n  add\n    /* \"#utility.yul\":3022:3051   */\n  swap1\n  pop\n    /* \"#utility.yul\":2888:3057   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3063:3243   */\ntag_39:\n    /* \"#utility.yul\":3203:3235   */\n  0x546f6b656e204120616464726573732063616e6e6f74206265207a65726f0000\n    /* \"#utility.yul\":3199:3200   */\n  0x00\n    /* \"#utility.yul\":3191:3197   */\n  dup3\n    /* \"#utility.yul\":3187:3201   */\n  add\n    /* \"#utility.yul\":3180:3236   */\n  mstore\n    /* \"#utility.yul\":3063:3243   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3249:3615   */\ntag_40:\n    /* \"#utility.yul\":3391:3394   */\n  0x00\n    /* \"#utility.yul\":3412:3479   */\n  tag_84\n    /* \"#utility.yul\":3476:3478   */\n  0x1e\n    /* \"#utility.yul\":3471:3474   */\n  dup4\n    /* \"#utility.yul\":3412:3479   */\n  tag_38\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3405:3479   */\n  swap2\n  pop\n    /* \"#utility.yul\":3488:3581   */\n  tag_85\n    /* \"#utility.yul\":3577:3580   */\n  dup3\n    /* \"#utility.yul\":3488:3581   */\n  tag_39\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3606:3608   */\n  0x20\n    /* \"#utility.yul\":3601:3604   */\n  dup3\n    /* \"#utility.yul\":3597:3609   */\n  add\n    /* \"#utility.yul\":3590:3609   */\n  swap1\n  pop\n    /* \"#utility.yul\":3249:3615   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3621:4040   */\ntag_15:\n    /* \"#utility.yul\":3787:3791   */\n  0x00\n    /* \"#utility.yul\":3825:3827   */\n  0x20\n    /* \"#utility.yul\":3814:3823   */\n  dup3\n    /* \"#utility.yul\":3810:3828   */\n  add\n    /* \"#utility.yul\":3802:3828   */\n  swap1\n  pop\n    /* \"#utility.yul\":3874:3883   */\n  dup2\n    /* \"#utility.yul\":3868:3872   */\n  dup2\n    /* \"#utility.yul\":3864:3884   */\n  sub\n    /* \"#utility.yul\":3860:3861   */\n  0x00\n    /* \"#utility.yul\":3849:3858   */\n  dup4\n    /* \"#utility.yul\":3845:3862   */\n  add\n    /* \"#utility.yul\":3838:3885   */\n  mstore\n    /* \"#utility.yul\":3902:4033   */\n  tag_87\n    /* \"#utility.yul\":4028:4032   */\n  dup2\n    /* \"#utility.yul\":3902:4033   */\n  tag_40\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3894:4033   */\n  swap1\n  pop\n    /* \"#utility.yul\":3621:4040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4046:4226   */\ntag_41:\n    /* \"#utility.yul\":4186:4218   */\n  0x546f6b656e204220616464726573732063616e6e6f74206265207a65726f0000\n    /* \"#utility.yul\":4182:4183   */\n  0x00\n    /* \"#utility.yul\":4174:4180   */\n  dup3\n    /* \"#utility.yul\":4170:4184   */\n  add\n    /* \"#utility.yul\":4163:4219   */\n  mstore\n    /* \"#utility.yul\":4046:4226   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4232:4598   */\ntag_42:\n    /* \"#utility.yul\":4374:4377   */\n  0x00\n    /* \"#utility.yul\":4395:4462   */\n  tag_90\n    /* \"#utility.yul\":4459:4461   */\n  0x1e\n    /* \"#utility.yul\":4454:4457   */\n  dup4\n    /* \"#utility.yul\":4395:4462   */\n  tag_38\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4388:4462   */\n  swap2\n  pop\n    /* \"#utility.yul\":4471:4564   */\n  tag_91\n    /* \"#utility.yul\":4560:4563   */\n  dup3\n    /* \"#utility.yul\":4471:4564   */\n  tag_41\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4589:4591   */\n  0x20\n    /* \"#utility.yul\":4584:4587   */\n  dup3\n    /* \"#utility.yul\":4580:4592   */\n  add\n    /* \"#utility.yul\":4573:4592   */\n  swap1\n  pop\n    /* \"#utility.yul\":4232:4598   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4604:5023   */\ntag_18:\n    /* \"#utility.yul\":4770:4774   */\n  0x00\n    /* \"#utility.yul\":4808:4810   */\n  0x20\n    /* \"#utility.yul\":4797:4806   */\n  dup3\n    /* \"#utility.yul\":4793:4811   */\n  add\n    /* \"#utility.yul\":4785:4811   */\n  swap1\n  pop\n    /* \"#utility.yul\":4857:4866   */\n  dup2\n    /* \"#utility.yul\":4851:4855   */\n  dup2\n    /* \"#utility.yul\":4847:4867   */\n  sub\n    /* \"#utility.yul\":4843:4844   */\n  0x00\n    /* \"#utility.yul\":4832:4841   */\n  dup4\n    /* \"#utility.yul\":4828:4845   */\n  add\n    /* \"#utility.yul\":4821:4868   */\n  mstore\n    /* \"#utility.yul\":4885:5016   */\n  tag_93\n    /* \"#utility.yul\":5011:5015   */\n  dup2\n    /* \"#utility.yul\":4885:5016   */\n  tag_42\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4877:5016   */\n  swap1\n  pop\n    /* \"#utility.yul\":4604:5023   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5029:5255   */\ntag_43:\n    /* \"#utility.yul\":5169:5203   */\n  0x45786368616e67652072617465206d7573742062652067726561746572207468\n    /* \"#utility.yul\":5165:5166   */\n  0x00\n    /* \"#utility.yul\":5157:5163   */\n  dup3\n    /* \"#utility.yul\":5153:5167   */\n  add\n    /* \"#utility.yul\":5146:5204   */\n  mstore\n    /* \"#utility.yul\":5238:5247   */\n  0x616e207a65726f00000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5233:5235   */\n  0x20\n    /* \"#utility.yul\":5225:5231   */\n  dup3\n    /* \"#utility.yul\":5221:5236   */\n  add\n    /* \"#utility.yul\":5214:5248   */\n  mstore\n    /* \"#utility.yul\":5029:5255   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5261:5627   */\ntag_44:\n    /* \"#utility.yul\":5403:5406   */\n  0x00\n    /* \"#utility.yul\":5424:5491   */\n  tag_96\n    /* \"#utility.yul\":5488:5490   */\n  0x27\n    /* \"#utility.yul\":5483:5486   */\n  dup4\n    /* \"#utility.yul\":5424:5491   */\n  tag_38\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5417:5491   */\n  swap2\n  pop\n    /* \"#utility.yul\":5500:5593   */\n  tag_97\n    /* \"#utility.yul\":5589:5592   */\n  dup3\n    /* \"#utility.yul\":5500:5593   */\n  tag_43\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":5618:5620   */\n  0x40\n    /* \"#utility.yul\":5613:5616   */\n  dup3\n    /* \"#utility.yul\":5609:5621   */\n  add\n    /* \"#utility.yul\":5602:5621   */\n  swap1\n  pop\n    /* \"#utility.yul\":5261:5627   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5633:6052   */\ntag_21:\n    /* \"#utility.yul\":5799:5803   */\n  0x00\n    /* \"#utility.yul\":5837:5839   */\n  0x20\n    /* \"#utility.yul\":5826:5835   */\n  dup3\n    /* \"#utility.yul\":5822:5840   */\n  add\n    /* \"#utility.yul\":5814:5840   */\n  swap1\n  pop\n    /* \"#utility.yul\":5886:5895   */\n  dup2\n    /* \"#utility.yul\":5880:5884   */\n  dup2\n    /* \"#utility.yul\":5876:5896   */\n  sub\n    /* \"#utility.yul\":5872:5873   */\n  0x00\n    /* \"#utility.yul\":5861:5870   */\n  dup4\n    /* \"#utility.yul\":5857:5874   */\n  add\n    /* \"#utility.yul\":5850:5897   */\n  mstore\n    /* \"#utility.yul\":5914:6045   */\n  tag_99\n    /* \"#utility.yul\":6040:6044   */\n  dup2\n    /* \"#utility.yul\":5914:6045   */\n  tag_44\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5906:6045   */\n  swap1\n  pop\n    /* \"#utility.yul\":5633:6052   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/TokenSwap.sol\":233:3005  contract TokenSwap is Ownable {... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TokenSwap.sol\":233:3005  contract TokenSwap is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x85949788\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x85949788\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa84003f3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdb068e0e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe4c93be7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x0fc63d10\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x38720f72\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ba0b9a9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5f64b55b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TokenSwap.sol\":305:325  IERC20 public tokenA */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSwap.sol\":979:1630  function swapAToB(uint256 amountA) external {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/TokenSwap.sol\":359:386  uint256 public exchangeRate */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSwap.sol\":332:352  IERC20 public tokenB */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/TokenSwap.sol\":1638:2289  function swapBToA(uint256 amountB) external {... */\n    tag_8:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSwap.sol\":2856:3002  function withdrawTokenB(uint256 amount) external onlyOwner {... */\n    tag_10:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/TokenSwap.sol\":2340:2540  function setExchangeRate(uint256 newExchangeRate) external onlyOwner {... */\n    tag_11:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/TokenSwap.sol\":2625:2771  function withdrawTokenA(uint256 amount) external onlyOwner {... */\n    tag_12:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/TokenSwap.sol\":305:325  IERC20 public tokenA */\n    tag_16:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TokenSwap.sol\":979:1630  function swapAToB(uint256 amountA) external {... */\n    tag_22:\n        /* \"contracts/TokenSwap.sol\":1052:1053  0 */\n      0x00\n        /* \"contracts/TokenSwap.sol\":1042:1049  amountA */\n      dup2\n        /* \"contracts/TokenSwap.sol\":1042:1053  amountA > 0 */\n      gt\n        /* \"contracts/TokenSwap.sol\":1034:1090  require(amountA > 0, \"Amount must be greater than zero\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"contracts/TokenSwap.sol\":1103:1118  uint256 amountB */\n      0x00\n        /* \"contracts/TokenSwap.sol\":1121:1146  amountA.mul(exchangeRate) */\n      tag_56\n        /* \"contracts/TokenSwap.sol\":1133:1145  exchangeRate */\n      sload(0x03)\n        /* \"contracts/TokenSwap.sol\":1121:1128  amountA */\n      dup4\n        /* \"contracts/TokenSwap.sol\":1121:1132  amountA.mul */\n      tag_57\n      swap1\n        /* \"contracts/TokenSwap.sol\":1121:1146  amountA.mul(exchangeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_56:\n        /* \"contracts/TokenSwap.sol\":1103:1146  uint256 amountB = amountA.mul(exchangeRate) */\n      swap1\n      pop\n        /* \"contracts/TokenSwap.sol\":1200:1207  amountB */\n      dup1\n        /* \"contracts/TokenSwap.sol\":1165:1171  tokenB */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":1165:1181  tokenB.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TokenSwap.sol\":1190:1194  this */\n      address\n        /* \"contracts/TokenSwap.sol\":1165:1196  tokenB.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_58:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"contracts/TokenSwap.sol\":1165:1207  tokenB.balanceOf(address(this)) >= amountB */\n      lt\n      iszero\n        /* \"contracts/TokenSwap.sol\":1157:1259  require(tokenB.balanceOf(address(this)) >= amountB, \"Insufficient balance of Token B in the contract\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"contracts/TokenSwap.sol\":1341:1347  tokenA */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":1341:1360  tokenA.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/TokenSwap.sol\":1361:1371  msg.sender */\n      caller\n        /* \"contracts/TokenSwap.sol\":1381:1385  this */\n      address\n        /* \"contracts/TokenSwap.sol\":1388:1395  amountA */\n      dup6\n        /* \"contracts/TokenSwap.sol\":1341:1396  tokenA.transferFrom(msg.sender, address(this), amountA) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"contracts/TokenSwap.sol\":1333:1424  require(tokenA.transferFrom(msg.sender, address(this), amountA), \"Token A transfer failed\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"contracts/TokenSwap.sol\":1506:1512  tokenB */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":1506:1521  tokenB.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/TokenSwap.sol\":1522:1532  msg.sender */\n      caller\n        /* \"contracts/TokenSwap.sol\":1534:1541  amountB */\n      dup4\n        /* \"contracts/TokenSwap.sol\":1506:1542  tokenB.transfer(msg.sender, amountB) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_79:\n        /* \"contracts/TokenSwap.sol\":1498:1570  require(tokenB.transfer(msg.sender, amountB), \"Token B transfer failed\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/TokenSwap.sol\":1593:1603  msg.sender */\n      caller\n        /* \"contracts/TokenSwap.sol\":1588:1622  Swap(msg.sender, amountA, amountB) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758\n        /* \"contracts/TokenSwap.sol\":1605:1612  amountA */\n      dup4\n        /* \"contracts/TokenSwap.sol\":1614:1621  amountB */\n      dup4\n        /* \"contracts/TokenSwap.sol\":1588:1622  Swap(msg.sender, amountA, amountB) */\n      mload(0x40)\n      tag_83\n      swap3\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/TokenSwap.sol\":1023:1630  {... */\n      pop\n        /* \"contracts/TokenSwap.sol\":979:1630  function swapAToB(uint256 amountA) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/TokenSwap.sol\":359:386  uint256 public exchangeRate */\n    tag_24:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/TokenSwap.sol\":332:352  IERC20 public tokenB */\n    tag_28:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/TokenSwap.sol\":1638:2289  function swapBToA(uint256 amountB) external {... */\n    tag_34:\n        /* \"contracts/TokenSwap.sol\":1711:1712  0 */\n      0x00\n        /* \"contracts/TokenSwap.sol\":1701:1708  amountB */\n      dup2\n        /* \"contracts/TokenSwap.sol\":1701:1712  amountB > 0 */\n      gt\n        /* \"contracts/TokenSwap.sol\":1693:1749  require(amountB > 0, \"Amount must be greater than zero\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_55\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contracts/TokenSwap.sol\":1762:1777  uint256 amountA */\n      0x00\n        /* \"contracts/TokenSwap.sol\":1780:1805  amountB.div(exchangeRate) */\n      tag_94\n        /* \"contracts/TokenSwap.sol\":1792:1804  exchangeRate */\n      sload(0x03)\n        /* \"contracts/TokenSwap.sol\":1780:1787  amountB */\n      dup4\n        /* \"contracts/TokenSwap.sol\":1780:1791  amountB.div */\n      tag_95\n      swap1\n        /* \"contracts/TokenSwap.sol\":1780:1805  amountB.div(exchangeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_94:\n        /* \"contracts/TokenSwap.sol\":1762:1805  uint256 amountA = amountB.div(exchangeRate) */\n      swap1\n      pop\n        /* \"contracts/TokenSwap.sol\":1859:1866  amountA */\n      dup1\n        /* \"contracts/TokenSwap.sol\":1824:1830  tokenA */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":1824:1840  tokenA.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TokenSwap.sol\":1849:1853  this */\n      address\n        /* \"contracts/TokenSwap.sol\":1824:1855  tokenA.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_96:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_99:\n        /* \"contracts/TokenSwap.sol\":1824:1866  tokenA.balanceOf(address(this)) >= amountA */\n      lt\n      iszero\n        /* \"contracts/TokenSwap.sol\":1816:1918  require(tokenA.balanceOf(address(this)) >= amountA, \"Insufficient balance of Token A in the contract\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"contracts/TokenSwap.sol\":2000:2006  tokenB */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":2000:2019  tokenB.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/TokenSwap.sol\":2020:2030  msg.sender */\n      caller\n        /* \"contracts/TokenSwap.sol\":2040:2044  this */\n      address\n        /* \"contracts/TokenSwap.sol\":2047:2054  amountB */\n      dup6\n        /* \"contracts/TokenSwap.sol\":2000:2055  tokenB.transferFrom(msg.sender, address(this), amountB) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_106:\n        /* \"contracts/TokenSwap.sol\":1992:2083  require(tokenB.transferFrom(msg.sender, address(this), amountB), \"Token B transfer failed\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_82\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/TokenSwap.sol\":2165:2171  tokenA */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":2165:2180  tokenA.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/TokenSwap.sol\":2181:2191  msg.sender */\n      caller\n        /* \"contracts/TokenSwap.sol\":2193:2200  amountA */\n      dup4\n        /* \"contracts/TokenSwap.sol\":2165:2201  tokenA.transfer(msg.sender, amountA) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_109:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_112:\n        /* \"contracts/TokenSwap.sol\":2157:2229  require(tokenA.transfer(msg.sender, amountA), \"Token A transfer failed\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_74\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/TokenSwap.sol\":2252:2262  msg.sender */\n      caller\n        /* \"contracts/TokenSwap.sol\":2247:2281  Swap(msg.sender, amountA, amountB) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758\n        /* \"contracts/TokenSwap.sol\":2264:2271  amountA */\n      dup3\n        /* \"contracts/TokenSwap.sol\":2273:2280  amountB */\n      dup5\n        /* \"contracts/TokenSwap.sol\":2247:2281  Swap(msg.sender, amountA, amountB) */\n      mload(0x40)\n      tag_115\n      swap3\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/TokenSwap.sol\":1682:2289  {... */\n      pop\n        /* \"contracts/TokenSwap.sol\":1638:2289  function swapBToA(uint256 amountB) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenSwap.sol\":2856:3002  function withdrawTokenB(uint256 amount) external onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/TokenSwap.sol\":2934:2940  tokenB */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":2934:2949  tokenB.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/TokenSwap.sol\":2950:2957  owner() */\n      tag_120\n        /* \"contracts/TokenSwap.sol\":2950:2955  owner */\n      tag_36\n        /* \"contracts/TokenSwap.sol\":2950:2957  owner() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/TokenSwap.sol\":2959:2965  amount */\n      dup4\n        /* \"contracts/TokenSwap.sol\":2934:2966  tokenB.transfer(owner(), amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_121:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_124:\n        /* \"contracts/TokenSwap.sol\":2926:2994  require(tokenB.transfer(owner(), amount), \"Token B transfer failed\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_82\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/TokenSwap.sol\":2856:3002  function withdrawTokenB(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/TokenSwap.sol\":2340:2540  function setExchangeRate(uint256 newExchangeRate) external onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/TokenSwap.sol\":2446:2447  0 */\n      0x00\n        /* \"contracts/TokenSwap.sol\":2428:2443  newExchangeRate */\n      dup2\n        /* \"contracts/TokenSwap.sol\":2428:2447  newExchangeRate > 0 */\n      gt\n        /* \"contracts/TokenSwap.sol\":2420:2491  require(newExchangeRate > 0, \"Exchange rate must be greater than zero\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"contracts/TokenSwap.sol\":2517:2532  newExchangeRate */\n      dup1\n        /* \"contracts/TokenSwap.sol\":2502:2514  exchangeRate */\n      0x03\n        /* \"contracts/TokenSwap.sol\":2502:2532  exchangeRate = newExchangeRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenSwap.sol\":2340:2540  function setExchangeRate(uint256 newExchangeRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/TokenSwap.sol\":2625:2771  function withdrawTokenA(uint256 amount) external onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_134:\n        /* \"contracts/TokenSwap.sol\":2703:2709  tokenA */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSwap.sol\":2703:2718  tokenA.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/TokenSwap.sol\":2719:2726  owner() */\n      tag_136\n        /* \"contracts/TokenSwap.sol\":2719:2724  owner */\n      tag_36\n        /* \"contracts/TokenSwap.sol\":2719:2726  owner() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/TokenSwap.sol\":2728:2734  amount */\n      dup4\n        /* \"contracts/TokenSwap.sol\":2703:2735  tokenA.transfer(owner(), amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_137:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_140:\n        /* \"contracts/TokenSwap.sol\":2695:2763  require(tokenA.transfer(owner(), amount), \"Token A transfer failed\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_74\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/TokenSwap.sol\":2625:2771  function withdrawTokenA(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_164:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_165:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_166:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_204\n        /* \"#utility.yul\":306:340   */\n      tag_205\n        /* \"#utility.yul\":315:339   */\n      tag_206\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_164\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":306:340   */\n      tag_165\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":288:341   */\n      tag_164\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_167:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_208\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_166\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_168:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_210\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_167\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_169:\n        /* \"#utility.yul\":732:783   */\n      tag_212\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_168\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_18:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_214\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_169\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1133:1250   */\n    tag_171:\n        /* \"#utility.yul\":1242:1243   */\n      0x00\n        /* \"#utility.yul\":1239:1240   */\n      dup1\n        /* \"#utility.yul\":1232:1244   */\n      revert\n        /* \"#utility.yul\":1379:1456   */\n    tag_173:\n        /* \"#utility.yul\":1416:1423   */\n      0x00\n        /* \"#utility.yul\":1445:1450   */\n      dup2\n        /* \"#utility.yul\":1434:1450   */\n      swap1\n      pop\n        /* \"#utility.yul\":1379:1456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1462:1584   */\n    tag_174:\n        /* \"#utility.yul\":1535:1559   */\n      tag_220\n        /* \"#utility.yul\":1553:1558   */\n      dup2\n        /* \"#utility.yul\":1535:1559   */\n      tag_173\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1528:1533   */\n      dup2\n        /* \"#utility.yul\":1525:1560   */\n      eq\n        /* \"#utility.yul\":1515:1578   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":1574:1575   */\n      0x00\n        /* \"#utility.yul\":1571:1572   */\n      dup1\n        /* \"#utility.yul\":1564:1576   */\n      revert\n        /* \"#utility.yul\":1515:1578   */\n    tag_221:\n        /* \"#utility.yul\":1462:1584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1590:1729   */\n    tag_175:\n        /* \"#utility.yul\":1636:1641   */\n      0x00\n        /* \"#utility.yul\":1674:1680   */\n      dup2\n        /* \"#utility.yul\":1661:1681   */\n      calldataload\n        /* \"#utility.yul\":1652:1681   */\n      swap1\n      pop\n        /* \"#utility.yul\":1690:1723   */\n      tag_223\n        /* \"#utility.yul\":1717:1722   */\n      dup2\n        /* \"#utility.yul\":1690:1723   */\n      tag_174\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1590:1729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:2064   */\n    tag_21:\n        /* \"#utility.yul\":1794:1800   */\n      0x00\n        /* \"#utility.yul\":1843:1845   */\n      0x20\n        /* \"#utility.yul\":1831:1840   */\n      dup3\n        /* \"#utility.yul\":1822:1829   */\n      dup5\n        /* \"#utility.yul\":1818:1841   */\n      sub\n        /* \"#utility.yul\":1814:1846   */\n      slt\n        /* \"#utility.yul\":1811:1930   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":1849:1928   */\n      tag_226\n      tag_171\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1811:1930   */\n    tag_225:\n        /* \"#utility.yul\":1969:1970   */\n      0x00\n        /* \"#utility.yul\":1994:2047   */\n      tag_227\n        /* \"#utility.yul\":2039:2046   */\n      dup5\n        /* \"#utility.yul\":2030:2036   */\n      dup3\n        /* \"#utility.yul\":2019:2028   */\n      dup6\n        /* \"#utility.yul\":2015:2037   */\n      add\n        /* \"#utility.yul\":1994:2047   */\n      tag_175\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1984:2047   */\n      swap2\n      pop\n        /* \"#utility.yul\":1940:2057   */\n      pop\n        /* \"#utility.yul\":1735:2064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2070:2188   */\n    tag_176:\n        /* \"#utility.yul\":2157:2181   */\n      tag_229\n        /* \"#utility.yul\":2175:2180   */\n      dup2\n        /* \"#utility.yul\":2157:2181   */\n      tag_173\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2152:2155   */\n      dup3\n        /* \"#utility.yul\":2145:2182   */\n      mstore\n        /* \"#utility.yul\":2070:2188   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2194:2416   */\n    tag_26:\n        /* \"#utility.yul\":2287:2291   */\n      0x00\n        /* \"#utility.yul\":2325:2327   */\n      0x20\n        /* \"#utility.yul\":2314:2323   */\n      dup3\n        /* \"#utility.yul\":2310:2328   */\n      add\n        /* \"#utility.yul\":2302:2328   */\n      swap1\n      pop\n        /* \"#utility.yul\":2338:2409   */\n      tag_231\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2395:2404   */\n      dup4\n        /* \"#utility.yul\":2391:2408   */\n      add\n        /* \"#utility.yul\":2382:2388   */\n      dup5\n        /* \"#utility.yul\":2338:2409   */\n      tag_176\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":2194:2416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2422:2518   */\n    tag_177:\n        /* \"#utility.yul\":2459:2466   */\n      0x00\n        /* \"#utility.yul\":2488:2512   */\n      tag_233\n        /* \"#utility.yul\":2506:2511   */\n      dup3\n        /* \"#utility.yul\":2488:2512   */\n      tag_164\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2477:2512   */\n      swap1\n      pop\n        /* \"#utility.yul\":2422:2518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2642   */\n    tag_178:\n        /* \"#utility.yul\":2611:2635   */\n      tag_235\n        /* \"#utility.yul\":2629:2634   */\n      dup2\n        /* \"#utility.yul\":2611:2635   */\n      tag_177\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2606:2609   */\n      dup3\n        /* \"#utility.yul\":2599:2636   */\n      mstore\n        /* \"#utility.yul\":2524:2642   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2648:2870   */\n    tag_38:\n        /* \"#utility.yul\":2741:2745   */\n      0x00\n        /* \"#utility.yul\":2779:2781   */\n      0x20\n        /* \"#utility.yul\":2768:2777   */\n      dup3\n        /* \"#utility.yul\":2764:2782   */\n      add\n        /* \"#utility.yul\":2756:2782   */\n      swap1\n      pop\n        /* \"#utility.yul\":2792:2863   */\n      tag_237\n        /* \"#utility.yul\":2860:2861   */\n      0x00\n        /* \"#utility.yul\":2849:2858   */\n      dup4\n        /* \"#utility.yul\":2845:2862   */\n      add\n        /* \"#utility.yul\":2836:2842   */\n      dup5\n        /* \"#utility.yul\":2792:2863   */\n      tag_178\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2648:2870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:2998   */\n    tag_179:\n        /* \"#utility.yul\":2949:2973   */\n      tag_239\n        /* \"#utility.yul\":2967:2972   */\n      dup2\n        /* \"#utility.yul\":2949:2973   */\n      tag_177\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2942:2947   */\n      dup2\n        /* \"#utility.yul\":2939:2974   */\n      eq\n        /* \"#utility.yul\":2929:2992   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":2988:2989   */\n      0x00\n        /* \"#utility.yul\":2985:2986   */\n      dup1\n        /* \"#utility.yul\":2978:2990   */\n      revert\n        /* \"#utility.yul\":2929:2992   */\n    tag_240:\n        /* \"#utility.yul\":2876:2998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3004:3143   */\n    tag_180:\n        /* \"#utility.yul\":3050:3055   */\n      0x00\n        /* \"#utility.yul\":3088:3094   */\n      dup2\n        /* \"#utility.yul\":3075:3095   */\n      calldataload\n        /* \"#utility.yul\":3066:3095   */\n      swap1\n      pop\n        /* \"#utility.yul\":3104:3137   */\n      tag_242\n        /* \"#utility.yul\":3131:3136   */\n      dup2\n        /* \"#utility.yul\":3104:3137   */\n      tag_179\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":3004:3143   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3149:3478   */\n    tag_50:\n        /* \"#utility.yul\":3208:3214   */\n      0x00\n        /* \"#utility.yul\":3257:3259   */\n      0x20\n        /* \"#utility.yul\":3245:3254   */\n      dup3\n        /* \"#utility.yul\":3236:3243   */\n      dup5\n        /* \"#utility.yul\":3232:3255   */\n      sub\n        /* \"#utility.yul\":3228:3260   */\n      slt\n        /* \"#utility.yul\":3225:3344   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":3263:3342   */\n      tag_245\n      tag_171\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3225:3344   */\n    tag_244:\n        /* \"#utility.yul\":3383:3384   */\n      0x00\n        /* \"#utility.yul\":3408:3461   */\n      tag_246\n        /* \"#utility.yul\":3453:3460   */\n      dup5\n        /* \"#utility.yul\":3444:3450   */\n      dup3\n        /* \"#utility.yul\":3433:3442   */\n      dup6\n        /* \"#utility.yul\":3429:3451   */\n      add\n        /* \"#utility.yul\":3408:3461   */\n      tag_180\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3398:3461   */\n      swap2\n      pop\n        /* \"#utility.yul\":3354:3471   */\n      pop\n        /* \"#utility.yul\":3149:3478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3653   */\n    tag_181:\n        /* \"#utility.yul\":3568:3579   */\n      0x00\n        /* \"#utility.yul\":3602:3608   */\n      dup3\n        /* \"#utility.yul\":3597:3600   */\n      dup3\n        /* \"#utility.yul\":3590:3609   */\n      mstore\n        /* \"#utility.yul\":3642:3646   */\n      0x20\n        /* \"#utility.yul\":3637:3640   */\n      dup3\n        /* \"#utility.yul\":3633:3647   */\n      add\n        /* \"#utility.yul\":3618:3647   */\n      swap1\n      pop\n        /* \"#utility.yul\":3484:3653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3659:3841   */\n    tag_182:\n        /* \"#utility.yul\":3799:3833   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":3795:3796   */\n      0x00\n        /* \"#utility.yul\":3787:3793   */\n      dup3\n        /* \"#utility.yul\":3783:3797   */\n      add\n        /* \"#utility.yul\":3776:3834   */\n      mstore\n        /* \"#utility.yul\":3659:3841   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3847:4213   */\n    tag_183:\n        /* \"#utility.yul\":3989:3992   */\n      0x00\n        /* \"#utility.yul\":4010:4077   */\n      tag_250\n        /* \"#utility.yul\":4074:4076   */\n      0x20\n        /* \"#utility.yul\":4069:4072   */\n      dup4\n        /* \"#utility.yul\":4010:4077   */\n      tag_181\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":4003:4077   */\n      swap2\n      pop\n        /* \"#utility.yul\":4086:4179   */\n      tag_251\n        /* \"#utility.yul\":4175:4178   */\n      dup3\n        /* \"#utility.yul\":4086:4179   */\n      tag_182\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":4204:4206   */\n      0x20\n        /* \"#utility.yul\":4199:4202   */\n      dup3\n        /* \"#utility.yul\":4195:4207   */\n      add\n        /* \"#utility.yul\":4188:4207   */\n      swap1\n      pop\n        /* \"#utility.yul\":3847:4213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4219:4638   */\n    tag_55:\n        /* \"#utility.yul\":4385:4389   */\n      0x00\n        /* \"#utility.yul\":4423:4425   */\n      0x20\n        /* \"#utility.yul\":4412:4421   */\n      dup3\n        /* \"#utility.yul\":4408:4426   */\n      add\n        /* \"#utility.yul\":4400:4426   */\n      swap1\n      pop\n        /* \"#utility.yul\":4472:4481   */\n      dup2\n        /* \"#utility.yul\":4466:4470   */\n      dup2\n        /* \"#utility.yul\":4462:4482   */\n      sub\n        /* \"#utility.yul\":4458:4459   */\n      0x00\n        /* \"#utility.yul\":4447:4456   */\n      dup4\n        /* \"#utility.yul\":4443:4460   */\n      add\n        /* \"#utility.yul\":4436:4483   */\n      mstore\n        /* \"#utility.yul\":4500:4631   */\n      tag_253\n        /* \"#utility.yul\":4626:4630   */\n      dup2\n        /* \"#utility.yul\":4500:4631   */\n      tag_183\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4492:4631   */\n      swap1\n      pop\n        /* \"#utility.yul\":4219:4638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4644:4787   */\n    tag_184:\n        /* \"#utility.yul\":4701:4706   */\n      0x00\n        /* \"#utility.yul\":4732:4738   */\n      dup2\n        /* \"#utility.yul\":4726:4739   */\n      mload\n        /* \"#utility.yul\":4717:4739   */\n      swap1\n      pop\n        /* \"#utility.yul\":4748:4781   */\n      tag_255\n        /* \"#utility.yul\":4775:4780   */\n      dup2\n        /* \"#utility.yul\":4748:4781   */\n      tag_174\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":4644:4787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4793:5144   */\n    tag_62:\n        /* \"#utility.yul\":4863:4869   */\n      0x00\n        /* \"#utility.yul\":4912:4914   */\n      0x20\n        /* \"#utility.yul\":4900:4909   */\n      dup3\n        /* \"#utility.yul\":4891:4898   */\n      dup5\n        /* \"#utility.yul\":4887:4910   */\n      sub\n        /* \"#utility.yul\":4883:4915   */\n      slt\n        /* \"#utility.yul\":4880:4999   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":4918:4997   */\n      tag_258\n      tag_171\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4880:4999   */\n    tag_257:\n        /* \"#utility.yul\":5038:5039   */\n      0x00\n        /* \"#utility.yul\":5063:5127   */\n      tag_259\n        /* \"#utility.yul\":5119:5126   */\n      dup5\n        /* \"#utility.yul\":5110:5116   */\n      dup3\n        /* \"#utility.yul\":5099:5108   */\n      dup6\n        /* \"#utility.yul\":5095:5117   */\n      add\n        /* \"#utility.yul\":5063:5127   */\n      tag_184\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":5053:5127   */\n      swap2\n      pop\n        /* \"#utility.yul\":5009:5137   */\n      pop\n        /* \"#utility.yul\":4793:5144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5150:5384   */\n    tag_185:\n        /* \"#utility.yul\":5290:5324   */\n      0x496e73756666696369656e742062616c616e6365206f6620546f6b656e204220\n        /* \"#utility.yul\":5286:5287   */\n      0x00\n        /* \"#utility.yul\":5278:5284   */\n      dup3\n        /* \"#utility.yul\":5274:5288   */\n      add\n        /* \"#utility.yul\":5267:5325   */\n      mstore\n        /* \"#utility.yul\":5359:5376   */\n      0x696e2074686520636f6e74726163740000000000000000000000000000000000\n        /* \"#utility.yul\":5354:5356   */\n      0x20\n        /* \"#utility.yul\":5346:5352   */\n      dup3\n        /* \"#utility.yul\":5342:5357   */\n      add\n        /* \"#utility.yul\":5335:5377   */\n      mstore\n        /* \"#utility.yul\":5150:5384   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5390:5756   */\n    tag_186:\n        /* \"#utility.yul\":5532:5535   */\n      0x00\n        /* \"#utility.yul\":5553:5620   */\n      tag_262\n        /* \"#utility.yul\":5617:5619   */\n      0x2f\n        /* \"#utility.yul\":5612:5615   */\n      dup4\n        /* \"#utility.yul\":5553:5620   */\n      tag_181\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5546:5620   */\n      swap2\n      pop\n        /* \"#utility.yul\":5629:5722   */\n      tag_263\n        /* \"#utility.yul\":5718:5721   */\n      dup3\n        /* \"#utility.yul\":5629:5722   */\n      tag_185\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":5747:5749   */\n      0x40\n        /* \"#utility.yul\":5742:5745   */\n      dup3\n        /* \"#utility.yul\":5738:5750   */\n      add\n        /* \"#utility.yul\":5731:5750   */\n      swap1\n      pop\n        /* \"#utility.yul\":5390:5756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5762:6181   */\n    tag_65:\n        /* \"#utility.yul\":5928:5932   */\n      0x00\n        /* \"#utility.yul\":5966:5968   */\n      0x20\n        /* \"#utility.yul\":5955:5964   */\n      dup3\n        /* \"#utility.yul\":5951:5969   */\n      add\n        /* \"#utility.yul\":5943:5969   */\n      swap1\n      pop\n        /* \"#utility.yul\":6015:6024   */\n      dup2\n        /* \"#utility.yul\":6009:6013   */\n      dup2\n        /* \"#utility.yul\":6005:6025   */\n      sub\n        /* \"#utility.yul\":6001:6002   */\n      0x00\n        /* \"#utility.yul\":5990:5999   */\n      dup4\n        /* \"#utility.yul\":5986:6003   */\n      add\n        /* \"#utility.yul\":5979:6026   */\n      mstore\n        /* \"#utility.yul\":6043:6174   */\n      tag_265\n        /* \"#utility.yul\":6169:6173   */\n      dup2\n        /* \"#utility.yul\":6043:6174   */\n      tag_186\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":6035:6174   */\n      swap1\n      pop\n        /* \"#utility.yul\":5762:6181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6187:6629   */\n    tag_67:\n        /* \"#utility.yul\":6336:6340   */\n      0x00\n        /* \"#utility.yul\":6374:6376   */\n      0x60\n        /* \"#utility.yul\":6363:6372   */\n      dup3\n        /* \"#utility.yul\":6359:6377   */\n      add\n        /* \"#utility.yul\":6351:6377   */\n      swap1\n      pop\n        /* \"#utility.yul\":6387:6458   */\n      tag_267\n        /* \"#utility.yul\":6455:6456   */\n      0x00\n        /* \"#utility.yul\":6444:6453   */\n      dup4\n        /* \"#utility.yul\":6440:6457   */\n      add\n        /* \"#utility.yul\":6431:6437   */\n      dup7\n        /* \"#utility.yul\":6387:6458   */\n      tag_178\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":6468:6540   */\n      tag_268\n        /* \"#utility.yul\":6536:6538   */\n      0x20\n        /* \"#utility.yul\":6525:6534   */\n      dup4\n        /* \"#utility.yul\":6521:6539   */\n      add\n        /* \"#utility.yul\":6512:6518   */\n      dup6\n        /* \"#utility.yul\":6468:6540   */\n      tag_178\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":6550:6622   */\n      tag_269\n        /* \"#utility.yul\":6618:6620   */\n      0x40\n        /* \"#utility.yul\":6607:6616   */\n      dup4\n        /* \"#utility.yul\":6603:6621   */\n      add\n        /* \"#utility.yul\":6594:6600   */\n      dup5\n        /* \"#utility.yul\":6550:6622   */\n      tag_176\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6187:6629   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6635:6725   */\n    tag_187:\n        /* \"#utility.yul\":6669:6676   */\n      0x00\n        /* \"#utility.yul\":6712:6717   */\n      dup2\n        /* \"#utility.yul\":6705:6718   */\n      iszero\n        /* \"#utility.yul\":6698:6719   */\n      iszero\n        /* \"#utility.yul\":6687:6719   */\n      swap1\n      pop\n        /* \"#utility.yul\":6635:6725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6731:6847   */\n    tag_188:\n        /* \"#utility.yul\":6801:6822   */\n      tag_272\n        /* \"#utility.yul\":6816:6821   */\n      dup2\n        /* \"#utility.yul\":6801:6822   */\n      tag_187\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":6794:6799   */\n      dup2\n        /* \"#utility.yul\":6791:6823   */\n      eq\n        /* \"#utility.yul\":6781:6841   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":6837:6838   */\n      0x00\n        /* \"#utility.yul\":6834:6835   */\n      dup1\n        /* \"#utility.yul\":6827:6839   */\n      revert\n        /* \"#utility.yul\":6781:6841   */\n    tag_273:\n        /* \"#utility.yul\":6731:6847   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6853:6990   */\n    tag_189:\n        /* \"#utility.yul\":6907:6912   */\n      0x00\n        /* \"#utility.yul\":6938:6944   */\n      dup2\n        /* \"#utility.yul\":6932:6945   */\n      mload\n        /* \"#utility.yul\":6923:6945   */\n      swap1\n      pop\n        /* \"#utility.yul\":6954:6984   */\n      tag_275\n        /* \"#utility.yul\":6978:6983   */\n      dup2\n        /* \"#utility.yul\":6954:6984   */\n      tag_188\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":6853:6990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6996:7341   */\n    tag_71:\n        /* \"#utility.yul\":7063:7069   */\n      0x00\n        /* \"#utility.yul\":7112:7114   */\n      0x20\n        /* \"#utility.yul\":7100:7109   */\n      dup3\n        /* \"#utility.yul\":7091:7098   */\n      dup5\n        /* \"#utility.yul\":7087:7110   */\n      sub\n        /* \"#utility.yul\":7083:7115   */\n      slt\n        /* \"#utility.yul\":7080:7199   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":7118:7197   */\n      tag_278\n      tag_171\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":7080:7199   */\n    tag_277:\n        /* \"#utility.yul\":7238:7239   */\n      0x00\n        /* \"#utility.yul\":7263:7324   */\n      tag_279\n        /* \"#utility.yul\":7316:7323   */\n      dup5\n        /* \"#utility.yul\":7307:7313   */\n      dup3\n        /* \"#utility.yul\":7296:7305   */\n      dup6\n        /* \"#utility.yul\":7292:7314   */\n      add\n        /* \"#utility.yul\":7263:7324   */\n      tag_189\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7253:7324   */\n      swap2\n      pop\n        /* \"#utility.yul\":7209:7334   */\n      pop\n        /* \"#utility.yul\":6996:7341   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7347:7520   */\n    tag_190:\n        /* \"#utility.yul\":7487:7512   */\n      0x546f6b656e2041207472616e73666572206661696c6564000000000000000000\n        /* \"#utility.yul\":7483:7484   */\n      0x00\n        /* \"#utility.yul\":7475:7481   */\n      dup3\n        /* \"#utility.yul\":7471:7485   */\n      add\n        /* \"#utility.yul\":7464:7513   */\n      mstore\n        /* \"#utility.yul\":7347:7520   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7526:7892   */\n    tag_191:\n        /* \"#utility.yul\":7668:7671   */\n      0x00\n        /* \"#utility.yul\":7689:7756   */\n      tag_282\n        /* \"#utility.yul\":7753:7755   */\n      0x17\n        /* \"#utility.yul\":7748:7751   */\n      dup4\n        /* \"#utility.yul\":7689:7756   */\n      tag_181\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":7682:7756   */\n      swap2\n      pop\n        /* \"#utility.yul\":7765:7858   */\n      tag_283\n        /* \"#utility.yul\":7854:7857   */\n      dup3\n        /* \"#utility.yul\":7765:7858   */\n      tag_190\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":7883:7885   */\n      0x20\n        /* \"#utility.yul\":7878:7881   */\n      dup3\n        /* \"#utility.yul\":7874:7886   */\n      add\n        /* \"#utility.yul\":7867:7886   */\n      swap1\n      pop\n        /* \"#utility.yul\":7526:7892   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7898:8317   */\n    tag_74:\n        /* \"#utility.yul\":8064:8068   */\n      0x00\n        /* \"#utility.yul\":8102:8104   */\n      0x20\n        /* \"#utility.yul\":8091:8100   */\n      dup3\n        /* \"#utility.yul\":8087:8105   */\n      add\n        /* \"#utility.yul\":8079:8105   */\n      swap1\n      pop\n        /* \"#utility.yul\":8151:8160   */\n      dup2\n        /* \"#utility.yul\":8145:8149   */\n      dup2\n        /* \"#utility.yul\":8141:8161   */\n      sub\n        /* \"#utility.yul\":8137:8138   */\n      0x00\n        /* \"#utility.yul\":8126:8135   */\n      dup4\n        /* \"#utility.yul\":8122:8139   */\n      add\n        /* \"#utility.yul\":8115:8162   */\n      mstore\n        /* \"#utility.yul\":8179:8310   */\n      tag_285\n        /* \"#utility.yul\":8305:8309   */\n      dup2\n        /* \"#utility.yul\":8179:8310   */\n      tag_191\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":8171:8310   */\n      swap1\n      pop\n        /* \"#utility.yul\":7898:8317   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8323:8655   */\n    tag_76:\n        /* \"#utility.yul\":8444:8448   */\n      0x00\n        /* \"#utility.yul\":8482:8484   */\n      0x40\n        /* \"#utility.yul\":8471:8480   */\n      dup3\n        /* \"#utility.yul\":8467:8485   */\n      add\n        /* \"#utility.yul\":8459:8485   */\n      swap1\n      pop\n        /* \"#utility.yul\":8495:8566   */\n      tag_287\n        /* \"#utility.yul\":8563:8564   */\n      0x00\n        /* \"#utility.yul\":8552:8561   */\n      dup4\n        /* \"#utility.yul\":8548:8565   */\n      add\n        /* \"#utility.yul\":8539:8545   */\n      dup6\n        /* \"#utility.yul\":8495:8566   */\n      tag_178\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":8576:8648   */\n      tag_288\n        /* \"#utility.yul\":8644:8646   */\n      0x20\n        /* \"#utility.yul\":8633:8642   */\n      dup4\n        /* \"#utility.yul\":8629:8647   */\n      add\n        /* \"#utility.yul\":8620:8626   */\n      dup5\n        /* \"#utility.yul\":8576:8648   */\n      tag_176\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":8323:8655   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8661:8834   */\n    tag_192:\n        /* \"#utility.yul\":8801:8826   */\n      0x546f6b656e2042207472616e73666572206661696c6564000000000000000000\n        /* \"#utility.yul\":8797:8798   */\n      0x00\n        /* \"#utility.yul\":8789:8795   */\n      dup3\n        /* \"#utility.yul\":8785:8799   */\n      add\n        /* \"#utility.yul\":8778:8827   */\n      mstore\n        /* \"#utility.yul\":8661:8834   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8840:9206   */\n    tag_193:\n        /* \"#utility.yul\":8982:8985   */\n      0x00\n        /* \"#utility.yul\":9003:9070   */\n      tag_291\n        /* \"#utility.yul\":9067:9069   */\n      0x17\n        /* \"#utility.yul\":9062:9065   */\n      dup4\n        /* \"#utility.yul\":9003:9070   */\n      tag_181\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":8996:9070   */\n      swap2\n      pop\n        /* \"#utility.yul\":9079:9172   */\n      tag_292\n        /* \"#utility.yul\":9168:9171   */\n      dup3\n        /* \"#utility.yul\":9079:9172   */\n      tag_192\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":9197:9199   */\n      0x20\n        /* \"#utility.yul\":9192:9195   */\n      dup3\n        /* \"#utility.yul\":9188:9200   */\n      add\n        /* \"#utility.yul\":9181:9200   */\n      swap1\n      pop\n        /* \"#utility.yul\":8840:9206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9212:9631   */\n    tag_82:\n        /* \"#utility.yul\":9378:9382   */\n      0x00\n        /* \"#utility.yul\":9416:9418   */\n      0x20\n        /* \"#utility.yul\":9405:9414   */\n      dup3\n        /* \"#utility.yul\":9401:9419   */\n      add\n        /* \"#utility.yul\":9393:9419   */\n      swap1\n      pop\n        /* \"#utility.yul\":9465:9474   */\n      dup2\n        /* \"#utility.yul\":9459:9463   */\n      dup2\n        /* \"#utility.yul\":9455:9475   */\n      sub\n        /* \"#utility.yul\":9451:9452   */\n      0x00\n        /* \"#utility.yul\":9440:9449   */\n      dup4\n        /* \"#utility.yul\":9436:9453   */\n      add\n        /* \"#utility.yul\":9429:9476   */\n      mstore\n        /* \"#utility.yul\":9493:9624   */\n      tag_294\n        /* \"#utility.yul\":9619:9623   */\n      dup2\n        /* \"#utility.yul\":9493:9624   */\n      tag_193\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":9485:9624   */\n      swap1\n      pop\n        /* \"#utility.yul\":9212:9631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9637:9969   */\n    tag_84:\n        /* \"#utility.yul\":9758:9762   */\n      0x00\n        /* \"#utility.yul\":9796:9798   */\n      0x40\n        /* \"#utility.yul\":9785:9794   */\n      dup3\n        /* \"#utility.yul\":9781:9799   */\n      add\n        /* \"#utility.yul\":9773:9799   */\n      swap1\n      pop\n        /* \"#utility.yul\":9809:9880   */\n      tag_296\n        /* \"#utility.yul\":9877:9878   */\n      0x00\n        /* \"#utility.yul\":9866:9875   */\n      dup4\n        /* \"#utility.yul\":9862:9879   */\n      add\n        /* \"#utility.yul\":9853:9859   */\n      dup6\n        /* \"#utility.yul\":9809:9880   */\n      tag_176\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":9890:9962   */\n      tag_297\n        /* \"#utility.yul\":9958:9960   */\n      0x20\n        /* \"#utility.yul\":9947:9956   */\n      dup4\n        /* \"#utility.yul\":9943:9961   */\n      add\n        /* \"#utility.yul\":9934:9940   */\n      dup5\n        /* \"#utility.yul\":9890:9962   */\n      tag_176\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":9637:9969   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9975:10209   */\n    tag_194:\n        /* \"#utility.yul\":10115:10149   */\n      0x496e73756666696369656e742062616c616e6365206f6620546f6b656e204120\n        /* \"#utility.yul\":10111:10112   */\n      0x00\n        /* \"#utility.yul\":10103:10109   */\n      dup3\n        /* \"#utility.yul\":10099:10113   */\n      add\n        /* \"#utility.yul\":10092:10150   */\n      mstore\n        /* \"#utility.yul\":10184:10201   */\n      0x696e2074686520636f6e74726163740000000000000000000000000000000000\n        /* \"#utility.yul\":10179:10181   */\n      0x20\n        /* \"#utility.yul\":10171:10177   */\n      dup3\n        /* \"#utility.yul\":10167:10182   */\n      add\n        /* \"#utility.yul\":10160:10202   */\n      mstore\n        /* \"#utility.yul\":9975:10209   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10215:10581   */\n    tag_195:\n        /* \"#utility.yul\":10357:10360   */\n      0x00\n        /* \"#utility.yul\":10378:10445   */\n      tag_300\n        /* \"#utility.yul\":10442:10444   */\n      0x2f\n        /* \"#utility.yul\":10437:10440   */\n      dup4\n        /* \"#utility.yul\":10378:10445   */\n      tag_181\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":10371:10445   */\n      swap2\n      pop\n        /* \"#utility.yul\":10454:10547   */\n      tag_301\n        /* \"#utility.yul\":10543:10546   */\n      dup3\n        /* \"#utility.yul\":10454:10547   */\n      tag_194\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":10572:10574   */\n      0x40\n        /* \"#utility.yul\":10567:10570   */\n      dup3\n        /* \"#utility.yul\":10563:10575   */\n      add\n        /* \"#utility.yul\":10556:10575   */\n      swap1\n      pop\n        /* \"#utility.yul\":10215:10581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10587:11006   */\n    tag_102:\n        /* \"#utility.yul\":10753:10757   */\n      0x00\n        /* \"#utility.yul\":10791:10793   */\n      0x20\n        /* \"#utility.yul\":10780:10789   */\n      dup3\n        /* \"#utility.yul\":10776:10794   */\n      add\n        /* \"#utility.yul\":10768:10794   */\n      swap1\n      pop\n        /* \"#utility.yul\":10840:10849   */\n      dup2\n        /* \"#utility.yul\":10834:10838   */\n      dup2\n        /* \"#utility.yul\":10830:10850   */\n      sub\n        /* \"#utility.yul\":10826:10827   */\n      0x00\n        /* \"#utility.yul\":10815:10824   */\n      dup4\n        /* \"#utility.yul\":10811:10828   */\n      add\n        /* \"#utility.yul\":10804:10851   */\n      mstore\n        /* \"#utility.yul\":10868:10999   */\n      tag_303\n        /* \"#utility.yul\":10994:10998   */\n      dup2\n        /* \"#utility.yul\":10868:10999   */\n      tag_195\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":10860:10999   */\n      swap1\n      pop\n        /* \"#utility.yul\":10587:11006   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11012:11238   */\n    tag_196:\n        /* \"#utility.yul\":11152:11186   */\n      0x45786368616e67652072617465206d7573742062652067726561746572207468\n        /* \"#utility.yul\":11148:11149   */\n      0x00\n        /* \"#utility.yul\":11140:11146   */\n      dup3\n        /* \"#utility.yul\":11136:11150   */\n      add\n        /* \"#utility.yul\":11129:11187   */\n      mstore\n        /* \"#utility.yul\":11221:11230   */\n      0x616e207a65726f00000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11216:11218   */\n      0x20\n        /* \"#utility.yul\":11208:11214   */\n      dup3\n        /* \"#utility.yul\":11204:11219   */\n      add\n        /* \"#utility.yul\":11197:11231   */\n      mstore\n        /* \"#utility.yul\":11012:11238   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11244:11610   */\n    tag_197:\n        /* \"#utility.yul\":11386:11389   */\n      0x00\n        /* \"#utility.yul\":11407:11474   */\n      tag_306\n        /* \"#utility.yul\":11471:11473   */\n      0x27\n        /* \"#utility.yul\":11466:11469   */\n      dup4\n        /* \"#utility.yul\":11407:11474   */\n      tag_181\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":11400:11474   */\n      swap2\n      pop\n        /* \"#utility.yul\":11483:11576   */\n      tag_307\n        /* \"#utility.yul\":11572:11575   */\n      dup3\n        /* \"#utility.yul\":11483:11576   */\n      tag_196\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":11601:11603   */\n      0x40\n        /* \"#utility.yul\":11596:11599   */\n      dup3\n        /* \"#utility.yul\":11592:11604   */\n      add\n        /* \"#utility.yul\":11585:11604   */\n      swap1\n      pop\n        /* \"#utility.yul\":11244:11610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11616:12035   */\n    tag_132:\n        /* \"#utility.yul\":11782:11786   */\n      0x00\n        /* \"#utility.yul\":11820:11822   */\n      0x20\n        /* \"#utility.yul\":11809:11818   */\n      dup3\n        /* \"#utility.yul\":11805:11823   */\n      add\n        /* \"#utility.yul\":11797:11823   */\n      swap1\n      pop\n        /* \"#utility.yul\":11869:11878   */\n      dup2\n        /* \"#utility.yul\":11863:11867   */\n      dup2\n        /* \"#utility.yul\":11859:11879   */\n      sub\n        /* \"#utility.yul\":11855:11856   */\n      0x00\n        /* \"#utility.yul\":11844:11853   */\n      dup4\n        /* \"#utility.yul\":11840:11857   */\n      add\n        /* \"#utility.yul\":11833:11880   */\n      mstore\n        /* \"#utility.yul\":11897:12028   */\n      tag_309\n        /* \"#utility.yul\":12023:12027   */\n      dup2\n        /* \"#utility.yul\":11897:12028   */\n      tag_197\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":11889:12028   */\n      swap1\n      pop\n        /* \"#utility.yul\":11616:12035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12041:12221   */\n    tag_198:\n        /* \"#utility.yul\":12089:12166   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12086:12087   */\n      0x00\n        /* \"#utility.yul\":12079:12167   */\n      mstore\n        /* \"#utility.yul\":12186:12190   */\n      0x11\n        /* \"#utility.yul\":12183:12184   */\n      0x04\n        /* \"#utility.yul\":12176:12191   */\n      mstore\n        /* \"#utility.yul\":12210:12214   */\n      0x24\n        /* \"#utility.yul\":12207:12208   */\n      0x00\n        /* \"#utility.yul\":12200:12215   */\n      revert\n        /* \"#utility.yul\":12227:12637   */\n    tag_151:\n        /* \"#utility.yul\":12267:12274   */\n      0x00\n        /* \"#utility.yul\":12290:12310   */\n      tag_312\n        /* \"#utility.yul\":12308:12309   */\n      dup3\n        /* \"#utility.yul\":12290:12310   */\n      tag_173\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":12285:12310   */\n      swap2\n      pop\n        /* \"#utility.yul\":12324:12344   */\n      tag_313\n        /* \"#utility.yul\":12342:12343   */\n      dup4\n        /* \"#utility.yul\":12324:12344   */\n      tag_173\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":12319:12344   */\n      swap3\n      pop\n        /* \"#utility.yul\":12379:12380   */\n      dup3\n        /* \"#utility.yul\":12376:12377   */\n      dup3\n        /* \"#utility.yul\":12372:12381   */\n      mul\n        /* \"#utility.yul\":12401:12431   */\n      tag_314\n        /* \"#utility.yul\":12419:12430   */\n      dup2\n        /* \"#utility.yul\":12401:12431   */\n      tag_173\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":12390:12431   */\n      swap2\n      pop\n        /* \"#utility.yul\":12580:12581   */\n      dup3\n        /* \"#utility.yul\":12571:12578   */\n      dup3\n        /* \"#utility.yul\":12567:12582   */\n      div\n        /* \"#utility.yul\":12564:12565   */\n      dup5\n        /* \"#utility.yul\":12561:12583   */\n      eq\n        /* \"#utility.yul\":12541:12542   */\n      dup4\n        /* \"#utility.yul\":12534:12543   */\n      iszero\n        /* \"#utility.yul\":12514:12597   */\n      or\n        /* \"#utility.yul\":12491:12630   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":12610:12628   */\n      tag_316\n      tag_198\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":12491:12630   */\n    tag_315:\n        /* \"#utility.yul\":12275:12637   */\n      pop\n        /* \"#utility.yul\":12227:12637   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12643:12823   */\n    tag_199:\n        /* \"#utility.yul\":12691:12768   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12688:12689   */\n      0x00\n        /* \"#utility.yul\":12681:12769   */\n      mstore\n        /* \"#utility.yul\":12788:12792   */\n      0x12\n        /* \"#utility.yul\":12785:12786   */\n      0x04\n        /* \"#utility.yul\":12778:12793   */\n      mstore\n        /* \"#utility.yul\":12812:12816   */\n      0x24\n        /* \"#utility.yul\":12809:12810   */\n      0x00\n        /* \"#utility.yul\":12802:12817   */\n      revert\n        /* \"#utility.yul\":12829:13014   */\n    tag_162:\n        /* \"#utility.yul\":12869:12870   */\n      0x00\n        /* \"#utility.yul\":12886:12906   */\n      tag_319\n        /* \"#utility.yul\":12904:12905   */\n      dup3\n        /* \"#utility.yul\":12886:12906   */\n      tag_173\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":12881:12906   */\n      swap2\n      pop\n        /* \"#utility.yul\":12920:12940   */\n      tag_320\n        /* \"#utility.yul\":12938:12939   */\n      dup4\n        /* \"#utility.yul\":12920:12940   */\n      tag_173\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":12915:12940   */\n      swap3\n      pop\n        /* \"#utility.yul\":12959:12960   */\n      dup3\n        /* \"#utility.yul\":12949:12984   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":12964:12982   */\n      tag_322\n      tag_199\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":12949:12984   */\n    tag_321:\n        /* \"#utility.yul\":13006:13007   */\n      dup3\n        /* \"#utility.yul\":13003:13004   */\n      dup3\n        /* \"#utility.yul\":12999:13008   */\n      div\n        /* \"#utility.yul\":12994:13008   */\n      swap1\n      pop\n        /* \"#utility.yul\":12829:13014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122085065c738ec38f2a797ca1b21f74864ad4bbf54e933658a3e19270dbaf68691c64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_655": {
									"entryPoint": null,
									"id": 655,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 628,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$225_fromMemory": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$225t_contract$_IERC20_$225t_uint256t_address_fromMemory": {
									"entryPoint": 1044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_25df88c116c36fbc96c219fa64731a88317dfb085ac9373984407525be7d21e5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6734a930782122c1d955d9cd5c28ef56cbbbf13eae64d46b8f0dc7f2d7843bfa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25df88c116c36fbc96c219fa64731a88317dfb085ac9373984407525be7d21e5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6734a930782122c1d955d9cd5c28ef56cbbbf13eae64d46b8f0dc7f2d7843bfa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$225": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_25df88c116c36fbc96c219fa64731a88317dfb085ac9373984407525be7d21e5": {
									"entryPoint": 1215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6734a930782122c1d955d9cd5c28ef56cbbbf13eae64d46b8f0dc7f2d7843bfa": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$225": {
									"entryPoint": 894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6055:5",
										"nodeType": "YulBlock",
										"src": "0:6055:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "627:51:5",
													"nodeType": "YulBlock",
													"src": "627:51:5",
													"statements": [
														{
															"nativeSrc": "637:35:5",
															"nodeType": "YulAssignment",
															"src": "637:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:5"
																},
																"nativeSrc": "648:24:5",
																"nodeType": "YulFunctionCall",
																"src": "648:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$225",
												"nativeSrc": "568:110:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:5",
														"nodeType": "YulTypedName",
														"src": "609:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:5",
														"nodeType": "YulTypedName",
														"src": "619:7:5",
														"type": ""
													}
												],
												"src": "568:110:5"
											},
											{
												"body": {
													"nativeSrc": "741:93:5",
													"nodeType": "YulBlock",
													"src": "741:93:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:5",
																"nodeType": "YulBlock",
																"src": "812:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:5",
																					"nodeType": "YulLiteral",
																					"src": "821:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:5",
																					"nodeType": "YulLiteral",
																					"src": "824:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:5"
																			},
																			"nativeSrc": "814:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:5"
																		},
																		"nativeSrc": "814:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$225",
																					"nativeSrc": "771:31:5",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:5"
																				},
																				"nativeSrc": "771:38:5",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:5"
																		},
																		"nativeSrc": "761:49:5",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:5"
																},
																"nativeSrc": "754:57:5",
																"nodeType": "YulFunctionCall",
																"src": "754:57:5"
															},
															"nativeSrc": "751:77:5",
															"nodeType": "YulIf",
															"src": "751:77:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$225",
												"nativeSrc": "684:150:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:5",
														"nodeType": "YulTypedName",
														"src": "734:5:5",
														"type": ""
													}
												],
												"src": "684:150:5"
											},
											{
												"body": {
													"nativeSrc": "917:94:5",
													"nodeType": "YulBlock",
													"src": "917:94:5",
													"statements": [
														{
															"nativeSrc": "927:22:5",
															"nodeType": "YulAssignment",
															"src": "927:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:5"
																},
																"nativeSrc": "936:13:5",
																"nodeType": "YulFunctionCall",
																"src": "936:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$225",
																	"nativeSrc": "958:40:5",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:5"
																},
																"nativeSrc": "958:47:5",
																"nodeType": "YulFunctionCall",
																"src": "958:47:5"
															},
															"nativeSrc": "958:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$225_fromMemory",
												"nativeSrc": "840:171:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:5",
														"nodeType": "YulTypedName",
														"src": "895:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:5",
														"nodeType": "YulTypedName",
														"src": "903:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:5",
														"nodeType": "YulTypedName",
														"src": "911:5:5",
														"type": ""
													}
												],
												"src": "840:171:5"
											},
											{
												"body": {
													"nativeSrc": "1062:32:5",
													"nodeType": "YulBlock",
													"src": "1062:32:5",
													"statements": [
														{
															"nativeSrc": "1072:16:5",
															"nodeType": "YulAssignment",
															"src": "1072:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1083:5:5",
																"nodeType": "YulIdentifier",
																"src": "1083:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1072:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1072:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1017:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1044:5:5",
														"nodeType": "YulTypedName",
														"src": "1044:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1054:7:5",
														"nodeType": "YulTypedName",
														"src": "1054:7:5",
														"type": ""
													}
												],
												"src": "1017:77:5"
											},
											{
												"body": {
													"nativeSrc": "1143:79:5",
													"nodeType": "YulBlock",
													"src": "1143:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1200:16:5",
																"nodeType": "YulBlock",
																"src": "1200:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1209:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1212:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1202:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:5"
																			},
																			"nativeSrc": "1202:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:5"
																		},
																		"nativeSrc": "1202:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1166:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1166:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1191:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1191:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1173:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1173:17:5"
																				},
																				"nativeSrc": "1173:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1173:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1163:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1163:2:5"
																		},
																		"nativeSrc": "1163:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1156:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:5"
																},
																"nativeSrc": "1156:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1156:43:5"
															},
															"nativeSrc": "1153:63:5",
															"nodeType": "YulIf",
															"src": "1153:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1100:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1136:5:5",
														"nodeType": "YulTypedName",
														"src": "1136:5:5",
														"type": ""
													}
												],
												"src": "1100:122:5"
											},
											{
												"body": {
													"nativeSrc": "1291:80:5",
													"nodeType": "YulBlock",
													"src": "1291:80:5",
													"statements": [
														{
															"nativeSrc": "1301:22:5",
															"nodeType": "YulAssignment",
															"src": "1301:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1316:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1316:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1310:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1310:5:5"
																},
																"nativeSrc": "1310:13:5",
																"nodeType": "YulFunctionCall",
																"src": "1310:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1301:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1301:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1359:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1359:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1332:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1332:26:5"
																},
																"nativeSrc": "1332:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1332:33:5"
															},
															"nativeSrc": "1332:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1332:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1228:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1269:6:5",
														"nodeType": "YulTypedName",
														"src": "1269:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1277:3:5",
														"nodeType": "YulTypedName",
														"src": "1277:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1285:5:5",
														"nodeType": "YulTypedName",
														"src": "1285:5:5",
														"type": ""
													}
												],
												"src": "1228:143:5"
											},
											{
												"body": {
													"nativeSrc": "1420:79:5",
													"nodeType": "YulBlock",
													"src": "1420:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1477:16:5",
																"nodeType": "YulBlock",
																"src": "1477:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1486:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1486:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1489:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1489:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1479:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1479:6:5"
																			},
																			"nativeSrc": "1479:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1479:12:5"
																		},
																		"nativeSrc": "1479:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1479:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1443:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1443:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1468:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1468:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1450:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1450:17:5"
																				},
																				"nativeSrc": "1450:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1450:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1440:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1440:2:5"
																		},
																		"nativeSrc": "1440:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1440:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1433:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:5"
																},
																"nativeSrc": "1433:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1433:43:5"
															},
															"nativeSrc": "1430:63:5",
															"nodeType": "YulIf",
															"src": "1430:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1377:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1413:5:5",
														"nodeType": "YulTypedName",
														"src": "1413:5:5",
														"type": ""
													}
												],
												"src": "1377:122:5"
											},
											{
												"body": {
													"nativeSrc": "1568:80:5",
													"nodeType": "YulBlock",
													"src": "1568:80:5",
													"statements": [
														{
															"nativeSrc": "1578:22:5",
															"nodeType": "YulAssignment",
															"src": "1578:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1593:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1593:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1587:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1587:5:5"
																},
																"nativeSrc": "1587:13:5",
																"nodeType": "YulFunctionCall",
																"src": "1587:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1578:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1636:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1636:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1609:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1609:26:5"
																},
																"nativeSrc": "1609:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1609:33:5"
															},
															"nativeSrc": "1609:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1609:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1505:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1546:6:5",
														"nodeType": "YulTypedName",
														"src": "1546:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1554:3:5",
														"nodeType": "YulTypedName",
														"src": "1554:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1562:5:5",
														"nodeType": "YulTypedName",
														"src": "1562:5:5",
														"type": ""
													}
												],
												"src": "1505:143:5"
											},
											{
												"body": {
													"nativeSrc": "1810:720:5",
													"nodeType": "YulBlock",
													"src": "1810:720:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1857:83:5",
																"nodeType": "YulBlock",
																"src": "1857:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1859:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1859:77:5"
																			},
																			"nativeSrc": "1859:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1859:79:5"
																		},
																		"nativeSrc": "1859:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1859:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1831:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1831:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1840:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1840:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1827:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:5"
																		},
																		"nativeSrc": "1827:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1852:3:5",
																		"nodeType": "YulLiteral",
																		"src": "1852:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1823:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1823:3:5"
																},
																"nativeSrc": "1823:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1823:33:5"
															},
															"nativeSrc": "1820:120:5",
															"nodeType": "YulIf",
															"src": "1820:120:5"
														},
														{
															"nativeSrc": "1950:142:5",
															"nodeType": "YulBlock",
															"src": "1950:142:5",
															"statements": [
																{
																	"nativeSrc": "1965:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1965:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1979:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1979:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1969:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1969:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1994:88:5",
																	"nodeType": "YulAssignment",
																	"src": "1994:88:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2054:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2054:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2065:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2065:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2050:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2050:3:5"
																				},
																				"nativeSrc": "2050:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2050:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2074:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2074:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$225_fromMemory",
																			"nativeSrc": "2004:45:5",
																			"nodeType": "YulIdentifier",
																			"src": "2004:45:5"
																		},
																		"nativeSrc": "2004:78:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2004:78:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1994:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1994:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2102:143:5",
															"nodeType": "YulBlock",
															"src": "2102:143:5",
															"statements": [
																{
																	"nativeSrc": "2117:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2117:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2131:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2131:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2121:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2121:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2147:88:5",
																	"nodeType": "YulAssignment",
																	"src": "2147:88:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2207:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2207:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2218:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2218:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2203:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2203:3:5"
																				},
																				"nativeSrc": "2203:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2203:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2227:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2227:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$225_fromMemory",
																			"nativeSrc": "2157:45:5",
																			"nodeType": "YulIdentifier",
																			"src": "2157:45:5"
																		},
																		"nativeSrc": "2157:78:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:78:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2147:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2147:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2255:129:5",
															"nodeType": "YulBlock",
															"src": "2255:129:5",
															"statements": [
																{
																	"nativeSrc": "2270:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2270:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2284:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2284:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2274:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2274:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2300:74:5",
																	"nodeType": "YulAssignment",
																	"src": "2300:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2346:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2346:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2357:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2357:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2342:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2342:3:5"
																				},
																				"nativeSrc": "2342:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2342:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2366:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2366:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2310:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "2310:31:5"
																		},
																		"nativeSrc": "2310:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2310:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2300:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2300:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2394:129:5",
															"nodeType": "YulBlock",
															"src": "2394:129:5",
															"statements": [
																{
																	"nativeSrc": "2409:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2409:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2423:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2423:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2413:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2413:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2439:74:5",
																	"nodeType": "YulAssignment",
																	"src": "2439:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2485:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2485:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2496:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2496:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2481:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2481:3:5"
																				},
																				"nativeSrc": "2481:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2481:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2505:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2505:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2449:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "2449:31:5"
																		},
																		"nativeSrc": "2449:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2449:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2439:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2439:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$225t_contract$_IERC20_$225t_uint256t_address_fromMemory",
												"nativeSrc": "1654:876:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1756:9:5",
														"nodeType": "YulTypedName",
														"src": "1756:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1767:7:5",
														"nodeType": "YulTypedName",
														"src": "1767:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1779:6:5",
														"nodeType": "YulTypedName",
														"src": "1779:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1787:6:5",
														"nodeType": "YulTypedName",
														"src": "1787:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1795:6:5",
														"nodeType": "YulTypedName",
														"src": "1795:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1803:6:5",
														"nodeType": "YulTypedName",
														"src": "1803:6:5",
														"type": ""
													}
												],
												"src": "1654:876:5"
											},
											{
												"body": {
													"nativeSrc": "2601:53:5",
													"nodeType": "YulBlock",
													"src": "2601:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2618:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2618:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2641:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2641:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2623:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2623:17:5"
																		},
																		"nativeSrc": "2623:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2623:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2611:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2611:6:5"
																},
																"nativeSrc": "2611:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2611:37:5"
															},
															"nativeSrc": "2611:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2611:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2536:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2589:5:5",
														"nodeType": "YulTypedName",
														"src": "2589:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2596:3:5",
														"nodeType": "YulTypedName",
														"src": "2596:3:5",
														"type": ""
													}
												],
												"src": "2536:118:5"
											},
											{
												"body": {
													"nativeSrc": "2758:124:5",
													"nodeType": "YulBlock",
													"src": "2758:124:5",
													"statements": [
														{
															"nativeSrc": "2768:26:5",
															"nodeType": "YulAssignment",
															"src": "2768:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2780:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2780:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2791:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2791:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2776:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:5"
																},
																"nativeSrc": "2776:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2776:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2768:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2768:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2848:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2848:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2861:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2861:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2872:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2872:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2857:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:5"
																		},
																		"nativeSrc": "2857:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2857:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2804:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2804:43:5"
																},
																"nativeSrc": "2804:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2804:71:5"
															},
															"nativeSrc": "2804:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2804:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2660:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2730:9:5",
														"nodeType": "YulTypedName",
														"src": "2730:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2742:6:5",
														"nodeType": "YulTypedName",
														"src": "2742:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2753:4:5",
														"nodeType": "YulTypedName",
														"src": "2753:4:5",
														"type": ""
													}
												],
												"src": "2660:222:5"
											},
											{
												"body": {
													"nativeSrc": "2984:73:5",
													"nodeType": "YulBlock",
													"src": "2984:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3001:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3001:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3006:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3006:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2994:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2994:6:5"
																},
																"nativeSrc": "2994:19:5",
																"nodeType": "YulFunctionCall",
																"src": "2994:19:5"
															},
															"nativeSrc": "2994:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "2994:19:5"
														},
														{
															"nativeSrc": "3022:29:5",
															"nodeType": "YulAssignment",
															"src": "3022:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3041:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3041:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3046:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3046:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3037:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3037:3:5"
																},
																"nativeSrc": "3037:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3037:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3022:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "3022:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2888:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2956:3:5",
														"nodeType": "YulTypedName",
														"src": "2956:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2961:6:5",
														"nodeType": "YulTypedName",
														"src": "2961:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2972:11:5",
														"nodeType": "YulTypedName",
														"src": "2972:11:5",
														"type": ""
													}
												],
												"src": "2888:169:5"
											},
											{
												"body": {
													"nativeSrc": "3169:74:5",
													"nodeType": "YulBlock",
													"src": "3169:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3191:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3191:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3199:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3199:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3187:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3187:3:5"
																		},
																		"nativeSrc": "3187:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3187:14:5"
																	},
																	{
																		"hexValue": "546f6b656e204120616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "3203:32:5",
																		"nodeType": "YulLiteral",
																		"src": "3203:32:5",
																		"type": "",
																		"value": "Token A address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3180:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3180:6:5"
																},
																"nativeSrc": "3180:56:5",
																"nodeType": "YulFunctionCall",
																"src": "3180:56:5"
															},
															"nativeSrc": "3180:56:5",
															"nodeType": "YulExpressionStatement",
															"src": "3180:56:5"
														}
													]
												},
												"name": "store_literal_in_memory_25df88c116c36fbc96c219fa64731a88317dfb085ac9373984407525be7d21e5",
												"nativeSrc": "3063:180:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3161:6:5",
														"nodeType": "YulTypedName",
														"src": "3161:6:5",
														"type": ""
													}
												],
												"src": "3063:180:5"
											},
											{
												"body": {
													"nativeSrc": "3395:220:5",
													"nodeType": "YulBlock",
													"src": "3395:220:5",
													"statements": [
														{
															"nativeSrc": "3405:74:5",
															"nodeType": "YulAssignment",
															"src": "3405:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3471:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3471:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3476:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3476:2:5",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3412:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "3412:58:5"
																},
																"nativeSrc": "3412:67:5",
																"nodeType": "YulFunctionCall",
																"src": "3412:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3405:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3405:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3577:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3577:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25df88c116c36fbc96c219fa64731a88317dfb085ac9373984407525be7d21e5",
																	"nativeSrc": "3488:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "3488:88:5"
																},
																"nativeSrc": "3488:93:5",
																"nodeType": "YulFunctionCall",
																"src": "3488:93:5"
															},
															"nativeSrc": "3488:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "3488:93:5"
														},
														{
															"nativeSrc": "3590:19:5",
															"nodeType": "YulAssignment",
															"src": "3590:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3601:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3601:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3606:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3606:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3597:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3597:3:5"
																},
																"nativeSrc": "3597:12:5",
																"nodeType": "YulFunctionCall",
																"src": "3597:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3590:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3590:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25df88c116c36fbc96c219fa64731a88317dfb085ac9373984407525be7d21e5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3249:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3383:3:5",
														"nodeType": "YulTypedName",
														"src": "3383:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3391:3:5",
														"nodeType": "YulTypedName",
														"src": "3391:3:5",
														"type": ""
													}
												],
												"src": "3249:366:5"
											},
											{
												"body": {
													"nativeSrc": "3792:248:5",
													"nodeType": "YulBlock",
													"src": "3792:248:5",
													"statements": [
														{
															"nativeSrc": "3802:26:5",
															"nodeType": "YulAssignment",
															"src": "3802:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3814:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3814:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3825:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3825:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3810:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3810:3:5"
																},
																"nativeSrc": "3810:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3810:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3802:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3802:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3849:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3849:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3860:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3860:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3845:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3845:3:5"
																		},
																		"nativeSrc": "3845:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3845:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3868:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "3868:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3874:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3874:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3864:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3864:3:5"
																		},
																		"nativeSrc": "3864:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3864:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3838:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3838:6:5"
																},
																"nativeSrc": "3838:47:5",
																"nodeType": "YulFunctionCall",
																"src": "3838:47:5"
															},
															"nativeSrc": "3838:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "3838:47:5"
														},
														{
															"nativeSrc": "3894:139:5",
															"nodeType": "YulAssignment",
															"src": "3894:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4028:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4028:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25df88c116c36fbc96c219fa64731a88317dfb085ac9373984407525be7d21e5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3902:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "3902:124:5"
																},
																"nativeSrc": "3902:131:5",
																"nodeType": "YulFunctionCall",
																"src": "3902:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3894:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3894:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25df88c116c36fbc96c219fa64731a88317dfb085ac9373984407525be7d21e5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3621:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3772:9:5",
														"nodeType": "YulTypedName",
														"src": "3772:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3787:4:5",
														"nodeType": "YulTypedName",
														"src": "3787:4:5",
														"type": ""
													}
												],
												"src": "3621:419:5"
											},
											{
												"body": {
													"nativeSrc": "4152:74:5",
													"nodeType": "YulBlock",
													"src": "4152:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4174:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4174:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4182:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4182:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4170:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4170:3:5"
																		},
																		"nativeSrc": "4170:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4170:14:5"
																	},
																	{
																		"hexValue": "546f6b656e204220616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "4186:32:5",
																		"nodeType": "YulLiteral",
																		"src": "4186:32:5",
																		"type": "",
																		"value": "Token B address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4163:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4163:6:5"
																},
																"nativeSrc": "4163:56:5",
																"nodeType": "YulFunctionCall",
																"src": "4163:56:5"
															},
															"nativeSrc": "4163:56:5",
															"nodeType": "YulExpressionStatement",
															"src": "4163:56:5"
														}
													]
												},
												"name": "store_literal_in_memory_6734a930782122c1d955d9cd5c28ef56cbbbf13eae64d46b8f0dc7f2d7843bfa",
												"nativeSrc": "4046:180:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4144:6:5",
														"nodeType": "YulTypedName",
														"src": "4144:6:5",
														"type": ""
													}
												],
												"src": "4046:180:5"
											},
											{
												"body": {
													"nativeSrc": "4378:220:5",
													"nodeType": "YulBlock",
													"src": "4378:220:5",
													"statements": [
														{
															"nativeSrc": "4388:74:5",
															"nodeType": "YulAssignment",
															"src": "4388:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4454:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4454:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4459:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4459:2:5",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4395:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "4395:58:5"
																},
																"nativeSrc": "4395:67:5",
																"nodeType": "YulFunctionCall",
																"src": "4395:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4388:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4388:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4560:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4560:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6734a930782122c1d955d9cd5c28ef56cbbbf13eae64d46b8f0dc7f2d7843bfa",
																	"nativeSrc": "4471:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "4471:88:5"
																},
																"nativeSrc": "4471:93:5",
																"nodeType": "YulFunctionCall",
																"src": "4471:93:5"
															},
															"nativeSrc": "4471:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "4471:93:5"
														},
														{
															"nativeSrc": "4573:19:5",
															"nodeType": "YulAssignment",
															"src": "4573:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4584:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4584:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4589:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4589:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4580:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4580:3:5"
																},
																"nativeSrc": "4580:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4580:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4573:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4573:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6734a930782122c1d955d9cd5c28ef56cbbbf13eae64d46b8f0dc7f2d7843bfa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4232:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4366:3:5",
														"nodeType": "YulTypedName",
														"src": "4366:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4374:3:5",
														"nodeType": "YulTypedName",
														"src": "4374:3:5",
														"type": ""
													}
												],
												"src": "4232:366:5"
											},
											{
												"body": {
													"nativeSrc": "4775:248:5",
													"nodeType": "YulBlock",
													"src": "4775:248:5",
													"statements": [
														{
															"nativeSrc": "4785:26:5",
															"nodeType": "YulAssignment",
															"src": "4785:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4797:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4808:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4808:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4793:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:5"
																},
																"nativeSrc": "4793:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4793:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4785:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4832:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4832:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4843:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4843:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4828:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4828:3:5"
																		},
																		"nativeSrc": "4828:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4828:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4851:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "4851:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4857:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4857:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4847:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4847:3:5"
																		},
																		"nativeSrc": "4847:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4847:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4821:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:5"
																},
																"nativeSrc": "4821:47:5",
																"nodeType": "YulFunctionCall",
																"src": "4821:47:5"
															},
															"nativeSrc": "4821:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "4821:47:5"
														},
														{
															"nativeSrc": "4877:139:5",
															"nodeType": "YulAssignment",
															"src": "4877:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5011:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5011:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6734a930782122c1d955d9cd5c28ef56cbbbf13eae64d46b8f0dc7f2d7843bfa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4885:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "4885:124:5"
																},
																"nativeSrc": "4885:131:5",
																"nodeType": "YulFunctionCall",
																"src": "4885:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4877:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4877:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6734a930782122c1d955d9cd5c28ef56cbbbf13eae64d46b8f0dc7f2d7843bfa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4604:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4755:9:5",
														"nodeType": "YulTypedName",
														"src": "4755:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4770:4:5",
														"nodeType": "YulTypedName",
														"src": "4770:4:5",
														"type": ""
													}
												],
												"src": "4604:419:5"
											},
											{
												"body": {
													"nativeSrc": "5135:120:5",
													"nodeType": "YulBlock",
													"src": "5135:120:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5157:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5157:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5153:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5153:3:5"
																		},
																		"nativeSrc": "5153:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5153:14:5"
																	},
																	{
																		"hexValue": "45786368616e67652072617465206d7573742062652067726561746572207468",
																		"kind": "string",
																		"nativeSrc": "5169:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5169:34:5",
																		"type": "",
																		"value": "Exchange rate must be greater th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5146:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5146:6:5"
																},
																"nativeSrc": "5146:58:5",
																"nodeType": "YulFunctionCall",
																"src": "5146:58:5"
															},
															"nativeSrc": "5146:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "5146:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5225:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5225:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5233:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5233:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5221:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5221:3:5"
																		},
																		"nativeSrc": "5221:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5221:15:5"
																	},
																	{
																		"hexValue": "616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "5238:9:5",
																		"nodeType": "YulLiteral",
																		"src": "5238:9:5",
																		"type": "",
																		"value": "an zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5214:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5214:6:5"
																},
																"nativeSrc": "5214:34:5",
																"nodeType": "YulFunctionCall",
																"src": "5214:34:5"
															},
															"nativeSrc": "5214:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "5214:34:5"
														}
													]
												},
												"name": "store_literal_in_memory_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0",
												"nativeSrc": "5029:226:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5127:6:5",
														"nodeType": "YulTypedName",
														"src": "5127:6:5",
														"type": ""
													}
												],
												"src": "5029:226:5"
											},
											{
												"body": {
													"nativeSrc": "5407:220:5",
													"nodeType": "YulBlock",
													"src": "5407:220:5",
													"statements": [
														{
															"nativeSrc": "5417:74:5",
															"nodeType": "YulAssignment",
															"src": "5417:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5483:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5483:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5488:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5488:2:5",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5424:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "5424:58:5"
																},
																"nativeSrc": "5424:67:5",
																"nodeType": "YulFunctionCall",
																"src": "5424:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5417:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5417:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5589:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5589:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0",
																	"nativeSrc": "5500:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "5500:88:5"
																},
																"nativeSrc": "5500:93:5",
																"nodeType": "YulFunctionCall",
																"src": "5500:93:5"
															},
															"nativeSrc": "5500:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "5500:93:5"
														},
														{
															"nativeSrc": "5602:19:5",
															"nodeType": "YulAssignment",
															"src": "5602:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5613:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5613:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5618:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5618:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5609:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5609:3:5"
																},
																"nativeSrc": "5609:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5609:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5602:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5602:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5261:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5395:3:5",
														"nodeType": "YulTypedName",
														"src": "5395:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5403:3:5",
														"nodeType": "YulTypedName",
														"src": "5403:3:5",
														"type": ""
													}
												],
												"src": "5261:366:5"
											},
											{
												"body": {
													"nativeSrc": "5804:248:5",
													"nodeType": "YulBlock",
													"src": "5804:248:5",
													"statements": [
														{
															"nativeSrc": "5814:26:5",
															"nodeType": "YulAssignment",
															"src": "5814:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5826:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5826:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5837:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5837:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5822:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5822:3:5"
																},
																"nativeSrc": "5822:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5822:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5814:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5814:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5861:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5861:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5872:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5872:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5857:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5857:3:5"
																		},
																		"nativeSrc": "5857:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5857:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5880:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5880:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5886:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5886:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5876:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5876:3:5"
																		},
																		"nativeSrc": "5876:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5876:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5850:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5850:6:5"
																},
																"nativeSrc": "5850:47:5",
																"nodeType": "YulFunctionCall",
																"src": "5850:47:5"
															},
															"nativeSrc": "5850:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "5850:47:5"
														},
														{
															"nativeSrc": "5906:139:5",
															"nodeType": "YulAssignment",
															"src": "5906:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6040:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6040:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5914:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "5914:124:5"
																},
																"nativeSrc": "5914:131:5",
																"nodeType": "YulFunctionCall",
																"src": "5914:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5906:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5906:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5633:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5784:9:5",
														"nodeType": "YulTypedName",
														"src": "5784:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5799:4:5",
														"nodeType": "YulTypedName",
														"src": "5799:4:5",
														"type": ""
													}
												],
												"src": "5633:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$225(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$225(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$225(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$225_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$225(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$225t_contract$_IERC20_$225t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$225_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$225_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_25df88c116c36fbc96c219fa64731a88317dfb085ac9373984407525be7d21e5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token A address cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_25df88c116c36fbc96c219fa64731a88317dfb085ac9373984407525be7d21e5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_25df88c116c36fbc96c219fa64731a88317dfb085ac9373984407525be7d21e5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25df88c116c36fbc96c219fa64731a88317dfb085ac9373984407525be7d21e5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25df88c116c36fbc96c219fa64731a88317dfb085ac9373984407525be7d21e5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6734a930782122c1d955d9cd5c28ef56cbbbf13eae64d46b8f0dc7f2d7843bfa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token B address cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_6734a930782122c1d955d9cd5c28ef56cbbbf13eae64d46b8f0dc7f2d7843bfa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_6734a930782122c1d955d9cd5c28ef56cbbbf13eae64d46b8f0dc7f2d7843bfa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6734a930782122c1d955d9cd5c28ef56cbbbf13eae64d46b8f0dc7f2d7843bfa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6734a930782122c1d955d9cd5c28ef56cbbbf13eae64d46b8f0dc7f2d7843bfa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exchange rate must be greater th\")\n\n        mstore(add(memPtr, 32), \"an zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001a0938038062001a09833981810160405281019062000036919062000414565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a1919062000494565b60405180910390fd5b620000bb816200027460201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036200012d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000124906200050d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200019e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000195906200057b565b60405180910390fd5b5f8211620001e3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001da906200060f565b60405180910390fd5b8360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600381905550505050506200062f565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620003648262000339565b9050919050565b5f620003778262000358565b9050919050565b62000389816200036b565b811462000394575f80fd5b50565b5f81519050620003a7816200037e565b92915050565b5f819050919050565b620003c181620003ad565b8114620003cc575f80fd5b50565b5f81519050620003df81620003b6565b92915050565b620003f08162000358565b8114620003fb575f80fd5b50565b5f815190506200040e81620003e5565b92915050565b5f805f80608085870312156200042f576200042e62000335565b5b5f6200043e8782880162000397565b9450506020620004518782880162000397565b93505060406200046487828801620003cf565b92505060606200047787828801620003fe565b91505092959194509250565b6200048e8162000358565b82525050565b5f602082019050620004a95f83018462000483565b92915050565b5f82825260208201905092915050565b7f546f6b656e204120616464726573732063616e6e6f74206265207a65726f00005f82015250565b5f620004f5601e83620004af565b91506200050282620004bf565b602082019050919050565b5f6020820190508181035f8301526200052681620004e7565b9050919050565b7f546f6b656e204220616464726573732063616e6e6f74206265207a65726f00005f82015250565b5f62000563601e83620004af565b915062000570826200052d565b602082019050919050565b5f6020820190508181035f830152620005948162000555565b9050919050565b7f45786368616e67652072617465206d75737420626520677265617465722074685f8201527f616e207a65726f00000000000000000000000000000000000000000000000000602082015250565b5f620005f7602783620004af565b915062000604826200059b565b604082019050919050565b5f6020820190508181035f8301526200062881620005e9565b9050919050565b6113cc806200063d5f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063859497881161006f578063859497881461012b5780638da5cb5b14610147578063a84003f314610165578063db068e0e14610181578063e4c93be71461019d578063f2fde38b146101b9576100a7565b80630fc63d10146100ab57806338720f72146100c95780633ba0b9a9146100e55780635f64b55b14610103578063715018a614610121575b5f80fd5b6100b36101d5565b6040516100c09190610d86565b60405180910390f35b6100e360048036038101906100de9190610dd6565b6101fa565b005b6100ed61053b565b6040516100fa9190610e10565b60405180910390f35b61010b610541565b6040516101189190610d86565b60405180910390f35b610129610566565b005b61014560048036038101906101409190610dd6565b610579565b005b61014f6108ba565b60405161015c9190610e49565b60405180910390f35b61017f600480360381019061017a9190610dd6565b6108e1565b005b61019b60048036038101906101969190610dd6565b6109ce565b005b6101b760048036038101906101b29190610dd6565b610a22565b005b6101d360048036038101906101ce9190610e8c565b610b0f565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f811161023c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023390610f11565b60405180910390fd5b5f61025260035483610b9390919063ffffffff16565b90508060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102af9190610e49565b602060405180830381865afa1580156102ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ee9190610f43565b101561032f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032690610fde565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161038d93929190610ffc565b6020604051808303815f875af11580156103a9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103cd9190611066565b61040c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610403906110db565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016104689291906110f9565b6020604051808303815f875af1158015610484573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a89190611066565b6104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de9061116a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758838360405161052f929190611188565b60405180910390a25050565b60035481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61056e610ba8565b6105775f610c2f565b565b5f81116105bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b290610f11565b60405180910390fd5b5f6105d160035483610cf090919063ffffffff16565b90508060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161062e9190610e49565b602060405180830381865afa158015610649573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061066d9190610f43565b10156106ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a59061121f565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161070c93929190610ffc565b6020604051808303815f875af1158015610728573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061074c9190611066565b61078b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107829061116a565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016107e79291906110f9565b6020604051808303815f875af1158015610803573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108279190611066565b610866576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085d906110db565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a75882846040516108ae929190611188565b60405180910390a25050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108e9610ba8565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61092e6108ba565b836040518363ffffffff1660e01b815260040161094c9291906110f9565b6020604051808303815f875af1158015610968573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061098c9190611066565b6109cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c29061116a565b60405180910390fd5b50565b6109d6610ba8565b5f8111610a18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0f906112ad565b60405180910390fd5b8060038190555050565b610a2a610ba8565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610a6f6108ba565b836040518363ffffffff1660e01b8152600401610a8d9291906110f9565b6020604051808303815f875af1158015610aa9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610acd9190611066565b610b0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b03906110db565b60405180910390fd5b50565b610b17610ba8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b87575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b7e9190610e49565b60405180910390fd5b610b9081610c2f565b50565b5f8183610ba091906112f8565b905092915050565b610bb0610d05565b73ffffffffffffffffffffffffffffffffffffffff16610bce6108ba565b73ffffffffffffffffffffffffffffffffffffffff1614610c2d57610bf1610d05565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c249190610e49565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8183610cfd9190611366565b905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610d4e610d49610d4484610d0c565b610d2b565b610d0c565b9050919050565b5f610d5f82610d34565b9050919050565b5f610d7082610d55565b9050919050565b610d8081610d66565b82525050565b5f602082019050610d995f830184610d77565b92915050565b5f80fd5b5f819050919050565b610db581610da3565b8114610dbf575f80fd5b50565b5f81359050610dd081610dac565b92915050565b5f60208284031215610deb57610dea610d9f565b5b5f610df884828501610dc2565b91505092915050565b610e0a81610da3565b82525050565b5f602082019050610e235f830184610e01565b92915050565b5f610e3382610d0c565b9050919050565b610e4381610e29565b82525050565b5f602082019050610e5c5f830184610e3a565b92915050565b610e6b81610e29565b8114610e75575f80fd5b50565b5f81359050610e8681610e62565b92915050565b5f60208284031215610ea157610ea0610d9f565b5b5f610eae84828501610e78565b91505092915050565b5f82825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f610efb602083610eb7565b9150610f0682610ec7565b602082019050919050565b5f6020820190508181035f830152610f2881610eef565b9050919050565b5f81519050610f3d81610dac565b92915050565b5f60208284031215610f5857610f57610d9f565b5b5f610f6584828501610f2f565b91505092915050565b7f496e73756666696369656e742062616c616e6365206f6620546f6b656e2042205f8201527f696e2074686520636f6e74726163740000000000000000000000000000000000602082015250565b5f610fc8602f83610eb7565b9150610fd382610f6e565b604082019050919050565b5f6020820190508181035f830152610ff581610fbc565b9050919050565b5f60608201905061100f5f830186610e3a565b61101c6020830185610e3a565b6110296040830184610e01565b949350505050565b5f8115159050919050565b61104581611031565b811461104f575f80fd5b50565b5f815190506110608161103c565b92915050565b5f6020828403121561107b5761107a610d9f565b5b5f61108884828501611052565b91505092915050565b7f546f6b656e2041207472616e73666572206661696c65640000000000000000005f82015250565b5f6110c5601783610eb7565b91506110d082611091565b602082019050919050565b5f6020820190508181035f8301526110f2816110b9565b9050919050565b5f60408201905061110c5f830185610e3a565b6111196020830184610e01565b9392505050565b7f546f6b656e2042207472616e73666572206661696c65640000000000000000005f82015250565b5f611154601783610eb7565b915061115f82611120565b602082019050919050565b5f6020820190508181035f83015261118181611148565b9050919050565b5f60408201905061119b5f830185610e01565b6111a86020830184610e01565b9392505050565b7f496e73756666696369656e742062616c616e6365206f6620546f6b656e2041205f8201527f696e2074686520636f6e74726163740000000000000000000000000000000000602082015250565b5f611209602f83610eb7565b9150611214826111af565b604082019050919050565b5f6020820190508181035f830152611236816111fd565b9050919050565b7f45786368616e67652072617465206d75737420626520677265617465722074685f8201527f616e207a65726f00000000000000000000000000000000000000000000000000602082015250565b5f611297602783610eb7565b91506112a28261123d565b604082019050919050565b5f6020820190508181035f8301526112c48161128b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61130282610da3565b915061130d83610da3565b925082820261131b81610da3565b91508282048414831517611332576113316112cb565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61137082610da3565b915061137b83610da3565b92508261138b5761138a611339565b5b82820490509291505056fea264697066735822122085065c738ec38f2a797ca1b21f74864ad4bbf54e933658a3e19270dbaf68691c64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1A09 CODESIZE SUB DUP1 PUSH3 0x1A09 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x414 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0x274 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x12D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x124 SWAP1 PUSH3 0x50D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x19E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x195 SWAP1 PUSH3 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH3 0x1E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1DA SWAP1 PUSH3 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x62F JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x364 DUP3 PUSH3 0x339 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x377 DUP3 PUSH3 0x358 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x389 DUP2 PUSH3 0x36B JUMP JUMPDEST DUP2 EQ PUSH3 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x3A7 DUP2 PUSH3 0x37E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C1 DUP2 PUSH3 0x3AD JUMP JUMPDEST DUP2 EQ PUSH3 0x3CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x3DF DUP2 PUSH3 0x3B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x3F0 DUP2 PUSH3 0x358 JUMP JUMPDEST DUP2 EQ PUSH3 0x3FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x40E DUP2 PUSH3 0x3E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x42F JUMPI PUSH3 0x42E PUSH3 0x335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x43E DUP8 DUP3 DUP9 ADD PUSH3 0x397 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x451 DUP8 DUP3 DUP9 ADD PUSH3 0x397 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x464 DUP8 DUP3 DUP9 ADD PUSH3 0x3CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x477 DUP8 DUP3 DUP9 ADD PUSH3 0x3FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH3 0x48E DUP2 PUSH3 0x358 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x4A9 PUSH0 DUP4 ADD DUP5 PUSH3 0x483 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E204120616464726573732063616E6E6F74206265207A65726F0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x4F5 PUSH1 0x1E DUP4 PUSH3 0x4AF JUMP JUMPDEST SWAP2 POP PUSH3 0x502 DUP3 PUSH3 0x4BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x526 DUP2 PUSH3 0x4E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E204220616464726573732063616E6E6F74206265207A65726F0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x563 PUSH1 0x1E DUP4 PUSH3 0x4AF JUMP JUMPDEST SWAP2 POP PUSH3 0x570 DUP3 PUSH3 0x52D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x594 DUP2 PUSH3 0x555 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786368616E67652072617465206D7573742062652067726561746572207468 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E207A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x5F7 PUSH1 0x27 DUP4 PUSH3 0x4AF JUMP JUMPDEST SWAP2 POP PUSH3 0x604 DUP3 PUSH3 0x59B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x628 DUP2 PUSH3 0x5E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CC DUP1 PUSH3 0x63D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85949788 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x85949788 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xA84003F3 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xDB068E0E EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xE4C93BE7 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B9 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x38720F72 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x121 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH2 0x53B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH2 0x566 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x8E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0xA22 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0xB0F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x23C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x233 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x252 PUSH1 0x3 SLOAD DUP4 PUSH2 0xB93 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x326 SWAP1 PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x40C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x403 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x468 SWAP3 SWAP2 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x484 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A8 SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DE SWAP1 PUSH2 0x116A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x77F92A1B6A1A11DE8CA49515AD4C1FAD45632DD3442167D74B90B304A3C7A758 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x52F SWAP3 SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x56E PUSH2 0xBA8 JUMP JUMPDEST PUSH2 0x577 PUSH0 PUSH2 0xC2F JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5D1 PUSH1 0x3 SLOAD DUP4 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x649 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66D SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST LT ISZERO PUSH2 0x6AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A5 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x728 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x782 SWAP1 PUSH2 0x116A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E7 SWAP3 SWAP2 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x803 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x827 SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85D SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x77F92A1B6A1A11DE8CA49515AD4C1FAD45632DD3442167D74B90B304A3C7A758 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8AE SWAP3 SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8E9 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x92E PUSH2 0x8BA JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94C SWAP3 SWAP2 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x968 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x9CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C2 SWAP1 PUSH2 0x116A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9D6 PUSH2 0xBA8 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0F SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA2A PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0xA6F PUSH2 0x8BA JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8D SWAP3 SWAP2 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAA9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xACD SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB03 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB17 PUSH2 0xBA8 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB87 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB90 DUP2 PUSH2 0xC2F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xBA0 SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBB0 PUSH2 0xD05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBCE PUSH2 0x8BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC2D JUMPI PUSH2 0xBF1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x1366 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD4E PUSH2 0xD49 PUSH2 0xD44 DUP5 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xD2B JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD5F DUP3 PUSH2 0xD34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD70 DUP3 PUSH2 0xD55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD80 DUP2 PUSH2 0xD66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD99 PUSH0 DUP4 ADD DUP5 PUSH2 0xD77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB5 DUP2 PUSH2 0xDA3 JUMP JUMPDEST DUP2 EQ PUSH2 0xDBF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD0 DUP2 PUSH2 0xDAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDEA PUSH2 0xD9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDF8 DUP5 DUP3 DUP6 ADD PUSH2 0xDC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE0A DUP2 PUSH2 0xDA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE23 PUSH0 DUP4 ADD DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE33 DUP3 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE43 DUP2 PUSH2 0xE29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE5C PUSH0 DUP4 ADD DUP5 PUSH2 0xE3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE6B DUP2 PUSH2 0xE29 JUMP JUMPDEST DUP2 EQ PUSH2 0xE75 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE86 DUP2 PUSH2 0xE62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xEA0 PUSH2 0xD9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEAE DUP5 DUP3 DUP6 ADD PUSH2 0xE78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEFB PUSH1 0x20 DUP4 PUSH2 0xEB7 JUMP JUMPDEST SWAP2 POP PUSH2 0xF06 DUP3 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF28 DUP2 PUSH2 0xEEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF3D DUP2 PUSH2 0xDAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF58 JUMPI PUSH2 0xF57 PUSH2 0xD9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF65 DUP5 DUP3 DUP6 ADD PUSH2 0xF2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365206F6620546F6B656E204220 PUSH0 DUP3 ADD MSTORE PUSH32 0x696E2074686520636F6E74726163740000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFC8 PUSH1 0x2F DUP4 PUSH2 0xEB7 JUMP JUMPDEST SWAP2 POP PUSH2 0xFD3 DUP3 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFF5 DUP2 PUSH2 0xFBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x100F PUSH0 DUP4 ADD DUP7 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x101C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x1029 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1045 DUP2 PUSH2 0x1031 JUMP JUMPDEST DUP2 EQ PUSH2 0x104F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1060 DUP2 PUSH2 0x103C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107B JUMPI PUSH2 0x107A PUSH2 0xD9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1088 DUP5 DUP3 DUP6 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E2041207472616E73666572206661696C6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10C5 PUSH1 0x17 DUP4 PUSH2 0xEB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D0 DUP3 PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10F2 DUP2 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x110C PUSH0 DUP4 ADD DUP6 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x1119 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E2042207472616E73666572206661696C6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1154 PUSH1 0x17 DUP4 PUSH2 0xEB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x115F DUP3 PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1181 DUP2 PUSH2 0x1148 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x119B PUSH0 DUP4 ADD DUP6 PUSH2 0xE01 JUMP JUMPDEST PUSH2 0x11A8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365206F6620546F6B656E204120 PUSH0 DUP3 ADD MSTORE PUSH32 0x696E2074686520636F6E74726163740000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1209 PUSH1 0x2F DUP4 PUSH2 0xEB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1214 DUP3 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1236 DUP2 PUSH2 0x11FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786368616E67652072617465206D7573742062652067726561746572207468 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E207A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1297 PUSH1 0x27 DUP4 PUSH2 0xEB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x12A2 DUP3 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12C4 DUP2 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1302 DUP3 PUSH2 0xDA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x130D DUP4 PUSH2 0xDA3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x131B DUP2 PUSH2 0xDA3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1332 JUMPI PUSH2 0x1331 PUSH2 0x12CB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1370 DUP3 PUSH2 0xDA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x137B DUP4 PUSH2 0xDA3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x138B JUMPI PUSH2 0x138A PUSH2 0x1339 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 MOD 0x5C PUSH20 0x8EC38F2A797CA1B21F74864AD4BBF54E933658A3 0xE1 SWAP3 PUSH17 0xDBAF68691C64736F6C6343000817003300 ",
							"sourceMap": "233:2772:4:-:0;;;508:463;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;606:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;667:1:4::1;639:30;;647:7;639:30;;::::0;631:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;751:1;723:30;;731:7;723:30;;::::0;715:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;823:1;807:13;:17;799:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;890:7;881:6;;:16;;;;;;;;;;;;;;;;;;917:7;908:6;;:16;;;;;;;;;;;;;;;;;;950:13;935:12;:28;;;;508:463:::0;;;;233:2772;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:77::-;1054:7;1083:5;1072:16;;1017:77;;;:::o;1100:122::-;1173:24;1191:5;1173:24;:::i;:::-;1166:5;1163:35;1153:63;;1212:1;1209;1202:12;1153:63;1100:122;:::o;1228:143::-;1285:5;1316:6;1310:13;1301:22;;1332:33;1359:5;1332:33;:::i;:::-;1228:143;;;;:::o;1377:122::-;1450:24;1468:5;1450:24;:::i;:::-;1443:5;1440:35;1430:63;;1489:1;1486;1479:12;1430:63;1377:122;:::o;1505:143::-;1562:5;1593:6;1587:13;1578:22;;1609:33;1636:5;1609:33;:::i;:::-;1505:143;;;;:::o;1654:876::-;1779:6;1787;1795;1803;1852:3;1840:9;1831:7;1827:23;1823:33;1820:120;;;1859:79;;:::i;:::-;1820:120;1979:1;2004:78;2074:7;2065:6;2054:9;2050:22;2004:78;:::i;:::-;1994:88;;1950:142;2131:2;2157:78;2227:7;2218:6;2207:9;2203:22;2157:78;:::i;:::-;2147:88;;2102:143;2284:2;2310:64;2366:7;2357:6;2346:9;2342:22;2310:64;:::i;:::-;2300:74;;2255:129;2423:2;2449:64;2505:7;2496:6;2485:9;2481:22;2449:64;:::i;:::-;2439:74;;2394:129;1654:876;;;;;;;:::o;2536:118::-;2623:24;2641:5;2623:24;:::i;:::-;2618:3;2611:37;2536:118;;:::o;2660:222::-;2753:4;2791:2;2780:9;2776:18;2768:26;;2804:71;2872:1;2861:9;2857:17;2848:6;2804:71;:::i;:::-;2660:222;;;;:::o;2888:169::-;2972:11;3006:6;3001:3;2994:19;3046:4;3041:3;3037:14;3022:29;;2888:169;;;;:::o;3063:180::-;3203:32;3199:1;3191:6;3187:14;3180:56;3063:180;:::o;3249:366::-;3391:3;3412:67;3476:2;3471:3;3412:67;:::i;:::-;3405:74;;3488:93;3577:3;3488:93;:::i;:::-;3606:2;3601:3;3597:12;3590:19;;3249:366;;;:::o;3621:419::-;3787:4;3825:2;3814:9;3810:18;3802:26;;3874:9;3868:4;3864:20;3860:1;3849:9;3845:17;3838:47;3902:131;4028:4;3902:131;:::i;:::-;3894:139;;3621:419;;;:::o;4046:180::-;4186:32;4182:1;4174:6;4170:14;4163:56;4046:180;:::o;4232:366::-;4374:3;4395:67;4459:2;4454:3;4395:67;:::i;:::-;4388:74;;4471:93;4560:3;4471:93;:::i;:::-;4589:2;4584:3;4580:12;4573:19;;4232:366;;;:::o;4604:419::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4857:9;4851:4;4847:20;4843:1;4832:9;4828:17;4821:47;4885:131;5011:4;4885:131;:::i;:::-;4877:139;;4604:419;;;:::o;5029:226::-;5169:34;5165:1;5157:6;5153:14;5146:58;5238:9;5233:2;5225:6;5221:15;5214:34;5029:226;:::o;5261:366::-;5403:3;5424:67;5488:2;5483:3;5424:67;:::i;:::-;5417:74;;5500:93;5589:3;5500:93;:::i;:::-;5618:2;5613:3;5609:12;5602:19;;5261:366;;;:::o;5633:419::-;5799:4;5837:2;5826:9;5822:18;5814:26;;5886:9;5880:4;5876:20;5872:1;5861:9;5857:17;5850:47;5914:131;6040:4;5914:131;:::i;:::-;5906:139;;5633:419;;;:::o;233:2772:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2984,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": 3333,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 3119,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_476": {
									"entryPoint": 3312,
									"id": 476,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@exchangeRate_585": {
									"entryPoint": 1339,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_461": {
									"entryPoint": 2963,
									"id": 461,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2234,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1382,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setExchangeRate_802": {
									"entryPoint": 2510,
									"id": 802,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@swapAToB_719": {
									"entryPoint": 506,
									"id": 719,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@swapBToA_783": {
									"entryPoint": 1401,
									"id": 783,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenA_580": {
									"entryPoint": 469,
									"id": 580,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenB_583": {
									"entryPoint": 1345,
									"id": 583,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2831,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawTokenA_820": {
									"entryPoint": 2594,
									"id": 820,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawTokenB_838": {
									"entryPoint": 2273,
									"id": 838,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 3447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1ae93c22fd203b1cf6171f2fdf72425f1adc56b87f99f5bdccfb50eb9d9815c4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef501e88f874b45cff01569149f0f10d6e66417ab0104e5a308101b9fbf57f89_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4092,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4345,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 3462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ae93c22fd203b1cf6171f2fdf72425f1adc56b87f99f5bdccfb50eb9d9815c4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef501e88f874b45cff01569149f0f10d6e66417ab0104e5a308101b9fbf57f89__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4488,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 3430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4811,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4921,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3487,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1ae93c22fd203b1cf6171f2fdf72425f1adc56b87f99f5bdccfb50eb9d9815c4": {
									"entryPoint": 3950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202": {
									"entryPoint": 4384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887": {
									"entryPoint": 3783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1": {
									"entryPoint": 4241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef501e88f874b45cff01569149f0f10d6e66417ab0104e5a308101b9fbf57f89": {
									"entryPoint": 4527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13017:5",
										"nodeType": "YulBlock",
										"src": "0:13017:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:5",
													"nodeType": "YulBlock",
													"src": "52:81:5",
													"statements": [
														{
															"nativeSrc": "62:65:5",
															"nodeType": "YulAssignment",
															"src": "62:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:5",
																		"nodeType": "YulLiteral",
																		"src": "84:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:5"
																},
																"nativeSrc": "73:54:5",
																"nodeType": "YulFunctionCall",
																"src": "73:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:126:5"
											},
											{
												"body": {
													"nativeSrc": "171:28:5",
													"nodeType": "YulBlock",
													"src": "171:28:5",
													"statements": [
														{
															"nativeSrc": "181:12:5",
															"nodeType": "YulAssignment",
															"src": "181:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:5",
																"nodeType": "YulIdentifier",
																"src": "188:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:5",
														"nodeType": "YulTypedName",
														"src": "157:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:5",
														"nodeType": "YulTypedName",
														"src": "167:3:5",
														"type": ""
													}
												],
												"src": "139:60:5"
											},
											{
												"body": {
													"nativeSrc": "265:82:5",
													"nodeType": "YulBlock",
													"src": "265:82:5",
													"statements": [
														{
															"nativeSrc": "275:66:5",
															"nodeType": "YulAssignment",
															"src": "275:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:5"
																				},
																				"nativeSrc": "315:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:5"
																		},
																		"nativeSrc": "306:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:5"
																},
																"nativeSrc": "288:53:5",
																"nodeType": "YulFunctionCall",
																"src": "288:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:5",
														"nodeType": "YulTypedName",
														"src": "245:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:5",
														"nodeType": "YulTypedName",
														"src": "255:9:5",
														"type": ""
													}
												],
												"src": "205:142:5"
											},
											{
												"body": {
													"nativeSrc": "413:66:5",
													"nodeType": "YulBlock",
													"src": "413:66:5",
													"statements": [
														{
															"nativeSrc": "423:50:5",
															"nodeType": "YulAssignment",
															"src": "423:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:5"
																},
																"nativeSrc": "436:37:5",
																"nodeType": "YulFunctionCall",
																"src": "436:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:5",
														"nodeType": "YulTypedName",
														"src": "393:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:5",
														"nodeType": "YulTypedName",
														"src": "403:9:5",
														"type": ""
													}
												],
												"src": "353:126:5"
											},
											{
												"body": {
													"nativeSrc": "559:66:5",
													"nodeType": "YulBlock",
													"src": "559:66:5",
													"statements": [
														{
															"nativeSrc": "569:50:5",
															"nodeType": "YulAssignment",
															"src": "569:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "613:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "582:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:5"
																},
																"nativeSrc": "582:37:5",
																"nodeType": "YulFunctionCall",
																"src": "582:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "569:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "485:140:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "539:5:5",
														"nodeType": "YulTypedName",
														"src": "539:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "549:9:5",
														"nodeType": "YulTypedName",
														"src": "549:9:5",
														"type": ""
													}
												],
												"src": "485:140:5"
											},
											{
												"body": {
													"nativeSrc": "710:80:5",
													"nodeType": "YulBlock",
													"src": "710:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "727:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "732:44:5",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:5"
																		},
																		"nativeSrc": "732:51:5",
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "720:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:5"
																},
																"nativeSrc": "720:64:5",
																"nodeType": "YulFunctionCall",
																"src": "720:64:5"
															},
															"nativeSrc": "720:64:5",
															"nodeType": "YulExpressionStatement",
															"src": "720:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "631:159:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "698:5:5",
														"nodeType": "YulTypedName",
														"src": "698:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "705:3:5",
														"nodeType": "YulTypedName",
														"src": "705:3:5",
														"type": ""
													}
												],
												"src": "631:159:5"
											},
											{
												"body": {
													"nativeSrc": "908:138:5",
													"nodeType": "YulBlock",
													"src": "908:138:5",
													"statements": [
														{
															"nativeSrc": "918:26:5",
															"nodeType": "YulAssignment",
															"src": "918:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:5",
																		"nodeType": "YulLiteral",
																		"src": "941:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:5"
																},
																"nativeSrc": "926:18:5",
																"nodeType": "YulFunctionCall",
																"src": "926:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1012:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1025:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1021:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:5"
																		},
																		"nativeSrc": "1021:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "954:57:5",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:5"
																},
																"nativeSrc": "954:85:5",
																"nodeType": "YulFunctionCall",
																"src": "954:85:5"
															},
															"nativeSrc": "954:85:5",
															"nodeType": "YulExpressionStatement",
															"src": "954:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "796:250:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "880:9:5",
														"nodeType": "YulTypedName",
														"src": "880:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "892:6:5",
														"nodeType": "YulTypedName",
														"src": "892:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:5",
														"nodeType": "YulTypedName",
														"src": "903:4:5",
														"type": ""
													}
												],
												"src": "796:250:5"
											},
											{
												"body": {
													"nativeSrc": "1092:35:5",
													"nodeType": "YulBlock",
													"src": "1092:35:5",
													"statements": [
														{
															"nativeSrc": "1102:19:5",
															"nodeType": "YulAssignment",
															"src": "1102:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1118:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1112:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1112:5:5"
																},
																"nativeSrc": "1112:9:5",
																"nodeType": "YulFunctionCall",
																"src": "1112:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1102:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1052:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1085:6:5",
														"nodeType": "YulTypedName",
														"src": "1085:6:5",
														"type": ""
													}
												],
												"src": "1052:75:5"
											},
											{
												"body": {
													"nativeSrc": "1222:28:5",
													"nodeType": "YulBlock",
													"src": "1222:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1239:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1239:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1232:6:5"
																},
																"nativeSrc": "1232:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1232:12:5"
															},
															"nativeSrc": "1232:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1232:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1133:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1133:117:5"
											},
											{
												"body": {
													"nativeSrc": "1345:28:5",
													"nodeType": "YulBlock",
													"src": "1345:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1362:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1362:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1355:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1355:6:5"
																},
																"nativeSrc": "1355:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1355:12:5"
															},
															"nativeSrc": "1355:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1355:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1256:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1256:117:5"
											},
											{
												"body": {
													"nativeSrc": "1424:32:5",
													"nodeType": "YulBlock",
													"src": "1424:32:5",
													"statements": [
														{
															"nativeSrc": "1434:16:5",
															"nodeType": "YulAssignment",
															"src": "1434:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1445:5:5",
																"nodeType": "YulIdentifier",
																"src": "1445:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1434:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1434:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1379:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1406:5:5",
														"nodeType": "YulTypedName",
														"src": "1406:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1416:7:5",
														"nodeType": "YulTypedName",
														"src": "1416:7:5",
														"type": ""
													}
												],
												"src": "1379:77:5"
											},
											{
												"body": {
													"nativeSrc": "1505:79:5",
													"nodeType": "YulBlock",
													"src": "1505:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1562:16:5",
																"nodeType": "YulBlock",
																"src": "1562:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1571:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1571:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1574:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1574:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1564:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1564:6:5"
																			},
																			"nativeSrc": "1564:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1564:12:5"
																		},
																		"nativeSrc": "1564:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1564:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1528:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1528:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1553:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1553:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1535:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1535:17:5"
																				},
																				"nativeSrc": "1535:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1535:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1525:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1525:2:5"
																		},
																		"nativeSrc": "1525:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1525:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1518:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:5"
																},
																"nativeSrc": "1518:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1518:43:5"
															},
															"nativeSrc": "1515:63:5",
															"nodeType": "YulIf",
															"src": "1515:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1462:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1498:5:5",
														"nodeType": "YulTypedName",
														"src": "1498:5:5",
														"type": ""
													}
												],
												"src": "1462:122:5"
											},
											{
												"body": {
													"nativeSrc": "1642:87:5",
													"nodeType": "YulBlock",
													"src": "1642:87:5",
													"statements": [
														{
															"nativeSrc": "1652:29:5",
															"nodeType": "YulAssignment",
															"src": "1652:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1674:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1674:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1661:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1661:12:5"
																},
																"nativeSrc": "1661:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1661:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1652:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1652:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1717:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1717:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1690:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1690:26:5"
																},
																"nativeSrc": "1690:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1690:33:5"
															},
															"nativeSrc": "1690:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1690:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1590:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1620:6:5",
														"nodeType": "YulTypedName",
														"src": "1620:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1628:3:5",
														"nodeType": "YulTypedName",
														"src": "1628:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1636:5:5",
														"nodeType": "YulTypedName",
														"src": "1636:5:5",
														"type": ""
													}
												],
												"src": "1590:139:5"
											},
											{
												"body": {
													"nativeSrc": "1801:263:5",
													"nodeType": "YulBlock",
													"src": "1801:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1847:83:5",
																"nodeType": "YulBlock",
																"src": "1847:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1849:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1849:77:5"
																			},
																			"nativeSrc": "1849:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1849:79:5"
																		},
																		"nativeSrc": "1849:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1849:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1822:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1822:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1831:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1831:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1818:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1818:3:5"
																		},
																		"nativeSrc": "1818:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1843:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1843:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1814:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1814:3:5"
																},
																"nativeSrc": "1814:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1814:32:5"
															},
															"nativeSrc": "1811:119:5",
															"nodeType": "YulIf",
															"src": "1811:119:5"
														},
														{
															"nativeSrc": "1940:117:5",
															"nodeType": "YulBlock",
															"src": "1940:117:5",
															"statements": [
																{
																	"nativeSrc": "1955:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1955:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1969:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1959:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1959:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1984:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1984:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2019:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2019:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2030:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2030:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2015:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2015:3:5"
																				},
																				"nativeSrc": "2015:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2015:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2039:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2039:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1994:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1994:20:5"
																		},
																		"nativeSrc": "1994:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1994:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1984:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1984:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1735:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1771:9:5",
														"nodeType": "YulTypedName",
														"src": "1771:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1782:7:5",
														"nodeType": "YulTypedName",
														"src": "1782:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1794:6:5",
														"nodeType": "YulTypedName",
														"src": "1794:6:5",
														"type": ""
													}
												],
												"src": "1735:329:5"
											},
											{
												"body": {
													"nativeSrc": "2135:53:5",
													"nodeType": "YulBlock",
													"src": "2135:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2152:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2152:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2175:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2175:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2157:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2157:17:5"
																		},
																		"nativeSrc": "2157:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2145:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2145:6:5"
																},
																"nativeSrc": "2145:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2145:37:5"
															},
															"nativeSrc": "2145:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2145:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2070:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2123:5:5",
														"nodeType": "YulTypedName",
														"src": "2123:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2130:3:5",
														"nodeType": "YulTypedName",
														"src": "2130:3:5",
														"type": ""
													}
												],
												"src": "2070:118:5"
											},
											{
												"body": {
													"nativeSrc": "2292:124:5",
													"nodeType": "YulBlock",
													"src": "2292:124:5",
													"statements": [
														{
															"nativeSrc": "2302:26:5",
															"nodeType": "YulAssignment",
															"src": "2302:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2314:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2314:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2325:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2325:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2310:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2310:3:5"
																},
																"nativeSrc": "2310:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2310:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2302:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2302:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2382:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2382:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2395:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2395:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2406:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2406:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2391:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2391:3:5"
																		},
																		"nativeSrc": "2391:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2391:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2338:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2338:43:5"
																},
																"nativeSrc": "2338:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2338:71:5"
															},
															"nativeSrc": "2338:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2338:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2194:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2264:9:5",
														"nodeType": "YulTypedName",
														"src": "2264:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2276:6:5",
														"nodeType": "YulTypedName",
														"src": "2276:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2287:4:5",
														"nodeType": "YulTypedName",
														"src": "2287:4:5",
														"type": ""
													}
												],
												"src": "2194:222:5"
											},
											{
												"body": {
													"nativeSrc": "2467:51:5",
													"nodeType": "YulBlock",
													"src": "2467:51:5",
													"statements": [
														{
															"nativeSrc": "2477:35:5",
															"nodeType": "YulAssignment",
															"src": "2477:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2506:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2506:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2488:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2488:17:5"
																},
																"nativeSrc": "2488:24:5",
																"nodeType": "YulFunctionCall",
																"src": "2488:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2477:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2477:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2422:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2449:5:5",
														"nodeType": "YulTypedName",
														"src": "2449:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2459:7:5",
														"nodeType": "YulTypedName",
														"src": "2459:7:5",
														"type": ""
													}
												],
												"src": "2422:96:5"
											},
											{
												"body": {
													"nativeSrc": "2589:53:5",
													"nodeType": "YulBlock",
													"src": "2589:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2606:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2606:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2629:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2629:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2611:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2611:17:5"
																		},
																		"nativeSrc": "2611:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2611:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2599:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:5"
																},
																"nativeSrc": "2599:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2599:37:5"
															},
															"nativeSrc": "2599:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2599:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2524:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2577:5:5",
														"nodeType": "YulTypedName",
														"src": "2577:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2584:3:5",
														"nodeType": "YulTypedName",
														"src": "2584:3:5",
														"type": ""
													}
												],
												"src": "2524:118:5"
											},
											{
												"body": {
													"nativeSrc": "2746:124:5",
													"nodeType": "YulBlock",
													"src": "2746:124:5",
													"statements": [
														{
															"nativeSrc": "2756:26:5",
															"nodeType": "YulAssignment",
															"src": "2756:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2768:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2779:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2764:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2764:3:5"
																},
																"nativeSrc": "2764:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2764:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2756:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2756:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2836:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2836:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2849:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2849:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2860:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2860:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2845:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2845:3:5"
																		},
																		"nativeSrc": "2845:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2845:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2792:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2792:43:5"
																},
																"nativeSrc": "2792:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2792:71:5"
															},
															"nativeSrc": "2792:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2792:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2648:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2718:9:5",
														"nodeType": "YulTypedName",
														"src": "2718:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2730:6:5",
														"nodeType": "YulTypedName",
														"src": "2730:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2741:4:5",
														"nodeType": "YulTypedName",
														"src": "2741:4:5",
														"type": ""
													}
												],
												"src": "2648:222:5"
											},
											{
												"body": {
													"nativeSrc": "2919:79:5",
													"nodeType": "YulBlock",
													"src": "2919:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2976:16:5",
																"nodeType": "YulBlock",
																"src": "2976:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2985:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2985:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2988:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2988:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2978:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2978:6:5"
																			},
																			"nativeSrc": "2978:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2978:12:5"
																		},
																		"nativeSrc": "2978:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2978:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2942:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2942:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2967:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2967:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2949:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2949:17:5"
																				},
																				"nativeSrc": "2949:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2949:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2939:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2939:2:5"
																		},
																		"nativeSrc": "2939:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2939:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2932:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2932:6:5"
																},
																"nativeSrc": "2932:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2932:43:5"
															},
															"nativeSrc": "2929:63:5",
															"nodeType": "YulIf",
															"src": "2929:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2876:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:5",
														"nodeType": "YulTypedName",
														"src": "2912:5:5",
														"type": ""
													}
												],
												"src": "2876:122:5"
											},
											{
												"body": {
													"nativeSrc": "3056:87:5",
													"nodeType": "YulBlock",
													"src": "3056:87:5",
													"statements": [
														{
															"nativeSrc": "3066:29:5",
															"nodeType": "YulAssignment",
															"src": "3066:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3088:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3088:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3075:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3075:12:5"
																},
																"nativeSrc": "3075:20:5",
																"nodeType": "YulFunctionCall",
																"src": "3075:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3066:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3066:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3131:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3131:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3104:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "3104:26:5"
																},
																"nativeSrc": "3104:33:5",
																"nodeType": "YulFunctionCall",
																"src": "3104:33:5"
															},
															"nativeSrc": "3104:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "3104:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3004:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3034:6:5",
														"nodeType": "YulTypedName",
														"src": "3034:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3042:3:5",
														"nodeType": "YulTypedName",
														"src": "3042:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3050:5:5",
														"nodeType": "YulTypedName",
														"src": "3050:5:5",
														"type": ""
													}
												],
												"src": "3004:139:5"
											},
											{
												"body": {
													"nativeSrc": "3215:263:5",
													"nodeType": "YulBlock",
													"src": "3215:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3261:83:5",
																"nodeType": "YulBlock",
																"src": "3261:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3263:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3263:77:5"
																			},
																			"nativeSrc": "3263:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3263:79:5"
																		},
																		"nativeSrc": "3263:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3263:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3236:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3236:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3245:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3232:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3232:3:5"
																		},
																		"nativeSrc": "3232:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3232:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3257:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3257:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3228:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3228:3:5"
																},
																"nativeSrc": "3228:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3228:32:5"
															},
															"nativeSrc": "3225:119:5",
															"nodeType": "YulIf",
															"src": "3225:119:5"
														},
														{
															"nativeSrc": "3354:117:5",
															"nodeType": "YulBlock",
															"src": "3354:117:5",
															"statements": [
																{
																	"nativeSrc": "3369:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3369:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3383:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3383:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3373:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3373:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3398:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3398:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3433:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3433:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3444:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3444:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3429:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3429:3:5"
																				},
																				"nativeSrc": "3429:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3429:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3453:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3453:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3408:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3408:20:5"
																		},
																		"nativeSrc": "3408:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3408:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3398:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3398:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3149:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3185:9:5",
														"nodeType": "YulTypedName",
														"src": "3185:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3196:7:5",
														"nodeType": "YulTypedName",
														"src": "3196:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3208:6:5",
														"nodeType": "YulTypedName",
														"src": "3208:6:5",
														"type": ""
													}
												],
												"src": "3149:329:5"
											},
											{
												"body": {
													"nativeSrc": "3580:73:5",
													"nodeType": "YulBlock",
													"src": "3580:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3597:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3597:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3602:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3602:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3590:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3590:6:5"
																},
																"nativeSrc": "3590:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3590:19:5"
															},
															"nativeSrc": "3590:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "3590:19:5"
														},
														{
															"nativeSrc": "3618:29:5",
															"nodeType": "YulAssignment",
															"src": "3618:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3637:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3637:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3642:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3642:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3633:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3633:3:5"
																},
																"nativeSrc": "3633:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3633:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3618:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "3618:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3484:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3552:3:5",
														"nodeType": "YulTypedName",
														"src": "3552:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3557:6:5",
														"nodeType": "YulTypedName",
														"src": "3557:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3568:11:5",
														"nodeType": "YulTypedName",
														"src": "3568:11:5",
														"type": ""
													}
												],
												"src": "3484:169:5"
											},
											{
												"body": {
													"nativeSrc": "3765:76:5",
													"nodeType": "YulBlock",
													"src": "3765:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3787:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3787:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3795:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3795:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3783:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3783:3:5"
																		},
																		"nativeSrc": "3783:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3783:14:5"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "3799:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3799:34:5",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3776:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:5"
																},
																"nativeSrc": "3776:58:5",
																"nodeType": "YulFunctionCall",
																"src": "3776:58:5"
															},
															"nativeSrc": "3776:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "3776:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
												"nativeSrc": "3659:182:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3757:6:5",
														"nodeType": "YulTypedName",
														"src": "3757:6:5",
														"type": ""
													}
												],
												"src": "3659:182:5"
											},
											{
												"body": {
													"nativeSrc": "3993:220:5",
													"nodeType": "YulBlock",
													"src": "3993:220:5",
													"statements": [
														{
															"nativeSrc": "4003:74:5",
															"nodeType": "YulAssignment",
															"src": "4003:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4069:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4069:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4074:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4074:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4010:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "4010:58:5"
																},
																"nativeSrc": "4010:67:5",
																"nodeType": "YulFunctionCall",
																"src": "4010:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4003:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4003:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4175:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4175:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																	"nativeSrc": "4086:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "4086:88:5"
																},
																"nativeSrc": "4086:93:5",
																"nodeType": "YulFunctionCall",
																"src": "4086:93:5"
															},
															"nativeSrc": "4086:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "4086:93:5"
														},
														{
															"nativeSrc": "4188:19:5",
															"nodeType": "YulAssignment",
															"src": "4188:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4199:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4199:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4204:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4204:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4195:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4195:3:5"
																},
																"nativeSrc": "4195:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4195:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4188:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4188:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3847:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3981:3:5",
														"nodeType": "YulTypedName",
														"src": "3981:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3989:3:5",
														"nodeType": "YulTypedName",
														"src": "3989:3:5",
														"type": ""
													}
												],
												"src": "3847:366:5"
											},
											{
												"body": {
													"nativeSrc": "4390:248:5",
													"nodeType": "YulBlock",
													"src": "4390:248:5",
													"statements": [
														{
															"nativeSrc": "4400:26:5",
															"nodeType": "YulAssignment",
															"src": "4400:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4412:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4412:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4423:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4408:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4408:3:5"
																},
																"nativeSrc": "4408:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4408:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4400:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4400:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4447:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4447:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4458:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4458:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4443:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4443:3:5"
																		},
																		"nativeSrc": "4443:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4443:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4466:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "4466:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4472:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4472:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4462:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4462:3:5"
																		},
																		"nativeSrc": "4462:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4462:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4436:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4436:6:5"
																},
																"nativeSrc": "4436:47:5",
																"nodeType": "YulFunctionCall",
																"src": "4436:47:5"
															},
															"nativeSrc": "4436:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "4436:47:5"
														},
														{
															"nativeSrc": "4492:139:5",
															"nodeType": "YulAssignment",
															"src": "4492:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4626:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4626:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4500:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "4500:124:5"
																},
																"nativeSrc": "4500:131:5",
																"nodeType": "YulFunctionCall",
																"src": "4500:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4492:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4492:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4219:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4370:9:5",
														"nodeType": "YulTypedName",
														"src": "4370:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4385:4:5",
														"nodeType": "YulTypedName",
														"src": "4385:4:5",
														"type": ""
													}
												],
												"src": "4219:419:5"
											},
											{
												"body": {
													"nativeSrc": "4707:80:5",
													"nodeType": "YulBlock",
													"src": "4707:80:5",
													"statements": [
														{
															"nativeSrc": "4717:22:5",
															"nodeType": "YulAssignment",
															"src": "4717:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4732:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4732:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4726:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4726:5:5"
																},
																"nativeSrc": "4726:13:5",
																"nodeType": "YulFunctionCall",
																"src": "4726:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4717:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4717:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4775:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4775:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4748:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "4748:26:5"
																},
																"nativeSrc": "4748:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4748:33:5"
															},
															"nativeSrc": "4748:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "4748:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "4644:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4685:6:5",
														"nodeType": "YulTypedName",
														"src": "4685:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4693:3:5",
														"nodeType": "YulTypedName",
														"src": "4693:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4701:5:5",
														"nodeType": "YulTypedName",
														"src": "4701:5:5",
														"type": ""
													}
												],
												"src": "4644:143:5"
											},
											{
												"body": {
													"nativeSrc": "4870:274:5",
													"nodeType": "YulBlock",
													"src": "4870:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4916:83:5",
																"nodeType": "YulBlock",
																"src": "4916:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4918:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4918:77:5"
																			},
																			"nativeSrc": "4918:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4918:79:5"
																		},
																		"nativeSrc": "4918:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4918:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4891:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4891:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4900:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4900:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4887:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4887:3:5"
																		},
																		"nativeSrc": "4887:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4887:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4912:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4912:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4883:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4883:3:5"
																},
																"nativeSrc": "4883:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4883:32:5"
															},
															"nativeSrc": "4880:119:5",
															"nodeType": "YulIf",
															"src": "4880:119:5"
														},
														{
															"nativeSrc": "5009:128:5",
															"nodeType": "YulBlock",
															"src": "5009:128:5",
															"statements": [
																{
																	"nativeSrc": "5024:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5024:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5038:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5038:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5028:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5028:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5053:74:5",
																	"nodeType": "YulAssignment",
																	"src": "5053:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5099:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5099:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5110:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5110:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5095:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5095:3:5"
																				},
																				"nativeSrc": "5095:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5095:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5119:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5119:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5063:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "5063:31:5"
																		},
																		"nativeSrc": "5063:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5063:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5053:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5053:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4793:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4840:9:5",
														"nodeType": "YulTypedName",
														"src": "4840:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4851:7:5",
														"nodeType": "YulTypedName",
														"src": "4851:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4863:6:5",
														"nodeType": "YulTypedName",
														"src": "4863:6:5",
														"type": ""
													}
												],
												"src": "4793:351:5"
											},
											{
												"body": {
													"nativeSrc": "5256:128:5",
													"nodeType": "YulBlock",
													"src": "5256:128:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5278:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5278:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5286:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5286:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5274:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5274:3:5"
																		},
																		"nativeSrc": "5274:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5274:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365206f6620546f6b656e204220",
																		"kind": "string",
																		"nativeSrc": "5290:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5290:34:5",
																		"type": "",
																		"value": "Insufficient balance of Token B "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5267:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5267:6:5"
																},
																"nativeSrc": "5267:58:5",
																"nodeType": "YulFunctionCall",
																"src": "5267:58:5"
															},
															"nativeSrc": "5267:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "5267:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5346:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5346:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5354:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5354:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5342:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5342:3:5"
																		},
																		"nativeSrc": "5342:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5342:15:5"
																	},
																	{
																		"hexValue": "696e2074686520636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "5359:17:5",
																		"nodeType": "YulLiteral",
																		"src": "5359:17:5",
																		"type": "",
																		"value": "in the contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5335:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5335:6:5"
																},
																"nativeSrc": "5335:42:5",
																"nodeType": "YulFunctionCall",
																"src": "5335:42:5"
															},
															"nativeSrc": "5335:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "5335:42:5"
														}
													]
												},
												"name": "store_literal_in_memory_1ae93c22fd203b1cf6171f2fdf72425f1adc56b87f99f5bdccfb50eb9d9815c4",
												"nativeSrc": "5150:234:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5248:6:5",
														"nodeType": "YulTypedName",
														"src": "5248:6:5",
														"type": ""
													}
												],
												"src": "5150:234:5"
											},
											{
												"body": {
													"nativeSrc": "5536:220:5",
													"nodeType": "YulBlock",
													"src": "5536:220:5",
													"statements": [
														{
															"nativeSrc": "5546:74:5",
															"nodeType": "YulAssignment",
															"src": "5546:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5612:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5612:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5617:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5617:2:5",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5553:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "5553:58:5"
																},
																"nativeSrc": "5553:67:5",
																"nodeType": "YulFunctionCall",
																"src": "5553:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5546:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5546:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5718:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5718:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1ae93c22fd203b1cf6171f2fdf72425f1adc56b87f99f5bdccfb50eb9d9815c4",
																	"nativeSrc": "5629:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "5629:88:5"
																},
																"nativeSrc": "5629:93:5",
																"nodeType": "YulFunctionCall",
																"src": "5629:93:5"
															},
															"nativeSrc": "5629:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "5629:93:5"
														},
														{
															"nativeSrc": "5731:19:5",
															"nodeType": "YulAssignment",
															"src": "5731:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5742:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5742:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5747:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5747:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5738:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5738:3:5"
																},
																"nativeSrc": "5738:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5738:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5731:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5731:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1ae93c22fd203b1cf6171f2fdf72425f1adc56b87f99f5bdccfb50eb9d9815c4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5390:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5524:3:5",
														"nodeType": "YulTypedName",
														"src": "5524:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5532:3:5",
														"nodeType": "YulTypedName",
														"src": "5532:3:5",
														"type": ""
													}
												],
												"src": "5390:366:5"
											},
											{
												"body": {
													"nativeSrc": "5933:248:5",
													"nodeType": "YulBlock",
													"src": "5933:248:5",
													"statements": [
														{
															"nativeSrc": "5943:26:5",
															"nodeType": "YulAssignment",
															"src": "5943:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5955:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5955:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5966:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5966:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5951:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5951:3:5"
																},
																"nativeSrc": "5951:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5951:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5943:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5943:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5990:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5990:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6001:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6001:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5986:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5986:3:5"
																		},
																		"nativeSrc": "5986:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5986:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6009:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6009:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6015:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6015:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6005:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6005:3:5"
																		},
																		"nativeSrc": "6005:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6005:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5979:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:5"
																},
																"nativeSrc": "5979:47:5",
																"nodeType": "YulFunctionCall",
																"src": "5979:47:5"
															},
															"nativeSrc": "5979:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "5979:47:5"
														},
														{
															"nativeSrc": "6035:139:5",
															"nodeType": "YulAssignment",
															"src": "6035:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6169:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6169:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1ae93c22fd203b1cf6171f2fdf72425f1adc56b87f99f5bdccfb50eb9d9815c4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6043:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "6043:124:5"
																},
																"nativeSrc": "6043:131:5",
																"nodeType": "YulFunctionCall",
																"src": "6043:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6035:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6035:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ae93c22fd203b1cf6171f2fdf72425f1adc56b87f99f5bdccfb50eb9d9815c4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5762:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5913:9:5",
														"nodeType": "YulTypedName",
														"src": "5913:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5928:4:5",
														"nodeType": "YulTypedName",
														"src": "5928:4:5",
														"type": ""
													}
												],
												"src": "5762:419:5"
											},
											{
												"body": {
													"nativeSrc": "6341:288:5",
													"nodeType": "YulBlock",
													"src": "6341:288:5",
													"statements": [
														{
															"nativeSrc": "6351:26:5",
															"nodeType": "YulAssignment",
															"src": "6351:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6363:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6363:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6374:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6374:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6359:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6359:3:5"
																},
																"nativeSrc": "6359:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6359:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6351:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6351:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6431:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6431:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6444:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6444:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6455:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6455:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6440:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6440:3:5"
																		},
																		"nativeSrc": "6440:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6440:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6387:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6387:43:5"
																},
																"nativeSrc": "6387:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6387:71:5"
															},
															"nativeSrc": "6387:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6387:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6512:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6512:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6525:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6525:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6536:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6536:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6521:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6521:3:5"
																		},
																		"nativeSrc": "6521:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6521:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6468:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6468:43:5"
																},
																"nativeSrc": "6468:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6468:72:5"
															},
															"nativeSrc": "6468:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6468:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6594:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6594:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6607:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6607:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6618:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6618:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6603:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6603:3:5"
																		},
																		"nativeSrc": "6603:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6603:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6550:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6550:43:5"
																},
																"nativeSrc": "6550:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6550:72:5"
															},
															"nativeSrc": "6550:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6550:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6187:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6297:9:5",
														"nodeType": "YulTypedName",
														"src": "6297:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6309:6:5",
														"nodeType": "YulTypedName",
														"src": "6309:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6317:6:5",
														"nodeType": "YulTypedName",
														"src": "6317:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6325:6:5",
														"nodeType": "YulTypedName",
														"src": "6325:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6336:4:5",
														"nodeType": "YulTypedName",
														"src": "6336:4:5",
														"type": ""
													}
												],
												"src": "6187:442:5"
											},
											{
												"body": {
													"nativeSrc": "6677:48:5",
													"nodeType": "YulBlock",
													"src": "6677:48:5",
													"statements": [
														{
															"nativeSrc": "6687:32:5",
															"nodeType": "YulAssignment",
															"src": "6687:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6712:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6712:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6705:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "6705:6:5"
																		},
																		"nativeSrc": "6705:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6705:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6698:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6698:6:5"
																},
																"nativeSrc": "6698:21:5",
																"nodeType": "YulFunctionCall",
																"src": "6698:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6687:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "6687:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6635:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6659:5:5",
														"nodeType": "YulTypedName",
														"src": "6659:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6669:7:5",
														"nodeType": "YulTypedName",
														"src": "6669:7:5",
														"type": ""
													}
												],
												"src": "6635:90:5"
											},
											{
												"body": {
													"nativeSrc": "6771:76:5",
													"nodeType": "YulBlock",
													"src": "6771:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6825:16:5",
																"nodeType": "YulBlock",
																"src": "6825:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6834:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6834:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6837:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6837:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6827:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6827:6:5"
																			},
																			"nativeSrc": "6827:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6827:12:5"
																		},
																		"nativeSrc": "6827:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6827:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6794:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6794:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6816:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "6816:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6801:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "6801:14:5"
																				},
																				"nativeSrc": "6801:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6801:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6791:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "6791:2:5"
																		},
																		"nativeSrc": "6791:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6791:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6784:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6784:6:5"
																},
																"nativeSrc": "6784:40:5",
																"nodeType": "YulFunctionCall",
																"src": "6784:40:5"
															},
															"nativeSrc": "6781:60:5",
															"nodeType": "YulIf",
															"src": "6781:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6731:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6764:5:5",
														"nodeType": "YulTypedName",
														"src": "6764:5:5",
														"type": ""
													}
												],
												"src": "6731:116:5"
											},
											{
												"body": {
													"nativeSrc": "6913:77:5",
													"nodeType": "YulBlock",
													"src": "6913:77:5",
													"statements": [
														{
															"nativeSrc": "6923:22:5",
															"nodeType": "YulAssignment",
															"src": "6923:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6938:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6938:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6932:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6932:5:5"
																},
																"nativeSrc": "6932:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6932:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6923:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6923:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6978:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6978:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6954:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "6954:23:5"
																},
																"nativeSrc": "6954:30:5",
																"nodeType": "YulFunctionCall",
																"src": "6954:30:5"
															},
															"nativeSrc": "6954:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "6954:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6853:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6891:6:5",
														"nodeType": "YulTypedName",
														"src": "6891:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6899:3:5",
														"nodeType": "YulTypedName",
														"src": "6899:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6907:5:5",
														"nodeType": "YulTypedName",
														"src": "6907:5:5",
														"type": ""
													}
												],
												"src": "6853:137:5"
											},
											{
												"body": {
													"nativeSrc": "7070:271:5",
													"nodeType": "YulBlock",
													"src": "7070:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7116:83:5",
																"nodeType": "YulBlock",
																"src": "7116:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7118:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "7118:77:5"
																			},
																			"nativeSrc": "7118:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7118:79:5"
																		},
																		"nativeSrc": "7118:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7118:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7091:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7091:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7100:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7100:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7087:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7087:3:5"
																		},
																		"nativeSrc": "7087:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7087:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7112:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7112:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7083:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7083:3:5"
																},
																"nativeSrc": "7083:32:5",
																"nodeType": "YulFunctionCall",
																"src": "7083:32:5"
															},
															"nativeSrc": "7080:119:5",
															"nodeType": "YulIf",
															"src": "7080:119:5"
														},
														{
															"nativeSrc": "7209:125:5",
															"nodeType": "YulBlock",
															"src": "7209:125:5",
															"statements": [
																{
																	"nativeSrc": "7224:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7224:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7238:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7238:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7228:6:5",
																			"nodeType": "YulTypedName",
																			"src": "7228:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7253:71:5",
																	"nodeType": "YulAssignment",
																	"src": "7253:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7296:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "7296:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7307:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "7307:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7292:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7292:3:5"
																				},
																				"nativeSrc": "7292:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7292:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7316:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7316:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7263:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "7263:28:5"
																		},
																		"nativeSrc": "7263:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7263:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7253:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7253:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6996:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7040:9:5",
														"nodeType": "YulTypedName",
														"src": "7040:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7051:7:5",
														"nodeType": "YulTypedName",
														"src": "7051:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7063:6:5",
														"nodeType": "YulTypedName",
														"src": "7063:6:5",
														"type": ""
													}
												],
												"src": "6996:345:5"
											},
											{
												"body": {
													"nativeSrc": "7453:67:5",
													"nodeType": "YulBlock",
													"src": "7453:67:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7475:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7475:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7483:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7483:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7471:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7471:3:5"
																		},
																		"nativeSrc": "7471:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7471:14:5"
																	},
																	{
																		"hexValue": "546f6b656e2041207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "7487:25:5",
																		"nodeType": "YulLiteral",
																		"src": "7487:25:5",
																		"type": "",
																		"value": "Token A transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7464:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7464:6:5"
																},
																"nativeSrc": "7464:49:5",
																"nodeType": "YulFunctionCall",
																"src": "7464:49:5"
															},
															"nativeSrc": "7464:49:5",
															"nodeType": "YulExpressionStatement",
															"src": "7464:49:5"
														}
													]
												},
												"name": "store_literal_in_memory_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1",
												"nativeSrc": "7347:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7445:6:5",
														"nodeType": "YulTypedName",
														"src": "7445:6:5",
														"type": ""
													}
												],
												"src": "7347:173:5"
											},
											{
												"body": {
													"nativeSrc": "7672:220:5",
													"nodeType": "YulBlock",
													"src": "7672:220:5",
													"statements": [
														{
															"nativeSrc": "7682:74:5",
															"nodeType": "YulAssignment",
															"src": "7682:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7748:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7748:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7753:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7753:2:5",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7689:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "7689:58:5"
																},
																"nativeSrc": "7689:67:5",
																"nodeType": "YulFunctionCall",
																"src": "7689:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7682:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7682:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7854:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7854:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1",
																	"nativeSrc": "7765:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "7765:88:5"
																},
																"nativeSrc": "7765:93:5",
																"nodeType": "YulFunctionCall",
																"src": "7765:93:5"
															},
															"nativeSrc": "7765:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "7765:93:5"
														},
														{
															"nativeSrc": "7867:19:5",
															"nodeType": "YulAssignment",
															"src": "7867:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7878:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7878:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7883:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7883:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7874:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7874:3:5"
																},
																"nativeSrc": "7874:12:5",
																"nodeType": "YulFunctionCall",
																"src": "7874:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7867:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7867:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7526:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7660:3:5",
														"nodeType": "YulTypedName",
														"src": "7660:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7668:3:5",
														"nodeType": "YulTypedName",
														"src": "7668:3:5",
														"type": ""
													}
												],
												"src": "7526:366:5"
											},
											{
												"body": {
													"nativeSrc": "8069:248:5",
													"nodeType": "YulBlock",
													"src": "8069:248:5",
													"statements": [
														{
															"nativeSrc": "8079:26:5",
															"nodeType": "YulAssignment",
															"src": "8079:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8091:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8091:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8102:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8102:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8087:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8087:3:5"
																},
																"nativeSrc": "8087:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8087:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8079:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8079:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8126:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8126:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8137:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8137:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8122:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8122:3:5"
																		},
																		"nativeSrc": "8122:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8122:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8145:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8145:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8151:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8151:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8141:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8141:3:5"
																		},
																		"nativeSrc": "8141:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8141:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8115:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8115:6:5"
																},
																"nativeSrc": "8115:47:5",
																"nodeType": "YulFunctionCall",
																"src": "8115:47:5"
															},
															"nativeSrc": "8115:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "8115:47:5"
														},
														{
															"nativeSrc": "8171:139:5",
															"nodeType": "YulAssignment",
															"src": "8171:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8305:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8305:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8179:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "8179:124:5"
																},
																"nativeSrc": "8179:131:5",
																"nodeType": "YulFunctionCall",
																"src": "8179:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8171:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8171:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7898:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8049:9:5",
														"nodeType": "YulTypedName",
														"src": "8049:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8064:4:5",
														"nodeType": "YulTypedName",
														"src": "8064:4:5",
														"type": ""
													}
												],
												"src": "7898:419:5"
											},
											{
												"body": {
													"nativeSrc": "8449:206:5",
													"nodeType": "YulBlock",
													"src": "8449:206:5",
													"statements": [
														{
															"nativeSrc": "8459:26:5",
															"nodeType": "YulAssignment",
															"src": "8459:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8471:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8471:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8482:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8482:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8467:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8467:3:5"
																},
																"nativeSrc": "8467:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8467:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8459:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8459:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8539:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8539:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8552:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8552:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8563:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8563:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8548:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8548:3:5"
																		},
																		"nativeSrc": "8548:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8548:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8495:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8495:43:5"
																},
																"nativeSrc": "8495:71:5",
																"nodeType": "YulFunctionCall",
																"src": "8495:71:5"
															},
															"nativeSrc": "8495:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "8495:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8620:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8620:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8633:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8633:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8644:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8644:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8629:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8629:3:5"
																		},
																		"nativeSrc": "8629:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8629:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8576:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8576:43:5"
																},
																"nativeSrc": "8576:72:5",
																"nodeType": "YulFunctionCall",
																"src": "8576:72:5"
															},
															"nativeSrc": "8576:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "8576:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8323:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8413:9:5",
														"nodeType": "YulTypedName",
														"src": "8413:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8425:6:5",
														"nodeType": "YulTypedName",
														"src": "8425:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8433:6:5",
														"nodeType": "YulTypedName",
														"src": "8433:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8444:4:5",
														"nodeType": "YulTypedName",
														"src": "8444:4:5",
														"type": ""
													}
												],
												"src": "8323:332:5"
											},
											{
												"body": {
													"nativeSrc": "8767:67:5",
													"nodeType": "YulBlock",
													"src": "8767:67:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8789:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8789:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8797:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8797:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8785:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8785:3:5"
																		},
																		"nativeSrc": "8785:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8785:14:5"
																	},
																	{
																		"hexValue": "546f6b656e2042207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "8801:25:5",
																		"nodeType": "YulLiteral",
																		"src": "8801:25:5",
																		"type": "",
																		"value": "Token B transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8778:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8778:6:5"
																},
																"nativeSrc": "8778:49:5",
																"nodeType": "YulFunctionCall",
																"src": "8778:49:5"
															},
															"nativeSrc": "8778:49:5",
															"nodeType": "YulExpressionStatement",
															"src": "8778:49:5"
														}
													]
												},
												"name": "store_literal_in_memory_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202",
												"nativeSrc": "8661:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8759:6:5",
														"nodeType": "YulTypedName",
														"src": "8759:6:5",
														"type": ""
													}
												],
												"src": "8661:173:5"
											},
											{
												"body": {
													"nativeSrc": "8986:220:5",
													"nodeType": "YulBlock",
													"src": "8986:220:5",
													"statements": [
														{
															"nativeSrc": "8996:74:5",
															"nodeType": "YulAssignment",
															"src": "8996:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9062:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9062:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9067:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9067:2:5",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9003:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "9003:58:5"
																},
																"nativeSrc": "9003:67:5",
																"nodeType": "YulFunctionCall",
																"src": "9003:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8996:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8996:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9168:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9168:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202",
																	"nativeSrc": "9079:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "9079:88:5"
																},
																"nativeSrc": "9079:93:5",
																"nodeType": "YulFunctionCall",
																"src": "9079:93:5"
															},
															"nativeSrc": "9079:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "9079:93:5"
														},
														{
															"nativeSrc": "9181:19:5",
															"nodeType": "YulAssignment",
															"src": "9181:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9192:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9192:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9197:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9197:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9188:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9188:3:5"
																},
																"nativeSrc": "9188:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9188:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9181:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8840:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8974:3:5",
														"nodeType": "YulTypedName",
														"src": "8974:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8982:3:5",
														"nodeType": "YulTypedName",
														"src": "8982:3:5",
														"type": ""
													}
												],
												"src": "8840:366:5"
											},
											{
												"body": {
													"nativeSrc": "9383:248:5",
													"nodeType": "YulBlock",
													"src": "9383:248:5",
													"statements": [
														{
															"nativeSrc": "9393:26:5",
															"nodeType": "YulAssignment",
															"src": "9393:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9405:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9405:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9416:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9416:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9401:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9401:3:5"
																},
																"nativeSrc": "9401:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9401:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9393:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9393:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9440:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9440:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9451:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9451:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9436:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9436:3:5"
																		},
																		"nativeSrc": "9436:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9436:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9459:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9459:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9465:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9465:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9455:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9455:3:5"
																		},
																		"nativeSrc": "9455:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9455:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9429:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9429:6:5"
																},
																"nativeSrc": "9429:47:5",
																"nodeType": "YulFunctionCall",
																"src": "9429:47:5"
															},
															"nativeSrc": "9429:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "9429:47:5"
														},
														{
															"nativeSrc": "9485:139:5",
															"nodeType": "YulAssignment",
															"src": "9485:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9619:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9619:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9493:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "9493:124:5"
																},
																"nativeSrc": "9493:131:5",
																"nodeType": "YulFunctionCall",
																"src": "9493:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9485:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9485:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9212:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9363:9:5",
														"nodeType": "YulTypedName",
														"src": "9363:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9378:4:5",
														"nodeType": "YulTypedName",
														"src": "9378:4:5",
														"type": ""
													}
												],
												"src": "9212:419:5"
											},
											{
												"body": {
													"nativeSrc": "9763:206:5",
													"nodeType": "YulBlock",
													"src": "9763:206:5",
													"statements": [
														{
															"nativeSrc": "9773:26:5",
															"nodeType": "YulAssignment",
															"src": "9773:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9785:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9785:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9796:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9796:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9781:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9781:3:5"
																},
																"nativeSrc": "9781:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9781:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9773:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9773:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9853:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9853:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9866:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9866:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9877:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9877:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9862:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9862:3:5"
																		},
																		"nativeSrc": "9862:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9862:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9809:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:43:5"
																},
																"nativeSrc": "9809:71:5",
																"nodeType": "YulFunctionCall",
																"src": "9809:71:5"
															},
															"nativeSrc": "9809:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "9809:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9934:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9934:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9947:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9947:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9958:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9958:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9943:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9943:3:5"
																		},
																		"nativeSrc": "9943:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9943:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9890:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9890:43:5"
																},
																"nativeSrc": "9890:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9890:72:5"
															},
															"nativeSrc": "9890:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9890:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9637:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9727:9:5",
														"nodeType": "YulTypedName",
														"src": "9727:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9739:6:5",
														"nodeType": "YulTypedName",
														"src": "9739:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9747:6:5",
														"nodeType": "YulTypedName",
														"src": "9747:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9758:4:5",
														"nodeType": "YulTypedName",
														"src": "9758:4:5",
														"type": ""
													}
												],
												"src": "9637:332:5"
											},
											{
												"body": {
													"nativeSrc": "10081:128:5",
													"nodeType": "YulBlock",
													"src": "10081:128:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10103:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10103:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10111:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10111:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10099:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10099:3:5"
																		},
																		"nativeSrc": "10099:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10099:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365206f6620546f6b656e204120",
																		"kind": "string",
																		"nativeSrc": "10115:34:5",
																		"nodeType": "YulLiteral",
																		"src": "10115:34:5",
																		"type": "",
																		"value": "Insufficient balance of Token A "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10092:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10092:6:5"
																},
																"nativeSrc": "10092:58:5",
																"nodeType": "YulFunctionCall",
																"src": "10092:58:5"
															},
															"nativeSrc": "10092:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "10092:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10171:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10171:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10179:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10179:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10167:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10167:3:5"
																		},
																		"nativeSrc": "10167:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10167:15:5"
																	},
																	{
																		"hexValue": "696e2074686520636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "10184:17:5",
																		"nodeType": "YulLiteral",
																		"src": "10184:17:5",
																		"type": "",
																		"value": "in the contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10160:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10160:6:5"
																},
																"nativeSrc": "10160:42:5",
																"nodeType": "YulFunctionCall",
																"src": "10160:42:5"
															},
															"nativeSrc": "10160:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "10160:42:5"
														}
													]
												},
												"name": "store_literal_in_memory_ef501e88f874b45cff01569149f0f10d6e66417ab0104e5a308101b9fbf57f89",
												"nativeSrc": "9975:234:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10073:6:5",
														"nodeType": "YulTypedName",
														"src": "10073:6:5",
														"type": ""
													}
												],
												"src": "9975:234:5"
											},
											{
												"body": {
													"nativeSrc": "10361:220:5",
													"nodeType": "YulBlock",
													"src": "10361:220:5",
													"statements": [
														{
															"nativeSrc": "10371:74:5",
															"nodeType": "YulAssignment",
															"src": "10371:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10437:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10437:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10442:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10442:2:5",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10378:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "10378:58:5"
																},
																"nativeSrc": "10378:67:5",
																"nodeType": "YulFunctionCall",
																"src": "10378:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10371:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10371:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10543:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10543:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef501e88f874b45cff01569149f0f10d6e66417ab0104e5a308101b9fbf57f89",
																	"nativeSrc": "10454:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "10454:88:5"
																},
																"nativeSrc": "10454:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10454:93:5"
															},
															"nativeSrc": "10454:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "10454:93:5"
														},
														{
															"nativeSrc": "10556:19:5",
															"nodeType": "YulAssignment",
															"src": "10556:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10567:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10567:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10572:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10572:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10563:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10563:3:5"
																},
																"nativeSrc": "10563:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10563:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10556:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10556:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef501e88f874b45cff01569149f0f10d6e66417ab0104e5a308101b9fbf57f89_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10215:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10349:3:5",
														"nodeType": "YulTypedName",
														"src": "10349:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10357:3:5",
														"nodeType": "YulTypedName",
														"src": "10357:3:5",
														"type": ""
													}
												],
												"src": "10215:366:5"
											},
											{
												"body": {
													"nativeSrc": "10758:248:5",
													"nodeType": "YulBlock",
													"src": "10758:248:5",
													"statements": [
														{
															"nativeSrc": "10768:26:5",
															"nodeType": "YulAssignment",
															"src": "10768:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10780:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10780:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10791:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10791:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10776:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10776:3:5"
																},
																"nativeSrc": "10776:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10776:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10768:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10768:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10815:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10815:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10826:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10826:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10811:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10811:3:5"
																		},
																		"nativeSrc": "10811:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10811:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10834:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10834:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10840:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10840:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10830:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10830:3:5"
																		},
																		"nativeSrc": "10830:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10830:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10804:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10804:6:5"
																},
																"nativeSrc": "10804:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10804:47:5"
															},
															"nativeSrc": "10804:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10804:47:5"
														},
														{
															"nativeSrc": "10860:139:5",
															"nodeType": "YulAssignment",
															"src": "10860:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10994:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10994:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef501e88f874b45cff01569149f0f10d6e66417ab0104e5a308101b9fbf57f89_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10868:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10868:124:5"
																},
																"nativeSrc": "10868:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10868:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10860:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10860:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef501e88f874b45cff01569149f0f10d6e66417ab0104e5a308101b9fbf57f89__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10587:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10738:9:5",
														"nodeType": "YulTypedName",
														"src": "10738:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10753:4:5",
														"nodeType": "YulTypedName",
														"src": "10753:4:5",
														"type": ""
													}
												],
												"src": "10587:419:5"
											},
											{
												"body": {
													"nativeSrc": "11118:120:5",
													"nodeType": "YulBlock",
													"src": "11118:120:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11140:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11140:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11148:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11148:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11136:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11136:3:5"
																		},
																		"nativeSrc": "11136:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11136:14:5"
																	},
																	{
																		"hexValue": "45786368616e67652072617465206d7573742062652067726561746572207468",
																		"kind": "string",
																		"nativeSrc": "11152:34:5",
																		"nodeType": "YulLiteral",
																		"src": "11152:34:5",
																		"type": "",
																		"value": "Exchange rate must be greater th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11129:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11129:6:5"
																},
																"nativeSrc": "11129:58:5",
																"nodeType": "YulFunctionCall",
																"src": "11129:58:5"
															},
															"nativeSrc": "11129:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "11129:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11208:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11208:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11216:2:5",
																				"nodeType": "YulLiteral",
																				"src": "11216:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11204:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11204:3:5"
																		},
																		"nativeSrc": "11204:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11204:15:5"
																	},
																	{
																		"hexValue": "616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "11221:9:5",
																		"nodeType": "YulLiteral",
																		"src": "11221:9:5",
																		"type": "",
																		"value": "an zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11197:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11197:6:5"
																},
																"nativeSrc": "11197:34:5",
																"nodeType": "YulFunctionCall",
																"src": "11197:34:5"
															},
															"nativeSrc": "11197:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "11197:34:5"
														}
													]
												},
												"name": "store_literal_in_memory_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0",
												"nativeSrc": "11012:226:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11110:6:5",
														"nodeType": "YulTypedName",
														"src": "11110:6:5",
														"type": ""
													}
												],
												"src": "11012:226:5"
											},
											{
												"body": {
													"nativeSrc": "11390:220:5",
													"nodeType": "YulBlock",
													"src": "11390:220:5",
													"statements": [
														{
															"nativeSrc": "11400:74:5",
															"nodeType": "YulAssignment",
															"src": "11400:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11466:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11466:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11471:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11471:2:5",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11407:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "11407:58:5"
																},
																"nativeSrc": "11407:67:5",
																"nodeType": "YulFunctionCall",
																"src": "11407:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11400:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11572:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11572:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0",
																	"nativeSrc": "11483:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "11483:88:5"
																},
																"nativeSrc": "11483:93:5",
																"nodeType": "YulFunctionCall",
																"src": "11483:93:5"
															},
															"nativeSrc": "11483:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "11483:93:5"
														},
														{
															"nativeSrc": "11585:19:5",
															"nodeType": "YulAssignment",
															"src": "11585:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11596:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11596:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11601:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11601:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11592:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11592:3:5"
																},
																"nativeSrc": "11592:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11592:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11585:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11585:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11244:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11378:3:5",
														"nodeType": "YulTypedName",
														"src": "11378:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11386:3:5",
														"nodeType": "YulTypedName",
														"src": "11386:3:5",
														"type": ""
													}
												],
												"src": "11244:366:5"
											},
											{
												"body": {
													"nativeSrc": "11787:248:5",
													"nodeType": "YulBlock",
													"src": "11787:248:5",
													"statements": [
														{
															"nativeSrc": "11797:26:5",
															"nodeType": "YulAssignment",
															"src": "11797:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11809:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11809:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11820:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11820:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11805:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11805:3:5"
																},
																"nativeSrc": "11805:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11805:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11797:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11797:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11844:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11844:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11855:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11855:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11840:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11840:3:5"
																		},
																		"nativeSrc": "11840:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11840:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11863:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "11863:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11869:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11869:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11859:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11859:3:5"
																		},
																		"nativeSrc": "11859:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11859:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11833:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11833:6:5"
																},
																"nativeSrc": "11833:47:5",
																"nodeType": "YulFunctionCall",
																"src": "11833:47:5"
															},
															"nativeSrc": "11833:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "11833:47:5"
														},
														{
															"nativeSrc": "11889:139:5",
															"nodeType": "YulAssignment",
															"src": "11889:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12023:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "12023:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11897:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "11897:124:5"
																},
																"nativeSrc": "11897:131:5",
																"nodeType": "YulFunctionCall",
																"src": "11897:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11889:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11889:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11616:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11767:9:5",
														"nodeType": "YulTypedName",
														"src": "11767:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11782:4:5",
														"nodeType": "YulTypedName",
														"src": "11782:4:5",
														"type": ""
													}
												],
												"src": "11616:419:5"
											},
											{
												"body": {
													"nativeSrc": "12069:152:5",
													"nodeType": "YulBlock",
													"src": "12069:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12086:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12086:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12089:77:5",
																		"nodeType": "YulLiteral",
																		"src": "12089:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12079:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12079:6:5"
																},
																"nativeSrc": "12079:88:5",
																"nodeType": "YulFunctionCall",
																"src": "12079:88:5"
															},
															"nativeSrc": "12079:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "12079:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12183:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12183:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12186:4:5",
																		"nodeType": "YulLiteral",
																		"src": "12186:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12176:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12176:6:5"
																},
																"nativeSrc": "12176:15:5",
																"nodeType": "YulFunctionCall",
																"src": "12176:15:5"
															},
															"nativeSrc": "12176:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "12176:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12207:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12207:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12210:4:5",
																		"nodeType": "YulLiteral",
																		"src": "12210:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12200:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12200:6:5"
																},
																"nativeSrc": "12200:15:5",
																"nodeType": "YulFunctionCall",
																"src": "12200:15:5"
															},
															"nativeSrc": "12200:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "12200:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12041:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "12041:180:5"
											},
											{
												"body": {
													"nativeSrc": "12275:362:5",
													"nodeType": "YulBlock",
													"src": "12275:362:5",
													"statements": [
														{
															"nativeSrc": "12285:25:5",
															"nodeType": "YulAssignment",
															"src": "12285:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12308:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "12308:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12290:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "12290:17:5"
																},
																"nativeSrc": "12290:20:5",
																"nodeType": "YulFunctionCall",
																"src": "12290:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12285:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "12285:1:5"
																}
															]
														},
														{
															"nativeSrc": "12319:25:5",
															"nodeType": "YulAssignment",
															"src": "12319:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12342:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "12342:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12324:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "12324:17:5"
																},
																"nativeSrc": "12324:20:5",
																"nodeType": "YulFunctionCall",
																"src": "12324:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12319:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "12319:1:5"
																}
															]
														},
														{
															"nativeSrc": "12353:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "12353:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12376:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "12376:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12379:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "12379:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12372:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12372:3:5"
																},
																"nativeSrc": "12372:9:5",
																"nodeType": "YulFunctionCall",
																"src": "12372:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12357:11:5",
																	"nodeType": "YulTypedName",
																	"src": "12357:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12390:41:5",
															"nodeType": "YulAssignment",
															"src": "12390:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12419:11:5",
																		"nodeType": "YulIdentifier",
																		"src": "12419:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12401:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "12401:17:5"
																},
																"nativeSrc": "12401:30:5",
																"nodeType": "YulFunctionCall",
																"src": "12401:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12390:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "12390:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12608:22:5",
																"nodeType": "YulBlock",
																"src": "12608:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12610:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "12610:16:5"
																			},
																			"nativeSrc": "12610:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "12610:18:5"
																		},
																		"nativeSrc": "12610:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "12610:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12541:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "12541:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12534:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "12534:6:5"
																				},
																				"nativeSrc": "12534:9:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12534:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12564:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "12564:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12571:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "12571:7:5"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12580:1:5",
																								"nodeType": "YulIdentifier",
																								"src": "12580:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12567:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "12567:3:5"
																						},
																						"nativeSrc": "12567:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "12567:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12561:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "12561:2:5"
																				},
																				"nativeSrc": "12561:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12561:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12514:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "12514:2:5"
																		},
																		"nativeSrc": "12514:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12514:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12494:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12494:6:5"
																},
																"nativeSrc": "12494:113:5",
																"nodeType": "YulFunctionCall",
																"src": "12494:113:5"
															},
															"nativeSrc": "12491:139:5",
															"nodeType": "YulIf",
															"src": "12491:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12227:410:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12258:1:5",
														"nodeType": "YulTypedName",
														"src": "12258:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12261:1:5",
														"nodeType": "YulTypedName",
														"src": "12261:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12267:7:5",
														"nodeType": "YulTypedName",
														"src": "12267:7:5",
														"type": ""
													}
												],
												"src": "12227:410:5"
											},
											{
												"body": {
													"nativeSrc": "12671:152:5",
													"nodeType": "YulBlock",
													"src": "12671:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12688:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12688:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12691:77:5",
																		"nodeType": "YulLiteral",
																		"src": "12691:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12681:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12681:6:5"
																},
																"nativeSrc": "12681:88:5",
																"nodeType": "YulFunctionCall",
																"src": "12681:88:5"
															},
															"nativeSrc": "12681:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "12681:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12785:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12785:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12788:4:5",
																		"nodeType": "YulLiteral",
																		"src": "12788:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12778:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12778:6:5"
																},
																"nativeSrc": "12778:15:5",
																"nodeType": "YulFunctionCall",
																"src": "12778:15:5"
															},
															"nativeSrc": "12778:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "12778:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12809:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12809:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12812:4:5",
																		"nodeType": "YulLiteral",
																		"src": "12812:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12802:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12802:6:5"
																},
																"nativeSrc": "12802:15:5",
																"nodeType": "YulFunctionCall",
																"src": "12802:15:5"
															},
															"nativeSrc": "12802:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "12802:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "12643:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "12643:180:5"
											},
											{
												"body": {
													"nativeSrc": "12871:143:5",
													"nodeType": "YulBlock",
													"src": "12871:143:5",
													"statements": [
														{
															"nativeSrc": "12881:25:5",
															"nodeType": "YulAssignment",
															"src": "12881:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12904:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "12904:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12886:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "12886:17:5"
																},
																"nativeSrc": "12886:20:5",
																"nodeType": "YulFunctionCall",
																"src": "12886:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12881:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "12881:1:5"
																}
															]
														},
														{
															"nativeSrc": "12915:25:5",
															"nodeType": "YulAssignment",
															"src": "12915:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12938:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "12938:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12920:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "12920:17:5"
																},
																"nativeSrc": "12920:20:5",
																"nodeType": "YulFunctionCall",
																"src": "12920:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12915:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "12915:1:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12962:22:5",
																"nodeType": "YulBlock",
																"src": "12962:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12964:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "12964:16:5"
																			},
																			"nativeSrc": "12964:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "12964:18:5"
																		},
																		"nativeSrc": "12964:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "12964:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12959:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "12959:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12952:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12952:6:5"
																},
																"nativeSrc": "12952:9:5",
																"nodeType": "YulFunctionCall",
																"src": "12952:9:5"
															},
															"nativeSrc": "12949:35:5",
															"nodeType": "YulIf",
															"src": "12949:35:5"
														},
														{
															"nativeSrc": "12994:14:5",
															"nodeType": "YulAssignment",
															"src": "12994:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13003:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "13003:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13006:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "13006:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12999:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12999:3:5"
																},
																"nativeSrc": "12999:9:5",
																"nodeType": "YulFunctionCall",
																"src": "12999:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12994:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "12994:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12829:185:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12860:1:5",
														"nodeType": "YulTypedName",
														"src": "12860:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12863:1:5",
														"nodeType": "YulTypedName",
														"src": "12863:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12869:1:5",
														"nodeType": "YulTypedName",
														"src": "12869:1:5",
														"type": ""
													}
												],
												"src": "12829:185:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_1ae93c22fd203b1cf6171f2fdf72425f1adc56b87f99f5bdccfb50eb9d9815c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance of Token B \")\n\n        mstore(add(memPtr, 32), \"in the contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ae93c22fd203b1cf6171f2fdf72425f1adc56b87f99f5bdccfb50eb9d9815c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_1ae93c22fd203b1cf6171f2fdf72425f1adc56b87f99f5bdccfb50eb9d9815c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ae93c22fd203b1cf6171f2fdf72425f1adc56b87f99f5bdccfb50eb9d9815c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ae93c22fd203b1cf6171f2fdf72425f1adc56b87f99f5bdccfb50eb9d9815c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token A transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token B transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ef501e88f874b45cff01569149f0f10d6e66417ab0104e5a308101b9fbf57f89(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance of Token A \")\n\n        mstore(add(memPtr, 32), \"in the contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef501e88f874b45cff01569149f0f10d6e66417ab0104e5a308101b9fbf57f89_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_ef501e88f874b45cff01569149f0f10d6e66417ab0104e5a308101b9fbf57f89(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef501e88f874b45cff01569149f0f10d6e66417ab0104e5a308101b9fbf57f89__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef501e88f874b45cff01569149f0f10d6e66417ab0104e5a308101b9fbf57f89_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exchange rate must be greater th\")\n\n        mstore(add(memPtr, 32), \"an zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063859497881161006f578063859497881461012b5780638da5cb5b14610147578063a84003f314610165578063db068e0e14610181578063e4c93be71461019d578063f2fde38b146101b9576100a7565b80630fc63d10146100ab57806338720f72146100c95780633ba0b9a9146100e55780635f64b55b14610103578063715018a614610121575b5f80fd5b6100b36101d5565b6040516100c09190610d86565b60405180910390f35b6100e360048036038101906100de9190610dd6565b6101fa565b005b6100ed61053b565b6040516100fa9190610e10565b60405180910390f35b61010b610541565b6040516101189190610d86565b60405180910390f35b610129610566565b005b61014560048036038101906101409190610dd6565b610579565b005b61014f6108ba565b60405161015c9190610e49565b60405180910390f35b61017f600480360381019061017a9190610dd6565b6108e1565b005b61019b60048036038101906101969190610dd6565b6109ce565b005b6101b760048036038101906101b29190610dd6565b610a22565b005b6101d360048036038101906101ce9190610e8c565b610b0f565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f811161023c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023390610f11565b60405180910390fd5b5f61025260035483610b9390919063ffffffff16565b90508060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102af9190610e49565b602060405180830381865afa1580156102ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ee9190610f43565b101561032f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032690610fde565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161038d93929190610ffc565b6020604051808303815f875af11580156103a9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103cd9190611066565b61040c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610403906110db565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016104689291906110f9565b6020604051808303815f875af1158015610484573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a89190611066565b6104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de9061116a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758838360405161052f929190611188565b60405180910390a25050565b60035481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61056e610ba8565b6105775f610c2f565b565b5f81116105bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b290610f11565b60405180910390fd5b5f6105d160035483610cf090919063ffffffff16565b90508060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161062e9190610e49565b602060405180830381865afa158015610649573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061066d9190610f43565b10156106ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a59061121f565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161070c93929190610ffc565b6020604051808303815f875af1158015610728573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061074c9190611066565b61078b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107829061116a565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016107e79291906110f9565b6020604051808303815f875af1158015610803573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108279190611066565b610866576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085d906110db565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a75882846040516108ae929190611188565b60405180910390a25050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108e9610ba8565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61092e6108ba565b836040518363ffffffff1660e01b815260040161094c9291906110f9565b6020604051808303815f875af1158015610968573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061098c9190611066565b6109cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c29061116a565b60405180910390fd5b50565b6109d6610ba8565b5f8111610a18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0f906112ad565b60405180910390fd5b8060038190555050565b610a2a610ba8565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610a6f6108ba565b836040518363ffffffff1660e01b8152600401610a8d9291906110f9565b6020604051808303815f875af1158015610aa9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610acd9190611066565b610b0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b03906110db565b60405180910390fd5b50565b610b17610ba8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b87575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b7e9190610e49565b60405180910390fd5b610b9081610c2f565b50565b5f8183610ba091906112f8565b905092915050565b610bb0610d05565b73ffffffffffffffffffffffffffffffffffffffff16610bce6108ba565b73ffffffffffffffffffffffffffffffffffffffff1614610c2d57610bf1610d05565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c249190610e49565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8183610cfd9190611366565b905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610d4e610d49610d4484610d0c565b610d2b565b610d0c565b9050919050565b5f610d5f82610d34565b9050919050565b5f610d7082610d55565b9050919050565b610d8081610d66565b82525050565b5f602082019050610d995f830184610d77565b92915050565b5f80fd5b5f819050919050565b610db581610da3565b8114610dbf575f80fd5b50565b5f81359050610dd081610dac565b92915050565b5f60208284031215610deb57610dea610d9f565b5b5f610df884828501610dc2565b91505092915050565b610e0a81610da3565b82525050565b5f602082019050610e235f830184610e01565b92915050565b5f610e3382610d0c565b9050919050565b610e4381610e29565b82525050565b5f602082019050610e5c5f830184610e3a565b92915050565b610e6b81610e29565b8114610e75575f80fd5b50565b5f81359050610e8681610e62565b92915050565b5f60208284031215610ea157610ea0610d9f565b5b5f610eae84828501610e78565b91505092915050565b5f82825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f610efb602083610eb7565b9150610f0682610ec7565b602082019050919050565b5f6020820190508181035f830152610f2881610eef565b9050919050565b5f81519050610f3d81610dac565b92915050565b5f60208284031215610f5857610f57610d9f565b5b5f610f6584828501610f2f565b91505092915050565b7f496e73756666696369656e742062616c616e6365206f6620546f6b656e2042205f8201527f696e2074686520636f6e74726163740000000000000000000000000000000000602082015250565b5f610fc8602f83610eb7565b9150610fd382610f6e565b604082019050919050565b5f6020820190508181035f830152610ff581610fbc565b9050919050565b5f60608201905061100f5f830186610e3a565b61101c6020830185610e3a565b6110296040830184610e01565b949350505050565b5f8115159050919050565b61104581611031565b811461104f575f80fd5b50565b5f815190506110608161103c565b92915050565b5f6020828403121561107b5761107a610d9f565b5b5f61108884828501611052565b91505092915050565b7f546f6b656e2041207472616e73666572206661696c65640000000000000000005f82015250565b5f6110c5601783610eb7565b91506110d082611091565b602082019050919050565b5f6020820190508181035f8301526110f2816110b9565b9050919050565b5f60408201905061110c5f830185610e3a565b6111196020830184610e01565b9392505050565b7f546f6b656e2042207472616e73666572206661696c65640000000000000000005f82015250565b5f611154601783610eb7565b915061115f82611120565b602082019050919050565b5f6020820190508181035f83015261118181611148565b9050919050565b5f60408201905061119b5f830185610e01565b6111a86020830184610e01565b9392505050565b7f496e73756666696369656e742062616c616e6365206f6620546f6b656e2041205f8201527f696e2074686520636f6e74726163740000000000000000000000000000000000602082015250565b5f611209602f83610eb7565b9150611214826111af565b604082019050919050565b5f6020820190508181035f830152611236816111fd565b9050919050565b7f45786368616e67652072617465206d75737420626520677265617465722074685f8201527f616e207a65726f00000000000000000000000000000000000000000000000000602082015250565b5f611297602783610eb7565b91506112a28261123d565b604082019050919050565b5f6020820190508181035f8301526112c48161128b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61130282610da3565b915061130d83610da3565b925082820261131b81610da3565b91508282048414831517611332576113316112cb565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61137082610da3565b915061137b83610da3565b92508261138b5761138a611339565b5b82820490509291505056fea264697066735822122085065c738ec38f2a797ca1b21f74864ad4bbf54e933658a3e19270dbaf68691c64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85949788 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x85949788 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xA84003F3 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xDB068E0E EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xE4C93BE7 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B9 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x38720F72 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x121 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH2 0x53B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH2 0x566 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x8E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0xA22 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0xB0F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x23C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x233 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x252 PUSH1 0x3 SLOAD DUP4 PUSH2 0xB93 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x326 SWAP1 PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x40C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x403 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x468 SWAP3 SWAP2 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x484 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A8 SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DE SWAP1 PUSH2 0x116A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x77F92A1B6A1A11DE8CA49515AD4C1FAD45632DD3442167D74B90B304A3C7A758 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x52F SWAP3 SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x56E PUSH2 0xBA8 JUMP JUMPDEST PUSH2 0x577 PUSH0 PUSH2 0xC2F JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5D1 PUSH1 0x3 SLOAD DUP4 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x649 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66D SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST LT ISZERO PUSH2 0x6AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A5 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x728 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x782 SWAP1 PUSH2 0x116A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E7 SWAP3 SWAP2 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x803 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x827 SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85D SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x77F92A1B6A1A11DE8CA49515AD4C1FAD45632DD3442167D74B90B304A3C7A758 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8AE SWAP3 SWAP2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8E9 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x92E PUSH2 0x8BA JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94C SWAP3 SWAP2 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x968 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x9CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C2 SWAP1 PUSH2 0x116A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9D6 PUSH2 0xBA8 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0F SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA2A PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0xA6F PUSH2 0x8BA JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8D SWAP3 SWAP2 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAA9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xACD SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB03 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB17 PUSH2 0xBA8 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB87 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB90 DUP2 PUSH2 0xC2F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xBA0 SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBB0 PUSH2 0xD05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBCE PUSH2 0x8BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC2D JUMPI PUSH2 0xBF1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x1366 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD4E PUSH2 0xD49 PUSH2 0xD44 DUP5 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xD2B JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD5F DUP3 PUSH2 0xD34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD70 DUP3 PUSH2 0xD55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD80 DUP2 PUSH2 0xD66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD99 PUSH0 DUP4 ADD DUP5 PUSH2 0xD77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB5 DUP2 PUSH2 0xDA3 JUMP JUMPDEST DUP2 EQ PUSH2 0xDBF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD0 DUP2 PUSH2 0xDAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDEA PUSH2 0xD9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDF8 DUP5 DUP3 DUP6 ADD PUSH2 0xDC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE0A DUP2 PUSH2 0xDA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE23 PUSH0 DUP4 ADD DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE33 DUP3 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE43 DUP2 PUSH2 0xE29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE5C PUSH0 DUP4 ADD DUP5 PUSH2 0xE3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE6B DUP2 PUSH2 0xE29 JUMP JUMPDEST DUP2 EQ PUSH2 0xE75 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE86 DUP2 PUSH2 0xE62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xEA0 PUSH2 0xD9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEAE DUP5 DUP3 DUP6 ADD PUSH2 0xE78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEFB PUSH1 0x20 DUP4 PUSH2 0xEB7 JUMP JUMPDEST SWAP2 POP PUSH2 0xF06 DUP3 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF28 DUP2 PUSH2 0xEEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF3D DUP2 PUSH2 0xDAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF58 JUMPI PUSH2 0xF57 PUSH2 0xD9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF65 DUP5 DUP3 DUP6 ADD PUSH2 0xF2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365206F6620546F6B656E204220 PUSH0 DUP3 ADD MSTORE PUSH32 0x696E2074686520636F6E74726163740000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFC8 PUSH1 0x2F DUP4 PUSH2 0xEB7 JUMP JUMPDEST SWAP2 POP PUSH2 0xFD3 DUP3 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFF5 DUP2 PUSH2 0xFBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x100F PUSH0 DUP4 ADD DUP7 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x101C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x1029 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1045 DUP2 PUSH2 0x1031 JUMP JUMPDEST DUP2 EQ PUSH2 0x104F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1060 DUP2 PUSH2 0x103C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107B JUMPI PUSH2 0x107A PUSH2 0xD9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1088 DUP5 DUP3 DUP6 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E2041207472616E73666572206661696C6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10C5 PUSH1 0x17 DUP4 PUSH2 0xEB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D0 DUP3 PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10F2 DUP2 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x110C PUSH0 DUP4 ADD DUP6 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x1119 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E2042207472616E73666572206661696C6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1154 PUSH1 0x17 DUP4 PUSH2 0xEB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x115F DUP3 PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1181 DUP2 PUSH2 0x1148 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x119B PUSH0 DUP4 ADD DUP6 PUSH2 0xE01 JUMP JUMPDEST PUSH2 0x11A8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365206F6620546F6B656E204120 PUSH0 DUP3 ADD MSTORE PUSH32 0x696E2074686520636F6E74726163740000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1209 PUSH1 0x2F DUP4 PUSH2 0xEB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1214 DUP3 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1236 DUP2 PUSH2 0x11FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786368616E67652072617465206D7573742062652067726561746572207468 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E207A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1297 PUSH1 0x27 DUP4 PUSH2 0xEB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x12A2 DUP3 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12C4 DUP2 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1302 DUP3 PUSH2 0xDA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x130D DUP4 PUSH2 0xDA3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x131B DUP2 PUSH2 0xDA3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1332 JUMPI PUSH2 0x1331 PUSH2 0x12CB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1370 DUP3 PUSH2 0xDA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x137B DUP4 PUSH2 0xDA3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x138B JUMPI PUSH2 0x138A PUSH2 0x1339 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 MOD 0x5C PUSH20 0x8EC38F2A797CA1B21F74864AD4BBF54E933658A3 0xE1 SWAP3 PUSH17 0xDBAF68691C64736F6C6343000817003300 ",
							"sourceMap": "233:2772:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;305:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;979:651;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;359:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;332:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:651:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2856:146:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2340:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2625:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;305:20:4;;;;;;;;;;;;;:::o;979:651::-;1052:1;1042:7;:11;1034:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1103:15;1121:25;1133:12;;1121:7;:11;;:25;;;;:::i;:::-;1103:43;;1200:7;1165:6;;;;;;;;;;;:16;;;1190:4;1165:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;1157:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;1341:6;;;;;;;;;;;:19;;;1361:10;1381:4;1388:7;1341:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1333:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;1506:6;;;;;;;;;;;:15;;;1522:10;1534:7;1506:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1498:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1593:10;1588:34;;;1605:7;1614;1588:34;;;;;;;:::i;:::-;;;;;;;;1023:607;979:651;:::o;359:27::-;;;;:::o;332:20::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:651:4:-;1711:1;1701:7;:11;1693:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1762:15;1780:25;1792:12;;1780:7;:11;;:25;;;;:::i;:::-;1762:43;;1859:7;1824:6;;;;;;;;;;;:16;;;1849:4;1824:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;1816:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;2000:6;;;;;;;;;;;:19;;;2020:10;2040:4;2047:7;2000:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1992:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;2165:6;;;;;;;;;;;:15;;;2181:10;2193:7;2165:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2157:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2252:10;2247:34;;;2264:7;2273;2247:34;;;;;;;:::i;:::-;;;;;;;;1682:607;1638:651;:::o;:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2856:146:4:-;1531:13:0;:11;:13::i;:::-;2934:6:4::1;;;;;;;;;;;:15;;;2950:7;:5;:7::i;:::-;2959:6;2934:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2926:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2856:146:::0;:::o;2340:200::-;1531:13:0;:11;:13::i;:::-;2446:1:4::1;2428:15;:19;2420:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2517:15;2502:12;:30;;;;2340:200:::0;:::o;2625:146::-;1531:13:0;:11;:13::i;:::-;2703:6:4::1;;;;;;;;;;;:15;;;2719:7;:5;:7::i;:::-;2728:6;2703:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2695:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2625:146:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3465:96:3:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3850:96:3:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;656::2:-;709:7;735:10;728:17;;656:96;:::o;7:126:5:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1133:117::-;1242:1;1239;1232:12;1379:77;1416:7;1445:5;1434:16;;1379:77;;;:::o;1462:122::-;1535:24;1553:5;1535:24;:::i;:::-;1528:5;1525:35;1515:63;;1574:1;1571;1564:12;1515:63;1462:122;:::o;1590:139::-;1636:5;1674:6;1661:20;1652:29;;1690:33;1717:5;1690:33;:::i;:::-;1590:139;;;;:::o;1735:329::-;1794:6;1843:2;1831:9;1822:7;1818:23;1814:32;1811:119;;;1849:79;;:::i;:::-;1811:119;1969:1;1994:53;2039:7;2030:6;2019:9;2015:22;1994:53;:::i;:::-;1984:63;;1940:117;1735:329;;;;:::o;2070:118::-;2157:24;2175:5;2157:24;:::i;:::-;2152:3;2145:37;2070:118;;:::o;2194:222::-;2287:4;2325:2;2314:9;2310:18;2302:26;;2338:71;2406:1;2395:9;2391:17;2382:6;2338:71;:::i;:::-;2194:222;;;;:::o;2422:96::-;2459:7;2488:24;2506:5;2488:24;:::i;:::-;2477:35;;2422:96;;;:::o;2524:118::-;2611:24;2629:5;2611:24;:::i;:::-;2606:3;2599:37;2524:118;;:::o;2648:222::-;2741:4;2779:2;2768:9;2764:18;2756:26;;2792:71;2860:1;2849:9;2845:17;2836:6;2792:71;:::i;:::-;2648:222;;;;:::o;2876:122::-;2949:24;2967:5;2949:24;:::i;:::-;2942:5;2939:35;2929:63;;2988:1;2985;2978:12;2929:63;2876:122;:::o;3004:139::-;3050:5;3088:6;3075:20;3066:29;;3104:33;3131:5;3104:33;:::i;:::-;3004:139;;;;:::o;3149:329::-;3208:6;3257:2;3245:9;3236:7;3232:23;3228:32;3225:119;;;3263:79;;:::i;:::-;3225:119;3383:1;3408:53;3453:7;3444:6;3433:9;3429:22;3408:53;:::i;:::-;3398:63;;3354:117;3149:329;;;;:::o;3484:169::-;3568:11;3602:6;3597:3;3590:19;3642:4;3637:3;3633:14;3618:29;;3484:169;;;;:::o;3659:182::-;3799:34;3795:1;3787:6;3783:14;3776:58;3659:182;:::o;3847:366::-;3989:3;4010:67;4074:2;4069:3;4010:67;:::i;:::-;4003:74;;4086:93;4175:3;4086:93;:::i;:::-;4204:2;4199:3;4195:12;4188:19;;3847:366;;;:::o;4219:419::-;4385:4;4423:2;4412:9;4408:18;4400:26;;4472:9;4466:4;4462:20;4458:1;4447:9;4443:17;4436:47;4500:131;4626:4;4500:131;:::i;:::-;4492:139;;4219:419;;;:::o;4644:143::-;4701:5;4732:6;4726:13;4717:22;;4748:33;4775:5;4748:33;:::i;:::-;4644:143;;;;:::o;4793:351::-;4863:6;4912:2;4900:9;4891:7;4887:23;4883:32;4880:119;;;4918:79;;:::i;:::-;4880:119;5038:1;5063:64;5119:7;5110:6;5099:9;5095:22;5063:64;:::i;:::-;5053:74;;5009:128;4793:351;;;;:::o;5150:234::-;5290:34;5286:1;5278:6;5274:14;5267:58;5359:17;5354:2;5346:6;5342:15;5335:42;5150:234;:::o;5390:366::-;5532:3;5553:67;5617:2;5612:3;5553:67;:::i;:::-;5546:74;;5629:93;5718:3;5629:93;:::i;:::-;5747:2;5742:3;5738:12;5731:19;;5390:366;;;:::o;5762:419::-;5928:4;5966:2;5955:9;5951:18;5943:26;;6015:9;6009:4;6005:20;6001:1;5990:9;5986:17;5979:47;6043:131;6169:4;6043:131;:::i;:::-;6035:139;;5762:419;;;:::o;6187:442::-;6336:4;6374:2;6363:9;6359:18;6351:26;;6387:71;6455:1;6444:9;6440:17;6431:6;6387:71;:::i;:::-;6468:72;6536:2;6525:9;6521:18;6512:6;6468:72;:::i;:::-;6550;6618:2;6607:9;6603:18;6594:6;6550:72;:::i;:::-;6187:442;;;;;;:::o;6635:90::-;6669:7;6712:5;6705:13;6698:21;6687:32;;6635:90;;;:::o;6731:116::-;6801:21;6816:5;6801:21;:::i;:::-;6794:5;6791:32;6781:60;;6837:1;6834;6827:12;6781:60;6731:116;:::o;6853:137::-;6907:5;6938:6;6932:13;6923:22;;6954:30;6978:5;6954:30;:::i;:::-;6853:137;;;;:::o;6996:345::-;7063:6;7112:2;7100:9;7091:7;7087:23;7083:32;7080:119;;;7118:79;;:::i;:::-;7080:119;7238:1;7263:61;7316:7;7307:6;7296:9;7292:22;7263:61;:::i;:::-;7253:71;;7209:125;6996:345;;;;:::o;7347:173::-;7487:25;7483:1;7475:6;7471:14;7464:49;7347:173;:::o;7526:366::-;7668:3;7689:67;7753:2;7748:3;7689:67;:::i;:::-;7682:74;;7765:93;7854:3;7765:93;:::i;:::-;7883:2;7878:3;7874:12;7867:19;;7526:366;;;:::o;7898:419::-;8064:4;8102:2;8091:9;8087:18;8079:26;;8151:9;8145:4;8141:20;8137:1;8126:9;8122:17;8115:47;8179:131;8305:4;8179:131;:::i;:::-;8171:139;;7898:419;;;:::o;8323:332::-;8444:4;8482:2;8471:9;8467:18;8459:26;;8495:71;8563:1;8552:9;8548:17;8539:6;8495:71;:::i;:::-;8576:72;8644:2;8633:9;8629:18;8620:6;8576:72;:::i;:::-;8323:332;;;;;:::o;8661:173::-;8801:25;8797:1;8789:6;8785:14;8778:49;8661:173;:::o;8840:366::-;8982:3;9003:67;9067:2;9062:3;9003:67;:::i;:::-;8996:74;;9079:93;9168:3;9079:93;:::i;:::-;9197:2;9192:3;9188:12;9181:19;;8840:366;;;:::o;9212:419::-;9378:4;9416:2;9405:9;9401:18;9393:26;;9465:9;9459:4;9455:20;9451:1;9440:9;9436:17;9429:47;9493:131;9619:4;9493:131;:::i;:::-;9485:139;;9212:419;;;:::o;9637:332::-;9758:4;9796:2;9785:9;9781:18;9773:26;;9809:71;9877:1;9866:9;9862:17;9853:6;9809:71;:::i;:::-;9890:72;9958:2;9947:9;9943:18;9934:6;9890:72;:::i;:::-;9637:332;;;;;:::o;9975:234::-;10115:34;10111:1;10103:6;10099:14;10092:58;10184:17;10179:2;10171:6;10167:15;10160:42;9975:234;:::o;10215:366::-;10357:3;10378:67;10442:2;10437:3;10378:67;:::i;:::-;10371:74;;10454:93;10543:3;10454:93;:::i;:::-;10572:2;10567:3;10563:12;10556:19;;10215:366;;;:::o;10587:419::-;10753:4;10791:2;10780:9;10776:18;10768:26;;10840:9;10834:4;10830:20;10826:1;10815:9;10811:17;10804:47;10868:131;10994:4;10868:131;:::i;:::-;10860:139;;10587:419;;;:::o;11012:226::-;11152:34;11148:1;11140:6;11136:14;11129:58;11221:9;11216:2;11208:6;11204:15;11197:34;11012:226;:::o;11244:366::-;11386:3;11407:67;11471:2;11466:3;11407:67;:::i;:::-;11400:74;;11483:93;11572:3;11483:93;:::i;:::-;11601:2;11596:3;11592:12;11585:19;;11244:366;;;:::o;11616:419::-;11782:4;11820:2;11809:9;11805:18;11797:26;;11869:9;11863:4;11859:20;11855:1;11844:9;11840:17;11833:47;11897:131;12023:4;11897:131;:::i;:::-;11889:139;;11616:419;;;:::o;12041:180::-;12089:77;12086:1;12079:88;12186:4;12183:1;12176:15;12210:4;12207:1;12200:15;12227:410;12267:7;12290:20;12308:1;12290:20;:::i;:::-;12285:25;;12324:20;12342:1;12324:20;:::i;:::-;12319:25;;12379:1;12376;12372:9;12401:30;12419:11;12401:30;:::i;:::-;12390:41;;12580:1;12571:7;12567:15;12564:1;12561:22;12541:1;12534:9;12514:83;12491:139;;12610:18;;:::i;:::-;12491:139;12275:362;12227:410;;;;:::o;12643:180::-;12691:77;12688:1;12681:88;12788:4;12785:1;12778:15;12812:4;12809:1;12802:15;12829:185;12869:1;12886:20;12904:1;12886:20;:::i;:::-;12881:25;;12920:20;12938:1;12920:20;:::i;:::-;12915:25;;12959:1;12949:35;;12964:18;;:::i;:::-;12949:35;13006:1;13003;12999:9;12994:14;;12829:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1013600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"exchangeRate()": "2470",
								"owner()": "2537",
								"renounceOwnership()": "infinite",
								"setExchangeRate(uint256)": "infinite",
								"swapAToB(uint256)": "infinite",
								"swapBToA(uint256)": "infinite",
								"tokenA()": "infinite",
								"tokenB()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdrawTokenA(uint256)": "infinite",
								"withdrawTokenB(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 3005,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 233,
									"end": 3005,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 233,
									"end": 3005,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 508,
									"end": 971,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 508,
									"end": 971,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 508,
									"end": 971,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 508,
									"end": 971,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 508,
									"end": 971,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 508,
									"end": 971,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 508,
									"end": 971,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 508,
									"end": 971,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 606,
									"end": 618,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 667,
									"end": 668,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 639,
									"end": 669,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 639,
									"end": 669,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 647,
									"end": 654,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 639,
									"end": 669,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 639,
									"end": 669,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 639,
									"end": 669,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 631,
									"end": 704,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 631,
									"end": 704,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 751,
									"end": 752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 723,
									"end": 753,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 723,
									"end": 753,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 731,
									"end": 738,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 723,
									"end": 753,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 723,
									"end": 753,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 723,
									"end": 753,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 715,
									"end": 788,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 715,
									"end": 788,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 823,
									"end": 824,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 820,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 807,
									"end": 824,
									"modifierDepth": 1,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 799,
									"end": 868,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 799,
									"end": 868,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 890,
									"end": 897,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 881,
									"end": 887,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 881,
									"end": 887,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 881,
									"end": 897,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 917,
									"end": 924,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 908,
									"end": 914,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 908,
									"end": 914,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 908,
									"end": 924,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 950,
									"end": 963,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 935,
									"end": 947,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 935,
									"end": 963,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 935,
									"end": 963,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 935,
									"end": 963,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 935,
									"end": 963,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 508,
									"end": 971,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 233,
									"end": 3005,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 233,
									"end": 3005,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1054,
									"end": 1061,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1083,
									"end": 1088,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1072,
									"end": 1088,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1072,
									"end": 1088,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1191,
									"end": 1196,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1173,
									"end": 1197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1166,
									"end": 1171,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1163,
									"end": 1198,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1100,
									"end": 1222,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1285,
									"end": 1290,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1316,
									"end": 1322,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1310,
									"end": 1323,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1323,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1323,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 1359,
									"end": 1364,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1332,
									"end": 1365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "tag",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1228,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1377,
									"end": 1499,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1377,
									"end": 1499,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1450,
									"end": 1474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1443,
									"end": 1448,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1440,
									"end": 1475,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1430,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 1430,
									"end": 1493,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1489,
									"end": 1490,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1486,
									"end": 1487,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1479,
									"end": 1491,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1430,
									"end": 1493,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 1430,
									"end": 1493,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1377,
									"end": 1499,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1377,
									"end": 1499,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1562,
									"end": 1567,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1593,
									"end": 1599,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1587,
									"end": 1600,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1600,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1600,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1609,
									"end": 1642,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 1636,
									"end": 1641,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1609,
									"end": 1642,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1609,
									"end": 1642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1609,
									"end": 1642,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 1609,
									"end": 1642,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1505,
									"end": 1648,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1654,
									"end": 2530,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1654,
									"end": 2530,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1779,
									"end": 1785,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1787,
									"end": 1793,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1801,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1803,
									"end": 1809,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1852,
									"end": 1855,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1840,
									"end": 1849,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1831,
									"end": 1838,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1827,
									"end": 1850,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1823,
									"end": 1856,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1820,
									"end": 1940,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1820,
									"end": 1940,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 1820,
									"end": 1940,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1859,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 1859,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1859,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1859,
									"end": 1938,
									"name": "tag",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 1859,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1820,
									"end": 1940,
									"name": "tag",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 1820,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1979,
									"end": 1980,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2004,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 2074,
									"end": 2081,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2054,
									"end": 2063,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2050,
									"end": 2072,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2004,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 2004,
									"end": 2082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2004,
									"end": 2082,
									"name": "tag",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 2004,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1994,
									"end": 2082,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1994,
									"end": 2082,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1950,
									"end": 2092,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2131,
									"end": 2133,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2235,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 2227,
									"end": 2234,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2218,
									"end": 2224,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2207,
									"end": 2216,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2203,
									"end": 2225,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2157,
									"end": 2235,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 2157,
									"end": 2235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2157,
									"end": 2235,
									"name": "tag",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 2157,
									"end": 2235,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2147,
									"end": 2235,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 2147,
									"end": 2235,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2102,
									"end": 2245,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2284,
									"end": 2286,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2310,
									"end": 2374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 2366,
									"end": 2373,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2357,
									"end": 2363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 2355,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2342,
									"end": 2364,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2310,
									"end": 2374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 2310,
									"end": 2374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2310,
									"end": 2374,
									"name": "tag",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 2310,
									"end": 2374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2300,
									"end": 2374,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2300,
									"end": 2374,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2255,
									"end": 2384,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2423,
									"end": 2425,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 2449,
									"end": 2513,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 2505,
									"end": 2512,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2496,
									"end": 2502,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2485,
									"end": 2494,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2481,
									"end": 2503,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2449,
									"end": 2513,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 2449,
									"end": 2513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2449,
									"end": 2513,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 2449,
									"end": 2513,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2439,
									"end": 2513,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2439,
									"end": 2513,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2394,
									"end": 2523,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1654,
									"end": 2530,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1654,
									"end": 2530,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1654,
									"end": 2530,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1654,
									"end": 2530,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1654,
									"end": 2530,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1654,
									"end": 2530,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1654,
									"end": 2530,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1654,
									"end": 2530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2536,
									"end": 2654,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 2536,
									"end": 2654,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2623,
									"end": 2647,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 2641,
									"end": 2646,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2623,
									"end": 2647,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 2623,
									"end": 2647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2623,
									"end": 2647,
									"name": "tag",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 2623,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2618,
									"end": 2621,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2611,
									"end": 2648,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2536,
									"end": 2654,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2536,
									"end": 2654,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2536,
									"end": 2654,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2660,
									"end": 2882,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 2660,
									"end": 2882,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2753,
									"end": 2757,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2791,
									"end": 2793,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2780,
									"end": 2789,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2768,
									"end": 2794,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2768,
									"end": 2794,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2804,
									"end": 2875,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 2872,
									"end": 2873,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2861,
									"end": 2870,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2857,
									"end": 2874,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2848,
									"end": 2854,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2804,
									"end": 2875,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 2804,
									"end": 2875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2804,
									"end": 2875,
									"name": "tag",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 2804,
									"end": 2875,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2660,
									"end": 2882,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2660,
									"end": 2882,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2660,
									"end": 2882,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2660,
									"end": 2882,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2660,
									"end": 2882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2888,
									"end": 3057,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 2888,
									"end": 3057,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2972,
									"end": 2983,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3006,
									"end": 3012,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3001,
									"end": 3004,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2994,
									"end": 3013,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3046,
									"end": 3050,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3041,
									"end": 3044,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3037,
									"end": 3051,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3022,
									"end": 3051,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3022,
									"end": 3051,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2888,
									"end": 3057,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2888,
									"end": 3057,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2888,
									"end": 3057,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2888,
									"end": 3057,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2888,
									"end": 3057,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3063,
									"end": 3243,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 3063,
									"end": 3243,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3203,
									"end": 3235,
									"name": "PUSH",
									"source": 5,
									"value": "546F6B656E204120616464726573732063616E6E6F74206265207A65726F0000"
								},
								{
									"begin": 3199,
									"end": 3200,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3191,
									"end": 3197,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3187,
									"end": 3201,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3180,
									"end": 3236,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3063,
									"end": 3243,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3063,
									"end": 3243,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3249,
									"end": 3615,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3249,
									"end": 3615,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3391,
									"end": 3394,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3412,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 3476,
									"end": 3478,
									"name": "PUSH",
									"source": 5,
									"value": "1E"
								},
								{
									"begin": 3471,
									"end": 3474,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3412,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 3412,
									"end": 3479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3412,
									"end": 3479,
									"name": "tag",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 3412,
									"end": 3479,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3405,
									"end": 3479,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3405,
									"end": 3479,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3488,
									"end": 3581,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 3577,
									"end": 3580,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3488,
									"end": 3581,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 3488,
									"end": 3581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3488,
									"end": 3581,
									"name": "tag",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 3488,
									"end": 3581,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3606,
									"end": 3608,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3601,
									"end": 3604,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3597,
									"end": 3609,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3590,
									"end": 3609,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3590,
									"end": 3609,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3249,
									"end": 3615,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3249,
									"end": 3615,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3249,
									"end": 3615,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3249,
									"end": 3615,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3621,
									"end": 4040,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 3621,
									"end": 4040,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3787,
									"end": 3791,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3825,
									"end": 3827,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3814,
									"end": 3823,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3810,
									"end": 3828,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3802,
									"end": 3828,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3802,
									"end": 3828,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3874,
									"end": 3883,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3868,
									"end": 3872,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3864,
									"end": 3884,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 3860,
									"end": 3861,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3849,
									"end": 3858,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3845,
									"end": 3862,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3838,
									"end": 3885,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 4033,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "87"
								},
								{
									"begin": 4028,
									"end": 4032,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 4033,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3902,
									"end": 4033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3902,
									"end": 4033,
									"name": "tag",
									"source": 5,
									"value": "87"
								},
								{
									"begin": 3902,
									"end": 4033,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3894,
									"end": 4033,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3894,
									"end": 4033,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3621,
									"end": 4040,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3621,
									"end": 4040,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3621,
									"end": 4040,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3621,
									"end": 4040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4046,
									"end": 4226,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 4046,
									"end": 4226,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4186,
									"end": 4218,
									"name": "PUSH",
									"source": 5,
									"value": "546F6B656E204220616464726573732063616E6E6F74206265207A65726F0000"
								},
								{
									"begin": 4182,
									"end": 4183,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4174,
									"end": 4180,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4170,
									"end": 4184,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4163,
									"end": 4219,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4046,
									"end": 4226,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4046,
									"end": 4226,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4232,
									"end": 4598,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 4232,
									"end": 4598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4374,
									"end": 4377,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4395,
									"end": 4462,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "90"
								},
								{
									"begin": 4459,
									"end": 4461,
									"name": "PUSH",
									"source": 5,
									"value": "1E"
								},
								{
									"begin": 4454,
									"end": 4457,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4395,
									"end": 4462,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 4395,
									"end": 4462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4395,
									"end": 4462,
									"name": "tag",
									"source": 5,
									"value": "90"
								},
								{
									"begin": 4395,
									"end": 4462,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4388,
									"end": 4462,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4388,
									"end": 4462,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4471,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "91"
								},
								{
									"begin": 4560,
									"end": 4563,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4471,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 4471,
									"end": 4564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4471,
									"end": 4564,
									"name": "tag",
									"source": 5,
									"value": "91"
								},
								{
									"begin": 4471,
									"end": 4564,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4589,
									"end": 4591,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4584,
									"end": 4587,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4580,
									"end": 4592,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4573,
									"end": 4592,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4573,
									"end": 4592,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4232,
									"end": 4598,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4232,
									"end": 4598,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4232,
									"end": 4598,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4232,
									"end": 4598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5023,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 4604,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4770,
									"end": 4774,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4808,
									"end": 4810,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4797,
									"end": 4806,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4793,
									"end": 4811,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4785,
									"end": 4811,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4785,
									"end": 4811,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4866,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4851,
									"end": 4855,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4847,
									"end": 4867,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4843,
									"end": 4844,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4832,
									"end": 4841,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4828,
									"end": 4845,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4821,
									"end": 4868,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4885,
									"end": 5016,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 5011,
									"end": 5015,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4885,
									"end": 5016,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 4885,
									"end": 5016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4885,
									"end": 5016,
									"name": "tag",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 4885,
									"end": 5016,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4877,
									"end": 5016,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4877,
									"end": 5016,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5023,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5023,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5023,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5029,
									"end": 5255,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 5029,
									"end": 5255,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5169,
									"end": 5203,
									"name": "PUSH",
									"source": 5,
									"value": "45786368616E67652072617465206D7573742062652067726561746572207468"
								},
								{
									"begin": 5165,
									"end": 5166,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5157,
									"end": 5163,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5153,
									"end": 5167,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5146,
									"end": 5204,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5238,
									"end": 5247,
									"name": "PUSH",
									"source": 5,
									"value": "616E207A65726F00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5233,
									"end": 5235,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5225,
									"end": 5231,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5221,
									"end": 5236,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5214,
									"end": 5248,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5029,
									"end": 5255,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5029,
									"end": 5255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5261,
									"end": 5627,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 5261,
									"end": 5627,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5403,
									"end": 5406,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5424,
									"end": 5491,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "96"
								},
								{
									"begin": 5488,
									"end": 5490,
									"name": "PUSH",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 5483,
									"end": 5486,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5424,
									"end": 5491,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 5424,
									"end": 5491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5424,
									"end": 5491,
									"name": "tag",
									"source": 5,
									"value": "96"
								},
								{
									"begin": 5424,
									"end": 5491,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5417,
									"end": 5491,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5417,
									"end": 5491,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5500,
									"end": 5593,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "97"
								},
								{
									"begin": 5589,
									"end": 5592,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5500,
									"end": 5593,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 5500,
									"end": 5593,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5500,
									"end": 5593,
									"name": "tag",
									"source": 5,
									"value": "97"
								},
								{
									"begin": 5500,
									"end": 5593,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5618,
									"end": 5620,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5613,
									"end": 5616,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5609,
									"end": 5621,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5602,
									"end": 5621,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5602,
									"end": 5621,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5261,
									"end": 5627,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5261,
									"end": 5627,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5261,
									"end": 5627,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5261,
									"end": 5627,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5633,
									"end": 6052,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 5633,
									"end": 6052,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5799,
									"end": 5803,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5837,
									"end": 5839,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5826,
									"end": 5835,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5822,
									"end": 5840,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5814,
									"end": 5840,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5814,
									"end": 5840,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5886,
									"end": 5895,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5880,
									"end": 5884,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5876,
									"end": 5896,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 5872,
									"end": 5873,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5861,
									"end": 5870,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5857,
									"end": 5874,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5850,
									"end": 5897,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5914,
									"end": 6045,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "99"
								},
								{
									"begin": 6040,
									"end": 6044,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5914,
									"end": 6045,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 5914,
									"end": 6045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5914,
									"end": 6045,
									"name": "tag",
									"source": 5,
									"value": "99"
								},
								{
									"begin": 5914,
									"end": 6045,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5906,
									"end": 6045,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5906,
									"end": 6045,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5633,
									"end": 6052,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5633,
									"end": 6052,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5633,
									"end": 6052,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5633,
									"end": 6052,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 233,
									"end": 3005,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 233,
									"end": 3005,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 233,
									"end": 3005,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 3005,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 233,
									"end": 3005,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 3005,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 3005,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 233,
									"end": 3005,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 3005,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122085065c738ec38f2a797ca1b21f74864ad4bbf54e933658a3e19270dbaf68691c64736f6c63430008170033",
									".code": [
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "85949788"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "85949788"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "A84003F3"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "DB068E0E"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "E4C93BE7"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "FC63D10"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "38720F72"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "3BA0B9A9"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "5F64B55B"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3005,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 305,
											"end": 325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 305,
											"end": 325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 979,
											"end": 1630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 979,
											"end": 1630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 359,
											"end": 386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 359,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 359,
											"end": 386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 359,
											"end": 386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 386,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 359,
											"end": 386,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 359,
											"end": 386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 359,
											"end": 386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 386,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 332,
											"end": 352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 332,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 332,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 332,
											"end": 352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 352,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 332,
											"end": 352,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 332,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 332,
											"end": 352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 352,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 2289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 2289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2856,
											"end": 3002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2856,
											"end": 3002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2340,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2340,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2625,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2625,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 305,
											"end": 325,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 305,
											"end": 325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1053,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1049,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1053,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1034,
											"end": 1090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1034,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1103,
											"end": 1118,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1133,
											"end": 1145,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1133,
											"end": 1145,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1121,
											"end": 1132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1146,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1146,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1146,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1121,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1103,
											"end": 1146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1103,
											"end": 1146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1165,
											"end": 1181,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1190,
											"end": 1194,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1165,
											"end": 1196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1165,
											"end": 1196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1207,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1165,
											"end": 1207,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1157,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1157,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1360,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1341,
											"end": 1360,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1360,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1361,
											"end": 1371,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1381,
											"end": 1385,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1395,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1341,
											"end": 1396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1341,
											"end": 1396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1341,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1333,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1333,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1521,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1506,
											"end": 1521,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1521,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1522,
											"end": 1532,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1534,
											"end": 1541,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1506,
											"end": 1542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1506,
											"end": 1542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1498,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1498,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1593,
											"end": 1603,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "PUSH",
											"source": 4,
											"value": "77F92A1B6A1A11DE8CA49515AD4C1FAD45632DD3442167D74B90B304A3C7A758"
										},
										{
											"begin": 1605,
											"end": 1612,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1621,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1588,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1622,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 359,
											"end": 386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 359,
											"end": 386,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 359,
											"end": 386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 332,
											"end": 352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 332,
											"end": 352,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 332,
											"end": 352,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 332,
											"end": 352,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 332,
											"end": 352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1712,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1708,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1712,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1693,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1693,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1777,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1792,
											"end": 1804,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1792,
											"end": 1804,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 1787,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1780,
											"end": 1791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 1805,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1780,
											"end": 1805,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 1805,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1780,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1866,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1840,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1824,
											"end": 1840,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1840,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1849,
											"end": 1853,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1824,
											"end": 1855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1824,
											"end": 1855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1816,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1816,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 2020,
											"end": 2030,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2044,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2047,
											"end": 2054,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2000,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2000,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1992,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1992,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2181,
											"end": 2191,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2193,
											"end": 2200,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2165,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2165,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2157,
											"end": 2229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2157,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2262,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "PUSH",
											"source": 4,
											"value": "77F92A1B6A1A11DE8CA49515AD4C1FAD45632DD3442167D74B90B304A3C7A758"
										},
										{
											"begin": 2264,
											"end": 2271,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2273,
											"end": 2280,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2247,
											"end": 2281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 2289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 2289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 2289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2934,
											"end": 2940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2934,
											"end": 2940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2940,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2934,
											"end": 2940,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2940,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2934,
											"end": 2940,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2934,
											"end": 2949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2950,
											"end": 2957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2950,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2950,
											"end": 2957,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2950,
											"end": 2957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2965,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2934,
											"end": 2966,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2966,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2934,
											"end": 2966,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2934,
											"end": 2966,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2926,
											"end": 2994,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2926,
											"end": 2994,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 3002,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2443,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2447,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2420,
											"end": 2491,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2420,
											"end": 2491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2532,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2502,
											"end": 2532,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2532,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2532,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2703,
											"end": 2709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2709,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2703,
											"end": 2709,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2709,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2703,
											"end": 2709,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2703,
											"end": 2718,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2719,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2719,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2719,
											"end": 2726,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2719,
											"end": 2726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2719,
											"end": 2726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2734,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2703,
											"end": 2735,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2703,
											"end": 2735,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2703,
											"end": 2735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2695,
											"end": 2763,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2695,
											"end": 2763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1240,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1553,
											"end": 1558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1535,
											"end": 1559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1533,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1560,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1576,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1681,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1690,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2064,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1735,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1800,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1845,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 1829,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1930,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1811,
											"end": 1930,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1849,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1849,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1928,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1849,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1930,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1811,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2039,
											"end": 2046,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2036,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2028,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1994,
											"end": 2047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2047,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1994,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2047,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2057,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2064,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2188,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2070,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2157,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2291,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2314,
											"end": 2323,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2328,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2404,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2338,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2506,
											"end": 2511,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2488,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2611,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2609,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2845,
											"end": 2862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2792,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 2998,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2876,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2967,
											"end": 2972,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2949,
											"end": 2973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2939,
											"end": 2974,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 2986,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 2998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 2998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3075,
											"end": 3095,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3066,
											"end": 3095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3066,
											"end": 3095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 3131,
											"end": 3136,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3104,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3243,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3255,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3260,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3263,
											"end": 3342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3453,
											"end": 3460,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3433,
											"end": 3442,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3451,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3408,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3398,
											"end": 3461,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3398,
											"end": 3461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3653,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3484,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3602,
											"end": 3608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3600,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3646,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3633,
											"end": 3647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3653,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3653,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3841,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3659,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3799,
											"end": 3833,
											"name": "PUSH",
											"source": 5,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 3795,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3787,
											"end": 3793,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3797,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3776,
											"end": 3834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3841,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 4213,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3847,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3989,
											"end": 3992,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 4072,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 4010,
											"end": 4077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4077,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 4010,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4077,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4086,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4175,
											"end": 4178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4086,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 4086,
											"end": 4179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4086,
											"end": 4179,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4086,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4206,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4202,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4195,
											"end": 4207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 4213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 4213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 4213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 4213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4638,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4219,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4385,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4412,
											"end": 4421,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4466,
											"end": 4470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4482,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4459,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4456,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4443,
											"end": 4460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4483,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4500,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 4626,
											"end": 4630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4500,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 4500,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4500,
											"end": 4631,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 4500,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4492,
											"end": 4631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4638,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4638,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4638,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4644,
											"end": 4787,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 4644,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4701,
											"end": 4706,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4732,
											"end": 4738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4739,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4739,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4775,
											"end": 4780,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 4748,
											"end": 4781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4781,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4748,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4644,
											"end": 4787,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4644,
											"end": 4787,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4644,
											"end": 4787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4644,
											"end": 4787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4644,
											"end": 4787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5144,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4793,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4863,
											"end": 4869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 4914,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4900,
											"end": 4909,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4891,
											"end": 4898,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4887,
											"end": 4910,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4883,
											"end": 4915,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4880,
											"end": 4999,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4880,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 4880,
											"end": 4999,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 4918,
											"end": 4997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4880,
											"end": 4999,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 4880,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5038,
											"end": 5039,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5119,
											"end": 5126,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5116,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5099,
											"end": 5108,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5117,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5063,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5063,
											"end": 5127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5063,
											"end": 5127,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5063,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5053,
											"end": 5127,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5053,
											"end": 5127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5144,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5144,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5384,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 5150,
											"end": 5384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5324,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E742062616C616E6365206F6620546F6B656E204220"
										},
										{
											"begin": 5286,
											"end": 5287,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5278,
											"end": 5284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5288,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5267,
											"end": 5325,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5376,
											"name": "PUSH",
											"source": 5,
											"value": "696E2074686520636F6E74726163740000000000000000000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5356,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5342,
											"end": 5357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5335,
											"end": 5377,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5390,
											"end": 5756,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 5390,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5532,
											"end": 5535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "PUSH",
											"source": 5,
											"value": "2F"
										},
										{
											"begin": 5612,
											"end": 5615,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 5553,
											"end": 5620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5620,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 5553,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5546,
											"end": 5620,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5546,
											"end": 5620,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 5718,
											"end": 5721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 5629,
											"end": 5722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 5722,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 5629,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 5749,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5742,
											"end": 5745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5750,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5750,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5390,
											"end": 5756,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5390,
											"end": 5756,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5390,
											"end": 5756,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5390,
											"end": 5756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 6181,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 5762,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5932,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 5968,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5955,
											"end": 5964,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5951,
											"end": 5969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6015,
											"end": 6024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6009,
											"end": 6013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6005,
											"end": 6025,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5979,
											"end": 6026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6043,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 6169,
											"end": 6173,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6043,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 6043,
											"end": 6174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6043,
											"end": 6174,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 6043,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 6181,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 6181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 6181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 6181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6187,
											"end": 6629,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 6187,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6376,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6363,
											"end": 6372,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6351,
											"end": 6377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6351,
											"end": 6377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 6455,
											"end": 6456,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6453,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6440,
											"end": 6457,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6431,
											"end": 6437,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 6387,
											"end": 6458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6458,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 6387,
											"end": 6458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6536,
											"end": 6538,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6525,
											"end": 6534,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6539,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6512,
											"end": 6518,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 6468,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6540,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6468,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6550,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6618,
											"end": 6620,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6607,
											"end": 6616,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6594,
											"end": 6600,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6550,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 6550,
											"end": 6622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6550,
											"end": 6622,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6550,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6187,
											"end": 6629,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6187,
											"end": 6629,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6187,
											"end": 6629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6187,
											"end": 6629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6187,
											"end": 6629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6187,
											"end": 6629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6187,
											"end": 6629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6635,
											"end": 6725,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 6635,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6669,
											"end": 6676,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6705,
											"end": 6718,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6719,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6687,
											"end": 6719,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6687,
											"end": 6719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6635,
											"end": 6725,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6635,
											"end": 6725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6635,
											"end": 6725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6635,
											"end": 6725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6731,
											"end": 6847,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 6731,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6801,
											"end": 6822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 6816,
											"end": 6821,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6801,
											"end": 6822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 6801,
											"end": 6822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6801,
											"end": 6822,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 6801,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6794,
											"end": 6799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6823,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 6781,
											"end": 6841,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6837,
											"end": 6838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6827,
											"end": 6839,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 6841,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 6781,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6731,
											"end": 6847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6731,
											"end": 6847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6853,
											"end": 6990,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 6853,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6907,
											"end": 6912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6932,
											"end": 6945,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6923,
											"end": 6945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6923,
											"end": 6945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6954,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 6978,
											"end": 6983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6954,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 6954,
											"end": 6984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6954,
											"end": 6984,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 6954,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6853,
											"end": 6990,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6853,
											"end": 6990,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6853,
											"end": 6990,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6853,
											"end": 6990,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6853,
											"end": 6990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6996,
											"end": 7341,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 6996,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7063,
											"end": 7069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7112,
											"end": 7114,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7100,
											"end": 7109,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7091,
											"end": 7098,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7110,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7115,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7080,
											"end": 7199,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7080,
											"end": 7199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 7080,
											"end": 7199,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7118,
											"end": 7197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 7118,
											"end": 7197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 7118,
											"end": 7197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7118,
											"end": 7197,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 7118,
											"end": 7197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7080,
											"end": 7199,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 7080,
											"end": 7199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7238,
											"end": 7239,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7263,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 7316,
											"end": 7323,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7307,
											"end": 7313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7296,
											"end": 7305,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7292,
											"end": 7314,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 7263,
											"end": 7324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7324,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 7263,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7253,
											"end": 7324,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7253,
											"end": 7324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7209,
											"end": 7334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6996,
											"end": 7341,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6996,
											"end": 7341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6996,
											"end": 7341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6996,
											"end": 7341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6996,
											"end": 7341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7347,
											"end": 7520,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 7347,
											"end": 7520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7512,
											"name": "PUSH",
											"source": 5,
											"value": "546F6B656E2041207472616E73666572206661696C6564000000000000000000"
										},
										{
											"begin": 7483,
											"end": 7484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7481,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7464,
											"end": 7513,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7347,
											"end": 7520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7347,
											"end": 7520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7526,
											"end": 7892,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 7526,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7668,
											"end": 7671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 7753,
											"end": 7755,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 7748,
											"end": 7751,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 7689,
											"end": 7756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 7689,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7756,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7682,
											"end": 7756,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 7854,
											"end": 7857,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 7765,
											"end": 7858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7858,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 7765,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7883,
											"end": 7885,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7878,
											"end": 7881,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7874,
											"end": 7886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7867,
											"end": 7886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7867,
											"end": 7886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7526,
											"end": 7892,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7526,
											"end": 7892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7526,
											"end": 7892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7526,
											"end": 7892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7898,
											"end": 8317,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 7898,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8064,
											"end": 8068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8102,
											"end": 8104,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8091,
											"end": 8100,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8079,
											"end": 8105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8079,
											"end": 8105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8151,
											"end": 8160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8145,
											"end": 8149,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8137,
											"end": 8138,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8126,
											"end": 8135,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8122,
											"end": 8139,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8115,
											"end": 8162,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8179,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 8305,
											"end": 8309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8179,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 8179,
											"end": 8310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8179,
											"end": 8310,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 8179,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8171,
											"end": 8310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8171,
											"end": 8310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7898,
											"end": 8317,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7898,
											"end": 8317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7898,
											"end": 8317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7898,
											"end": 8317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8323,
											"end": 8655,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 8323,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8444,
											"end": 8448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8482,
											"end": 8484,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8471,
											"end": 8480,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8459,
											"end": 8485,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8459,
											"end": 8485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8495,
											"end": 8566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 8563,
											"end": 8564,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8552,
											"end": 8561,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8548,
											"end": 8565,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8539,
											"end": 8545,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8495,
											"end": 8566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 8495,
											"end": 8566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8495,
											"end": 8566,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 8495,
											"end": 8566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8576,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 8644,
											"end": 8646,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8633,
											"end": 8642,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8629,
											"end": 8647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8620,
											"end": 8626,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8576,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 8576,
											"end": 8648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8576,
											"end": 8648,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 8576,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8323,
											"end": 8655,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8323,
											"end": 8655,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8323,
											"end": 8655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8323,
											"end": 8655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8323,
											"end": 8655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8323,
											"end": 8655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8661,
											"end": 8834,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 8661,
											"end": 8834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8801,
											"end": 8826,
											"name": "PUSH",
											"source": 5,
											"value": "546F6B656E2042207472616E73666572206661696C6564000000000000000000"
										},
										{
											"begin": 8797,
											"end": 8798,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8789,
											"end": 8795,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 8799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8778,
											"end": 8827,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8661,
											"end": 8834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8661,
											"end": 8834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9206,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 8840,
											"end": 9206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8982,
											"end": 8985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9003,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 9067,
											"end": 9069,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 9062,
											"end": 9065,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9003,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 9003,
											"end": 9070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9003,
											"end": 9070,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 9003,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8996,
											"end": 9070,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8996,
											"end": 9070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9079,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 9168,
											"end": 9171,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9079,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 9079,
											"end": 9172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9079,
											"end": 9172,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 9079,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9197,
											"end": 9199,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9192,
											"end": 9195,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9188,
											"end": 9200,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9181,
											"end": 9200,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9181,
											"end": 9200,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9206,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9212,
											"end": 9631,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 9212,
											"end": 9631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9416,
											"end": 9418,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9405,
											"end": 9414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9401,
											"end": 9419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9465,
											"end": 9474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9459,
											"end": 9463,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9455,
											"end": 9475,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9440,
											"end": 9449,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9436,
											"end": 9453,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9429,
											"end": 9476,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9493,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 9619,
											"end": 9623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9493,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 9493,
											"end": 9624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9493,
											"end": 9624,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 9493,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9485,
											"end": 9624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9485,
											"end": 9624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9212,
											"end": 9631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9212,
											"end": 9631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9212,
											"end": 9631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9212,
											"end": 9631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9969,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 9637,
											"end": 9969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9758,
											"end": 9762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9796,
											"end": 9798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9785,
											"end": 9794,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9773,
											"end": 9799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9773,
											"end": 9799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 9877,
											"end": 9878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9866,
											"end": 9875,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9862,
											"end": 9879,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 9859,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 9809,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9880,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 9809,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9890,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 9958,
											"end": 9960,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9947,
											"end": 9956,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9943,
											"end": 9961,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9934,
											"end": 9940,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9890,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 9890,
											"end": 9962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9890,
											"end": 9962,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 9890,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9969,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9969,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9975,
											"end": 10209,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 9975,
											"end": 10209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E742062616C616E6365206F6620546F6B656E204120"
										},
										{
											"begin": 10111,
											"end": 10112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10109,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10099,
											"end": 10113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10092,
											"end": 10150,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10201,
											"name": "PUSH",
											"source": 5,
											"value": "696E2074686520636F6E74726163740000000000000000000000000000000000"
										},
										{
											"begin": 10179,
											"end": 10181,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10171,
											"end": 10177,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10167,
											"end": 10182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10160,
											"end": 10202,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9975,
											"end": 10209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9975,
											"end": 10209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10215,
											"end": 10581,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 10215,
											"end": 10581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10357,
											"end": 10360,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10378,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 10442,
											"end": 10444,
											"name": "PUSH",
											"source": 5,
											"value": "2F"
										},
										{
											"begin": 10437,
											"end": 10440,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10378,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 10378,
											"end": 10445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10378,
											"end": 10445,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 10378,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10371,
											"end": 10445,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10371,
											"end": 10445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10454,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 10543,
											"end": 10546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10454,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 10454,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10454,
											"end": 10547,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 10454,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10572,
											"end": 10574,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10567,
											"end": 10570,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10563,
											"end": 10575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10556,
											"end": 10575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10556,
											"end": 10575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10215,
											"end": 10581,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10215,
											"end": 10581,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10215,
											"end": 10581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10215,
											"end": 10581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 11006,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 10587,
											"end": 11006,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10753,
											"end": 10757,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 10793,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10780,
											"end": 10789,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10776,
											"end": 10794,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10768,
											"end": 10794,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10768,
											"end": 10794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10840,
											"end": 10849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10834,
											"end": 10838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10830,
											"end": 10850,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10826,
											"end": 10827,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10815,
											"end": 10824,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10811,
											"end": 10828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10804,
											"end": 10851,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10868,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 10994,
											"end": 10998,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10868,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 10868,
											"end": 10999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10868,
											"end": 10999,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 10868,
											"end": 10999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10860,
											"end": 10999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10860,
											"end": 10999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 11006,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 11006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 11006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 11006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11238,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 11012,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11152,
											"end": 11186,
											"name": "PUSH",
											"source": 5,
											"value": "45786368616E67652072617465206D7573742062652067726561746572207468"
										},
										{
											"begin": 11148,
											"end": 11149,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11140,
											"end": 11146,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11136,
											"end": 11150,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11129,
											"end": 11187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11221,
											"end": 11230,
											"name": "PUSH",
											"source": 5,
											"value": "616E207A65726F00000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11216,
											"end": 11218,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11208,
											"end": 11214,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11204,
											"end": 11219,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11197,
											"end": 11231,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11244,
											"end": 11610,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 11244,
											"end": 11610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11386,
											"end": 11389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11407,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 11471,
											"end": 11473,
											"name": "PUSH",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 11466,
											"end": 11469,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11407,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 11407,
											"end": 11474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11407,
											"end": 11474,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 11407,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11400,
											"end": 11474,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11400,
											"end": 11474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11483,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 11572,
											"end": 11575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11483,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 11483,
											"end": 11576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11483,
											"end": 11576,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 11483,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11601,
											"end": 11603,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11596,
											"end": 11599,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11592,
											"end": 11604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11585,
											"end": 11604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11585,
											"end": 11604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11244,
											"end": 11610,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11244,
											"end": 11610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11244,
											"end": 11610,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11244,
											"end": 11610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11616,
											"end": 12035,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 11616,
											"end": 12035,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11782,
											"end": 11786,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11820,
											"end": 11822,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11809,
											"end": 11818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11805,
											"end": 11823,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11797,
											"end": 11823,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11797,
											"end": 11823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11869,
											"end": 11878,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11863,
											"end": 11867,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11859,
											"end": 11879,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11856,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11844,
											"end": 11853,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11840,
											"end": 11857,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11833,
											"end": 11880,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11897,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 12023,
											"end": 12027,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11897,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 11897,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11897,
											"end": 12028,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 11897,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11889,
											"end": 12028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11889,
											"end": 12028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11616,
											"end": 12035,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11616,
											"end": 12035,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11616,
											"end": 12035,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11616,
											"end": 12035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12041,
											"end": 12221,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 12041,
											"end": 12221,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12089,
											"end": 12166,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12086,
											"end": 12087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12079,
											"end": 12167,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12186,
											"end": 12190,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 12183,
											"end": 12184,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12176,
											"end": 12191,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12210,
											"end": 12214,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 12207,
											"end": 12208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12200,
											"end": 12215,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12227,
											"end": 12637,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 12227,
											"end": 12637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12290,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 12308,
											"end": 12309,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12290,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 12290,
											"end": 12310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12290,
											"end": 12310,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 12290,
											"end": 12310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12285,
											"end": 12310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12285,
											"end": 12310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12324,
											"end": 12344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 12342,
											"end": 12343,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12324,
											"end": 12344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 12324,
											"end": 12344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12324,
											"end": 12344,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 12324,
											"end": 12344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12319,
											"end": 12344,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12319,
											"end": 12344,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12379,
											"end": 12380,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12376,
											"end": 12377,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12372,
											"end": 12381,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 12401,
											"end": 12431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 12419,
											"end": 12430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12401,
											"end": 12431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 12401,
											"end": 12431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12401,
											"end": 12431,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 12401,
											"end": 12431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12390,
											"end": 12431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12390,
											"end": 12431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12580,
											"end": 12581,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12571,
											"end": 12578,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12567,
											"end": 12582,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 12564,
											"end": 12565,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12561,
											"end": 12583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12541,
											"end": 12542,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12534,
											"end": 12543,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12514,
											"end": 12597,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 12491,
											"end": 12630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 12491,
											"end": 12630,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12610,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 12610,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 12610,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12610,
											"end": 12628,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 12610,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12491,
											"end": 12630,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 12491,
											"end": 12630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12275,
											"end": 12637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12227,
											"end": 12637,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12227,
											"end": 12637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12227,
											"end": 12637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12227,
											"end": 12637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12227,
											"end": 12637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12643,
											"end": 12823,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 12643,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12691,
											"end": 12768,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12688,
											"end": 12689,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12681,
											"end": 12769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12788,
											"end": 12792,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 12785,
											"end": 12786,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12778,
											"end": 12793,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12812,
											"end": 12816,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 12809,
											"end": 12810,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12802,
											"end": 12817,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12829,
											"end": 13014,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 12829,
											"end": 13014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12869,
											"end": 12870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12886,
											"end": 12906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 12904,
											"end": 12905,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12886,
											"end": 12906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 12886,
											"end": 12906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12886,
											"end": 12906,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 12886,
											"end": 12906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12881,
											"end": 12906,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12881,
											"end": 12906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12920,
											"end": 12940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 12938,
											"end": 12939,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12920,
											"end": 12940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 12920,
											"end": 12940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12920,
											"end": 12940,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 12920,
											"end": 12940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12915,
											"end": 12940,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12915,
											"end": 12940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12959,
											"end": 12960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12949,
											"end": 12984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 12949,
											"end": 12984,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12964,
											"end": 12982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 12964,
											"end": 12982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 12964,
											"end": 12982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12964,
											"end": 12982,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 12964,
											"end": 12982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12949,
											"end": 12984,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 12949,
											"end": 12984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13006,
											"end": 13007,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13003,
											"end": 13004,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12999,
											"end": 13008,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 12994,
											"end": 13008,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12994,
											"end": 13008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12829,
											"end": 13014,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12829,
											"end": 13014,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12829,
											"end": 13014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12829,
											"end": 13014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12829,
											"end": 13014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/TokenSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"exchangeRate()": "3ba0b9a9",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setExchangeRate(uint256)": "db068e0e",
							"swapAToB(uint256)": "38720f72",
							"swapBToA(uint256)": "85949788",
							"tokenA()": "0fc63d10",
							"tokenB()": "5f64b55b",
							"transferOwnership(address)": "f2fde38b",
							"withdrawTokenA(uint256)": "e4c93be7",
							"withdrawTokenB(uint256)": "a84003f3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_exchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newExchangeRate\",\"type\":\"uint256\"}],\"name\":\"setExchangeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"}],\"name\":\"swapAToB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"swapBToA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokenA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokenB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenSwap.sol\":\"TokenSwap\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/TokenSwap.sol\":{\"keccak256\":\"0x57223eb264a87e4eadb0c2cb707b27701918e1596bde4c95dde808f641b1b144\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac85b697ba28d5893aae499d4aa4458654f14705b42a6fefec1cb7d68626106d\",\"dweb:/ipfs/QmVqXozL93JYA23z7nqUJQ1DX2nhUY2CdonYeHsxYJFphs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/TokenSwap.sol:TokenSwap",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 580,
								"contract": "contracts/TokenSwap.sol:TokenSwap",
								"label": "tokenA",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 583,
								"contract": "contracts/TokenSwap.sol:TokenSwap",
								"label": "tokenB",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 585,
								"contract": "contracts/TokenSwap.sol:TokenSwap",
								"label": "exchangeRate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							567
						]
					},
					"id": 568,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 258,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 567,
							"linearizedBaseContracts": [
								567
							],
							"name": "SafeMath",
							"nameLocation": "490:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "717:140:3",
										"statements": [
											{
												"id": 288,
												"nodeType": "UncheckedBlock",
												"src": "727:124:3",
												"statements": [
													{
														"assignments": [
															271
														],
														"declarations": [
															{
																"constant": false,
																"id": 271,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 288,
																"src": "751:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 270,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 275,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 272,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "763:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 273,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "767:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 276,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "786:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 277,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "790:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 283,
														"nodeType": "IfStatement",
														"src": "782:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 281,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 269,
															"id": 282,
															"nodeType": "Return",
															"src": "793:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 285,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "838:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 286,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 269,
														"id": 287,
														"nodeType": "Return",
														"src": "824:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "657:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "668:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:3"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "702:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "708:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:3"
									},
									"scope": 567,
									"src": "641:216:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "1078:113:3",
										"statements": [
											{
												"id": 316,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "1116:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 303,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "1120:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 309,
														"nodeType": "IfStatement",
														"src": "1112:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 307,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 301,
															"id": 308,
															"nodeType": "Return",
															"src": "1123:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 311,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 293,
																		"src": "1168:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 312,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "1172:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 314,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 301,
														"id": 315,
														"nodeType": "Return",
														"src": "1154:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:3",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1018:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1029:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:3"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1063:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:3"
									},
									"scope": 567,
									"src": "1002:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1415:417:3",
										"statements": [
											{
												"id": 358,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 330,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "1683:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 337,
														"nodeType": "IfStatement",
														"src": "1679:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 335,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 329,
															"id": 336,
															"nodeType": "Return",
															"src": "1691:16:3"
														}
													},
													{
														"assignments": [
															339
														],
														"declarations": [
															{
																"constant": false,
																"id": 339,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 358,
																"src": "1721:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 338,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 343,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 340,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "1733:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 341,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "1737:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 344,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "1756:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 345,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "1760:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 347,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "1765:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 353,
														"nodeType": "IfStatement",
														"src": "1752:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 351,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 329,
															"id": 352,
															"nodeType": "Return",
															"src": "1768:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 355,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "1813:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 356,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 329,
														"id": 357,
														"nodeType": "Return",
														"src": "1799:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1355:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1366:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:3"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1400:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 325,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1406:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:3"
									},
									"scope": 567,
									"src": "1339:493:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "2057:114:3",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 372,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "2095:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 379,
														"nodeType": "IfStatement",
														"src": "2091:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 377,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 371,
															"id": 378,
															"nodeType": "Return",
															"src": "2103:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 381,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "2148:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 382,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "2152:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 384,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 371,
														"id": 385,
														"nodeType": "Return",
														"src": "2134:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "1997:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "2008:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:3"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "2042:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "2048:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:3"
									},
									"scope": 567,
									"src": "1981:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "2406:114:3",
										"statements": [
											{
												"id": 414,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 400,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "2444:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 407,
														"nodeType": "IfStatement",
														"src": "2440:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 405,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 399,
															"id": 406,
															"nodeType": "Return",
															"src": "2452:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 409,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2497:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 410,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "2501:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 412,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 399,
														"id": 413,
														"nodeType": "Return",
														"src": "2483:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2346:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2357:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:3"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2391:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 395,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2397:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:3"
									},
									"scope": 567,
									"src": "2330:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2822:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 426,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "2839:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 427,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "2843:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 425,
												"id": 429,
												"nodeType": "Return",
												"src": "2832:12:3"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2768:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2779:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:3"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2813:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:3"
									},
									"scope": 567,
									"src": "2755:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "3189:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "3206:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 442,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "3210:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 440,
												"id": 444,
												"nodeType": "Return",
												"src": "3199:12:3"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "3135:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "3146:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:3"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "3180:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:3"
									},
									"scope": 567,
									"src": "3122:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "3532:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 456,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "3549:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 457,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "3553:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 455,
												"id": 459,
												"nodeType": "Return",
												"src": "3542:12:3"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "3478:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "3489:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:3"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "3523:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:3"
									},
									"scope": 567,
									"src": "3465:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "3917:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 471,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "3934:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 472,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "3938:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 470,
												"id": 474,
												"nodeType": "Return",
												"src": "3927:12:3"
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3863:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3874:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:3"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3908:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:3"
									},
									"scope": 567,
									"src": "3850:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "4466:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "4483:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 487,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "4487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 485,
												"id": 489,
												"nodeType": "Return",
												"src": "4476:12:3"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "4412:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "4423:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:3"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "4457:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:3"
									},
									"scope": 567,
									"src": "4399:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "5054:106:3",
										"statements": [
											{
												"id": 514,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 504,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 496,
																		"src": "5096:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 505,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 494,
																		"src": "5101:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 507,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "5104:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 503,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 509,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 510,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "5138:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 511,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "5142:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 502,
														"id": 513,
														"nodeType": "Return",
														"src": "5131:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4972:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4983:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4994:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 497,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "5045:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:3"
									},
									"scope": 567,
									"src": "4959:201:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "5739:105:3",
										"statements": [
											{
												"id": 539,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 529,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "5781:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 532,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "5788:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 528,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 534,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 535,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "5822:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 536,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "5826:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 527,
														"id": 538,
														"nodeType": "Return",
														"src": "5815:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5657:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5668:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5679:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 522,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:3"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5730:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:3"
									},
									"scope": 567,
									"src": "5644:200:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "6585:105:3",
										"statements": [
											{
												"id": 564,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 554,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "6627:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 557,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "6634:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 553,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 559,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "6668:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 561,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "6672:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 552,
														"id": 563,
														"nodeType": "Return",
														"src": "6661:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6503:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6514:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6525:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 547,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:3"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6576:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:3"
									},
									"scope": 567,
									"src": "6490:200:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 568,
							"src": "482:6210:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:3"
				},
				"id": 3
			},
			"contracts/TokenSwap.sol": {
				"ast": {
					"absolutePath": "contracts/TokenSwap.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"IERC20": [
							225
						],
						"Ownable": [
							147
						],
						"SafeMath": [
							567
						],
						"TokenSwap": [
							839
						]
					},
					"id": 840,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 569,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 570,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 840,
							"sourceUnit": 226,
							"src": "60:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 571,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 840,
							"sourceUnit": 568,
							"src": "118:57:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 572,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 840,
							"sourceUnit": 148,
							"src": "177:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 573,
										"name": "Ownable",
										"nameLocations": [
											"255:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "255:7:4"
									},
									"id": 574,
									"nodeType": "InheritanceSpecifier",
									"src": "255:7:4"
								}
							],
							"canonicalName": "TokenSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 839,
							"linearizedBaseContracts": [
								839,
								147,
								255
							],
							"name": "TokenSwap",
							"nameLocation": "242:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 577,
									"libraryName": {
										"id": 575,
										"name": "SafeMath",
										"nameLocations": [
											"276:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 567,
										"src": "276:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "270:27:4",
									"typeName": {
										"id": 576,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "289:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "0fc63d10",
									"id": 580,
									"mutability": "mutable",
									"name": "tokenA",
									"nameLocation": "319:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 839,
									"src": "305:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 579,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 578,
											"name": "IERC20",
											"nameLocations": [
												"305:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "305:6:4"
										},
										"referencedDeclaration": 225,
										"src": "305:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f64b55b",
									"id": 583,
									"mutability": "mutable",
									"name": "tokenB",
									"nameLocation": "346:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 839,
									"src": "332:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 582,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 581,
											"name": "IERC20",
											"nameLocations": [
												"332:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "332:6:4"
										},
										"referencedDeclaration": 225,
										"src": "332:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3ba0b9a9",
									"id": 585,
									"mutability": "mutable",
									"name": "exchangeRate",
									"nameLocation": "374:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 839,
									"src": "359:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 584,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "359:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758",
									"id": 593,
									"name": "Swap",
									"nameLocation": "437:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "458:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "442:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "474:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "466:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "491:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "483:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:58:4"
									},
									"src": "431:69:4"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "620:351:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 612,
																		"name": "_tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "647:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "639:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 610,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "639:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "639:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "667:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "659:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 614,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "659:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "659:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "639:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e204120616464726573732063616e6e6f74206265207a65726f",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "671:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25df88c116c36fbc96c219fa64731a88317dfb085ac9373984407525be7d21e5",
																"typeString": "literal_string \"Token A address cannot be zero\""
															},
															"value": "Token A address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25df88c116c36fbc96c219fa64731a88317dfb085ac9373984407525be7d21e5",
																"typeString": "literal_string \"Token A address cannot be zero\""
															}
														],
														"id": 609,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "631:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "631:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "631:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "_tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "731:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "723:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 623,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "723:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "723:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "751:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "743:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 627,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "743:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "743:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "723:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e204220616464726573732063616e6e6f74206265207a65726f",
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "755:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6734a930782122c1d955d9cd5c28ef56cbbbf13eae64d46b8f0dc7f2d7843bfa",
																"typeString": "literal_string \"Token B address cannot be zero\""
															},
															"value": "Token B address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6734a930782122c1d955d9cd5c28ef56cbbbf13eae64d46b8f0dc7f2d7843bfa",
																"typeString": "literal_string \"Token B address cannot be zero\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "715:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "715:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "715:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 636,
																"name": "_exchangeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "807:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "823:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "807:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786368616e67652072617465206d7573742062652067726561746572207468616e207a65726f",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "826:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0",
																"typeString": "literal_string \"Exchange rate must be greater than zero\""
															},
															"value": "Exchange rate must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0",
																"typeString": "literal_string \"Exchange rate must be greater than zero\""
															}
														],
														"id": 635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "799:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "799:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "799:69:4"
											},
											{
												"expression": {
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 642,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "881:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 643,
														"name": "_tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "890:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "881:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "881:16:4"
											},
											{
												"expression": {
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 646,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "908:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 647,
														"name": "_tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "917:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "908:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "908:16:4"
											},
											{
												"expression": {
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 650,
														"name": "exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "935:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 651,
														"name": "_exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "950:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "935:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "935:28:4"
											}
										]
									},
									"id": 655,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 606,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 603,
													"src": "606:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 607,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 605,
												"name": "Ownable",
												"nameLocations": [
													"598:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "598:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "598:21:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "527:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "520:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 595,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 594,
														"name": "IERC20",
														"nameLocations": [
															"520:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "520:6:4"
													},
													"referencedDeclaration": 225,
													"src": "520:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "543:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "536:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 598,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 597,
														"name": "IERC20",
														"nameLocations": [
															"536:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "536:6:4"
													},
													"referencedDeclaration": 225,
													"src": "536:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "_exchangeRate",
												"nameLocation": "560:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "552:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "584:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "576:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "519:78:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "620:0:4"
									},
									"scope": 839,
									"src": "508:463:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "1023:607:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 661,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "1042:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1052:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1042:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1055:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1034:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1034:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "1034:56:4"
											},
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "amountB",
														"nameLocation": "1111:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 718,
														"src": "1103:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 667,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1103:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"arguments": [
														{
															"id": 671,
															"name": "exchangeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "1133:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 669,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "1121:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1129:3:4",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 461,
														"src": "1121:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1121:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1103:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 679,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1190:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenSwap_$839",
																					"typeString": "contract TokenSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenSwap_$839",
																					"typeString": "contract TokenSwap"
																				}
																			],
																			"id": 678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1182:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 677,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1182:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1182:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 675,
																		"name": "tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "1165:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1172:9:4",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 182,
																	"src": "1165:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1165:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 682,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "1200:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1165:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365206f6620546f6b656e204220696e2074686520636f6e7472616374",
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1209:49:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ae93c22fd203b1cf6171f2fdf72425f1adc56b87f99f5bdccfb50eb9d9815c4",
																"typeString": "literal_string \"Insufficient balance of Token B in the contract\""
															},
															"value": "Insufficient balance of Token B in the contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ae93c22fd203b1cf6171f2fdf72425f1adc56b87f99f5bdccfb50eb9d9815c4",
																"typeString": "literal_string \"Insufficient balance of Token B in the contract\""
															}
														],
														"id": 674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1157:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1157:102:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "1157:102:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 690,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1361:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1365:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1361:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 694,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1381:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TokenSwap_$839",
																				"typeString": "contract TokenSwap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TokenSwap_$839",
																				"typeString": "contract TokenSwap"
																			}
																		],
																		"id": 693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1373:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 692,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1373:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1373:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 696,
																	"name": "amountA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "1388:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 688,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "1341:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1348:12:4",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 224,
																"src": "1341:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1341:55:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e2041207472616e73666572206661696c6564",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1398:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1",
																"typeString": "literal_string \"Token A transfer failed\""
															},
															"value": "Token A transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1",
																"typeString": "literal_string \"Token A transfer failed\""
															}
														],
														"id": 687,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1333:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1333:91:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "1333:91:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 704,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1522:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1526:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1522:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 706,
																	"name": "amountB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "1534:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 702,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1506:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1513:8:4",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 192,
																"src": "1506:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1506:36:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e2042207472616e73666572206661696c6564",
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1544:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202",
																"typeString": "literal_string \"Token B transfer failed\""
															},
															"value": "Token B transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202",
																"typeString": "literal_string \"Token B transfer failed\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1498:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1498:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "1498:72:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 712,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1593:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1597:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1593:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 714,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "1605:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 715,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "1614:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 711,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "1588:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1588:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "EmitStatement",
												"src": "1583:39:4"
											}
										]
									},
									"functionSelector": "38720f72",
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapAToB",
									"nameLocation": "988:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1005:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "997:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "996:17:4"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1023:0:4"
									},
									"scope": 839,
									"src": "979:651:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "1682:607:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 725,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "1701:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1711:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1701:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1714:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1693:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1693:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "1693:56:4"
											},
											{
												"assignments": [
													732
												],
												"declarations": [
													{
														"constant": false,
														"id": 732,
														"mutability": "mutable",
														"name": "amountA",
														"nameLocation": "1770:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "1762:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 731,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1762:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 737,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "exchangeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "1792:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 733,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "1780:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1788:3:4",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 476,
														"src": "1780:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1780:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1762:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 743,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1849:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenSwap_$839",
																					"typeString": "contract TokenSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenSwap_$839",
																					"typeString": "contract TokenSwap"
																				}
																			],
																			"id": 742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1841:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 741,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1841:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1841:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 739,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "1824:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1831:9:4",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 182,
																	"src": "1824:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1824:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 746,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "1859:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1824:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365206f6620546f6b656e204120696e2074686520636f6e7472616374",
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1868:49:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef501e88f874b45cff01569149f0f10d6e66417ab0104e5a308101b9fbf57f89",
																"typeString": "literal_string \"Insufficient balance of Token A in the contract\""
															},
															"value": "Insufficient balance of Token A in the contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef501e88f874b45cff01569149f0f10d6e66417ab0104e5a308101b9fbf57f89",
																"typeString": "literal_string \"Insufficient balance of Token A in the contract\""
															}
														],
														"id": 738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1816:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:102:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "1816:102:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 754,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2020:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2024:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2020:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 758,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2040:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TokenSwap_$839",
																				"typeString": "contract TokenSwap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TokenSwap_$839",
																				"typeString": "contract TokenSwap"
																			}
																		],
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2032:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 756,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2032:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2032:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 760,
																	"name": "amountB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "2047:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 752,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "2000:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2007:12:4",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 224,
																"src": "2000:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2000:55:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e2042207472616e73666572206661696c6564",
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2057:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202",
																"typeString": "literal_string \"Token B transfer failed\""
															},
															"value": "Token B transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202",
																"typeString": "literal_string \"Token B transfer failed\""
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1992:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1992:91:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "1992:91:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 768,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2181:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2185:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2181:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 770,
																	"name": "amountA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "2193:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 766,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "2165:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2172:8:4",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 192,
																"src": "2165:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2165:36:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e2041207472616e73666572206661696c6564",
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2203:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1",
																"typeString": "literal_string \"Token A transfer failed\""
															},
															"value": "Token A transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1",
																"typeString": "literal_string \"Token A transfer failed\""
															}
														],
														"id": 765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2157:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "2157:72:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 776,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2252:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2256:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2252:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 778,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "2264:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 779,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "2273:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 775,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "2247:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2247:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "EmitStatement",
												"src": "2242:39:4"
											}
										]
									},
									"functionSelector": "85949788",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapBToA",
									"nameLocation": "1647:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "1656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1655:17:4"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1682:0:4"
									},
									"scope": 839,
									"src": "1638:651:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "2409:131:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 791,
																"name": "newExchangeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "2428:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2446:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2428:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786368616e67652072617465206d7573742062652067726561746572207468616e207a65726f",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2449:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0",
																"typeString": "literal_string \"Exchange rate must be greater than zero\""
															},
															"value": "Exchange rate must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f3c3f12f0d83c8a8dfb23dea5d992679be1d43084aa20d7ae07234f574c15cf0",
																"typeString": "literal_string \"Exchange rate must be greater than zero\""
															}
														],
														"id": 790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2420:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2420:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "2420:71:4"
											},
											{
												"expression": {
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 797,
														"name": "exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "2502:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 798,
														"name": "newExchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "2517:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2502:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "2502:30:4"
											}
										]
									},
									"functionSelector": "db068e0e",
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 788,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 787,
												"name": "onlyOwner",
												"nameLocations": [
													"2399:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2399:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2399:9:4"
										}
									],
									"name": "setExchangeRate",
									"nameLocation": "2349:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "newExchangeRate",
												"nameLocation": "2373:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "2365:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2365:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2364:25:4"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2409:0:4"
									},
									"scope": 839,
									"src": "2340:200:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "2684:87:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 812,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "2719:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2719:7:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 814,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "2728:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 810,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "2703:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2710:8:4",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 192,
																"src": "2703:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2703:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e2041207472616e73666572206661696c6564",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2737:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1",
																"typeString": "literal_string \"Token A transfer failed\""
															},
															"value": "Token A transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae42773a7898841ed96d359cf11402f6f7b19c0d563cc61252e6aa96692da4d1",
																"typeString": "literal_string \"Token A transfer failed\""
															}
														],
														"id": 809,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2695:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2695:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "2695:68:4"
											}
										]
									},
									"functionSelector": "e4c93be7",
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 807,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 806,
												"name": "onlyOwner",
												"nameLocations": [
													"2674:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2674:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2674:9:4"
										}
									],
									"name": "withdrawTokenA",
									"nameLocation": "2634:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2657:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "2649:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2649:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2648:16:4"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2684:0:4"
									},
									"scope": 839,
									"src": "2625:146:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "2915:87:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 830,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "2950:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2950:7:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 832,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "2959:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 828,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "2934:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2941:8:4",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 192,
																"src": "2934:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2934:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e2042207472616e73666572206661696c6564",
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2968:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202",
																"typeString": "literal_string \"Token B transfer failed\""
															},
															"value": "Token B transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32587991a985d77943b5083cac10a91e49373fa26475997b2a5c7664a1802202",
																"typeString": "literal_string \"Token B transfer failed\""
															}
														],
														"id": 827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2926:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "2926:68:4"
											}
										]
									},
									"functionSelector": "a84003f3",
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 825,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 824,
												"name": "onlyOwner",
												"nameLocations": [
													"2905:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2905:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2905:9:4"
										}
									],
									"name": "withdrawTokenB",
									"nameLocation": "2865:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2888:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2880:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2880:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2879:16:4"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:0:4"
									},
									"scope": 839,
									"src": "2856:146:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 840,
							"src": "233:2772:4",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								593
							]
						}
					],
					"src": "33:2974:4"
				},
				"id": 4
			}
		}
	}
}