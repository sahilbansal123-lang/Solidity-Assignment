{
	"id": "e95668826d4ce32394573b54281e2b4f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TokenSale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TokenSale is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n\r\n    ERC20 public token; // ERC-20 token being sold\r\n    uint256 public presaleCap;\r\n    uint256 public publicSaleCap;\r\n    uint256 public presaleMinContribution;\r\n    uint256 public presaleMaxContribution;\r\n    uint256 public publicSaleMinContribution;\r\n    uint256 public publicSaleMaxContribution;\r\n\r\n    mapping(address => uint256) public presaleContributions;\r\n    mapping(address => uint256) public publicSaleContributions;\r\n\r\n    enum SalePhase { NotStarted, Presale, PublicSale, Finished }\r\n    SalePhase public currentPhase;\r\n\r\n    event TokensPurchased(address indexed buyer, uint256 amount, uint256 etherAmount, SalePhase phase);\r\n    event TokensDistributed(address indexed recipient, uint256 amount);\r\n    event RefundClaimed(address indexed contributor, uint256 amount);\r\n\r\n    modifier onlyPresalePhase() {\r\n        require(currentPhase == SalePhase.Presale, \"Not in presale phase\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyPublicSalePhase() {\r\n        require(currentPhase == SalePhase.PublicSale, \"Not in public sale phase\");\r\n        _;\r\n    }\r\n\r\n    modifier saleNotFinished() {\r\n        require(currentPhase != SalePhase.Finished, \"Sale is finished\");\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        ERC20 _token,\r\n        uint256 _presaleCap,\r\n        uint256 _publicSaleCap,\r\n        uint256 _presaleMinContribution,\r\n        uint256 _presaleMaxContribution,\r\n        uint256 _publicSaleMinContribution,\r\n        uint256 _publicSaleMaxContribution,\r\n        address initialOwner\r\n    ) Ownable(initialOwner) {\r\n        token = _token;\r\n        presaleCap = _presaleCap;\r\n        publicSaleCap = _publicSaleCap;\r\n        presaleMinContribution = _presaleMinContribution;\r\n        presaleMaxContribution = _presaleMaxContribution;\r\n        publicSaleMinContribution = _publicSaleMinContribution;\r\n        publicSaleMaxContribution = _publicSaleMaxContribution;\r\n        currentPhase = SalePhase.NotStarted;\r\n    }\r\n\r\n    function startPresale() external onlyOwner saleNotFinished {\r\n        currentPhase = SalePhase.Presale;\r\n    }\r\n\r\n    function endPresale() external onlyOwner onlyPresalePhase {\r\n        currentPhase = SalePhase.PublicSale;\r\n    }\r\n\r\n    function endPublicSale() external onlyOwner onlyPublicSalePhase {\r\n        currentPhase = SalePhase.Finished;\r\n    }\r\n\r\n    function contributeToPresale() external payable onlyPresalePhase {\r\n        require(msg.value >= presaleMinContribution, \"Below presale minimum contribution\");\r\n        require(msg.value <= presaleMaxContribution, \"Exceeds presale maximum contribution\");\r\n        require(address(this).balance.add(msg.value) <= presaleCap, \"Presale cap reached\");\r\n\r\n        presaleContributions[msg.sender] = presaleContributions[msg.sender].add(msg.value);\r\n        distributeTokens(msg.sender, msg.value);\r\n    }\r\n\r\n    function contributeToPublicSale() external payable onlyPublicSalePhase {\r\n        require(msg.value >= publicSaleMinContribution, \"Below public sale minimum contribution\");\r\n        require(msg.value <= publicSaleMaxContribution, \"Exceeds public sale maximum contribution\");\r\n        require(address(this).balance.add(msg.value) <= publicSaleCap, \"Public sale cap reached\");\r\n\r\n        publicSaleContributions[msg.sender] = publicSaleContributions[msg.sender].add(msg.value);\r\n        distributeTokens(msg.sender, msg.value);\r\n    }\r\n\r\n    function distributeTokens(address recipient, uint256 etherAmount) internal {\r\n        uint256 tokenAmount = etherAmount; // In a real scenario, you may need to calculate the actual token amount based on the token rate\r\n        require(tokenAmount > 0, \"Invalid token amount\");\r\n\r\n        token.transfer(recipient, tokenAmount);\r\n        emit TokensPurchased(recipient, tokenAmount, etherAmount, currentPhase);\r\n    }\r\n\r\n    function distributeTokensToAddress(address recipient, uint256 tokenAmount) external onlyOwner {\r\n        require(tokenAmount > 0, \"Invalid token amount\");\r\n        token.transfer(recipient, tokenAmount);\r\n        emit TokensDistributed(recipient, tokenAmount);\r\n    }\r\n\r\n    function claimRefund() external saleNotFinished {\r\n        uint256 refundAmount;\r\n        if (currentPhase == SalePhase.Presale) {\r\n            refundAmount = presaleContributions[msg.sender];\r\n            require(refundAmount > 0, \"No presale contribution to refund\");\r\n            presaleContributions[msg.sender] = 0;\r\n        } else if (currentPhase == SalePhase.PublicSale) {\r\n            refundAmount = publicSaleContributions[msg.sender];\r\n            require(refundAmount > 0, \"No public sale contribution to refund\");\r\n            publicSaleContributions[msg.sender] = 0;\r\n        }\r\n\r\n        (bool success, ) = msg.sender.call{value: refundAmount}(\"\");\r\n        require(success, \"Refund failed\");\r\n        emit RefundClaimed(msg.sender, refundAmount);\r\n    }\r\n\r\n    // Fallback function to receive Ether\r\n    receive() external payable {\r\n        revert(\"Fallback function not allowed\");\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203e1adad4f89eb56dbdd13e60e667e865d60130c85c561effe0a1ee499317270064736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203e1adad4f89eb56dbdd13e60e667e865d60130c85c561effe0a1ee499317270064736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY BYTE 0xDA 0xD4 0xF8 SWAP15 0xB5 PUSH14 0xBDD13E60E667E865D60130C85C56 0x1E SELFDESTRUCT 0xE0 LOG1 0xEE 0x49 SWAP4 OR 0x27 STOP PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "482:6210:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203e1adad4f89eb56dbdd13e60e667e865d60130c85c561effe0a1ee499317270064736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY BYTE 0xDA 0xD4 0xF8 SWAP15 0xB5 PUSH14 0xBDD13E60E667E865D60130C85C56 0x1E SELFDESTRUCT 0xE0 LOG1 0xEE 0x49 SWAP4 OR 0x27 STOP PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "482:6210:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e1adad4f89eb56dbdd13e60e667e865d60130c85c561effe0a1ee499317270064736f6c63430008170033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/TokenSale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TokenSale.sol": {
				"TokenSale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_presaleCap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_publicSaleCap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_presaleMinContribution",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_presaleMaxContribution",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_publicSaleMinContribution",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_publicSaleMaxContribution",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "contributor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RefundClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "etherAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum TokenSale.SalePhase",
									"name": "phase",
									"type": "uint8"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claimRefund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contributeToPresale",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contributeToPublicSale",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentPhase",
							"outputs": [
								{
									"internalType": "enum TokenSale.SalePhase",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "distributeTokensToAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endPresale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endPublicSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleCap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "presaleContributions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleMaxContribution",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleMinContribution",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "publicSaleCap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "publicSaleContributions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "publicSaleMaxContribution",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "publicSaleMinContribution",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPresale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TokenSale.sol\":232:5257  contract TokenSale is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TokenSale.sol\":1498:2233  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/TokenSale.sol\":1816:1828  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/TokenSale.sol\":1849:1855  _token */\n  dup8\n    /* \"contracts/TokenSale.sol\":1841:1846  token */\n  0x01\n  0x00\n    /* \"contracts/TokenSale.sol\":1841:1855  token = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":1879:1890  _presaleCap */\n  dup7\n    /* \"contracts/TokenSale.sol\":1866:1876  presaleCap */\n  0x02\n    /* \"contracts/TokenSale.sol\":1866:1890  presaleCap = _presaleCap */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":1917:1931  _publicSaleCap */\n  dup6\n    /* \"contracts/TokenSale.sol\":1901:1914  publicSaleCap */\n  0x03\n    /* \"contracts/TokenSale.sol\":1901:1931  publicSaleCap = _publicSaleCap */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":1967:1990  _presaleMinContribution */\n  dup5\n    /* \"contracts/TokenSale.sol\":1942:1964  presaleMinContribution */\n  0x04\n    /* \"contracts/TokenSale.sol\":1942:1990  presaleMinContribution = _presaleMinContribution */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":2026:2049  _presaleMaxContribution */\n  dup4\n    /* \"contracts/TokenSale.sol\":2001:2023  presaleMaxContribution */\n  0x05\n    /* \"contracts/TokenSale.sol\":2001:2049  presaleMaxContribution = _presaleMaxContribution */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":2088:2114  _publicSaleMinContribution */\n  dup3\n    /* \"contracts/TokenSale.sol\":2060:2085  publicSaleMinContribution */\n  0x06\n    /* \"contracts/TokenSale.sol\":2060:2114  publicSaleMinContribution = _publicSaleMinContribution */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":2153:2179  _publicSaleMaxContribution */\n  dup2\n    /* \"contracts/TokenSale.sol\":2125:2150  publicSaleMaxContribution */\n  0x07\n    /* \"contracts/TokenSale.sol\":2125:2179  publicSaleMaxContribution = _publicSaleMaxContribution */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":2205:2225  SalePhase.NotStarted */\n  0x00\n    /* \"contracts/TokenSale.sol\":2190:2202  currentPhase */\n  0x0a\n  0x00\n    /* \"contracts/TokenSale.sol\":2190:2225  currentPhase = SalePhase.NotStarted */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\ntag_13:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenSale.sol\":1498:2233  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/TokenSale.sol\":232:5257  contract TokenSale is Ownable {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_38\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:677   */\ntag_23:\n    /* \"#utility.yul\":618:625   */\n  0x00\n    /* \"#utility.yul\":647:671   */\n  tag_40\n    /* \"#utility.yul\":665:670   */\n  dup3\n    /* \"#utility.yul\":647:671   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":636:671   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:677   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":683:831   */\ntag_24:\n    /* \"#utility.yul\":769:806   */\n  tag_42\n    /* \"#utility.yul\":800:805   */\n  dup2\n    /* \"#utility.yul\":769:806   */\n  tag_23\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":762:767   */\n  dup2\n    /* \"#utility.yul\":759:807   */\n  eq\n    /* \"#utility.yul\":749:825   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":818:819   */\n  dup1\n    /* \"#utility.yul\":811:823   */\n  revert\n    /* \"#utility.yul\":749:825   */\ntag_43:\n    /* \"#utility.yul\":683:831   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":837:1006   */\ntag_25:\n    /* \"#utility.yul\":907:912   */\n  0x00\n    /* \"#utility.yul\":938:944   */\n  dup2\n    /* \"#utility.yul\":932:945   */\n  mload\n    /* \"#utility.yul\":923:945   */\n  swap1\n  pop\n    /* \"#utility.yul\":954:1000   */\n  tag_45\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":954:1000   */\n  tag_24\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":837:1006   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1012:1089   */\ntag_26:\n    /* \"#utility.yul\":1049:1056   */\n  0x00\n    /* \"#utility.yul\":1078:1083   */\n  dup2\n    /* \"#utility.yul\":1067:1083   */\n  swap1\n  pop\n    /* \"#utility.yul\":1012:1089   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1095:1217   */\ntag_27:\n    /* \"#utility.yul\":1168:1192   */\n  tag_48\n    /* \"#utility.yul\":1186:1191   */\n  dup2\n    /* \"#utility.yul\":1168:1192   */\n  tag_26\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1161:1166   */\n  dup2\n    /* \"#utility.yul\":1158:1193   */\n  eq\n    /* \"#utility.yul\":1148:1211   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1207:1208   */\n  0x00\n    /* \"#utility.yul\":1204:1205   */\n  dup1\n    /* \"#utility.yul\":1197:1209   */\n  revert\n    /* \"#utility.yul\":1148:1211   */\ntag_49:\n    /* \"#utility.yul\":1095:1217   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1223:1366   */\ntag_28:\n    /* \"#utility.yul\":1280:1285   */\n  0x00\n    /* \"#utility.yul\":1311:1317   */\n  dup2\n    /* \"#utility.yul\":1305:1318   */\n  mload\n    /* \"#utility.yul\":1296:1318   */\n  swap1\n  pop\n    /* \"#utility.yul\":1327:1360   */\n  tag_51\n    /* \"#utility.yul\":1354:1359   */\n  dup2\n    /* \"#utility.yul\":1327:1360   */\n  tag_27\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1223:1366   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1372:1494   */\ntag_29:\n    /* \"#utility.yul\":1445:1469   */\n  tag_53\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_22\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1438:1443   */\n  dup2\n    /* \"#utility.yul\":1435:1470   */\n  eq\n    /* \"#utility.yul\":1425:1488   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1481:1482   */\n  dup1\n    /* \"#utility.yul\":1474:1486   */\n  revert\n    /* \"#utility.yul\":1425:1488   */\ntag_54:\n    /* \"#utility.yul\":1372:1494   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1500:1643   */\ntag_30:\n    /* \"#utility.yul\":1557:1562   */\n  0x00\n    /* \"#utility.yul\":1588:1594   */\n  dup2\n    /* \"#utility.yul\":1582:1595   */\n  mload\n    /* \"#utility.yul\":1573:1595   */\n  swap1\n  pop\n    /* \"#utility.yul\":1604:1637   */\n  tag_56\n    /* \"#utility.yul\":1631:1636   */\n  dup2\n    /* \"#utility.yul\":1604:1637   */\n  tag_29\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1500:1643   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1649:3123   */\ntag_3:\n    /* \"#utility.yul\":1795:1801   */\n  0x00\n    /* \"#utility.yul\":1803:1809   */\n  dup1\n    /* \"#utility.yul\":1811:1817   */\n  0x00\n    /* \"#utility.yul\":1819:1825   */\n  dup1\n    /* \"#utility.yul\":1827:1833   */\n  0x00\n    /* \"#utility.yul\":1835:1841   */\n  dup1\n    /* \"#utility.yul\":1843:1849   */\n  0x00\n    /* \"#utility.yul\":1851:1857   */\n  dup1\n    /* \"#utility.yul\":1900:1903   */\n  0x0100\n    /* \"#utility.yul\":1888:1897   */\n  dup10\n    /* \"#utility.yul\":1879:1886   */\n  dup12\n    /* \"#utility.yul\":1875:1898   */\n  sub\n    /* \"#utility.yul\":1871:1904   */\n  slt\n    /* \"#utility.yul\":1868:1988   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1907:1986   */\n  tag_59\n  tag_19\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1868:1988   */\ntag_58:\n    /* \"#utility.yul\":2027:2028   */\n  0x00\n    /* \"#utility.yul\":2052:2129   */\n  tag_60\n    /* \"#utility.yul\":2121:2128   */\n  dup12\n    /* \"#utility.yul\":2112:2118   */\n  dup3\n    /* \"#utility.yul\":2101:2110   */\n  dup13\n    /* \"#utility.yul\":2097:2119   */\n  add\n    /* \"#utility.yul\":2052:2129   */\n  tag_25\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2042:2129   */\n  swap9\n  pop\n    /* \"#utility.yul\":1998:2139   */\n  pop\n    /* \"#utility.yul\":2178:2180   */\n  0x20\n    /* \"#utility.yul\":2204:2268   */\n  tag_61\n    /* \"#utility.yul\":2260:2267   */\n  dup12\n    /* \"#utility.yul\":2251:2257   */\n  dup3\n    /* \"#utility.yul\":2240:2249   */\n  dup13\n    /* \"#utility.yul\":2236:2258   */\n  add\n    /* \"#utility.yul\":2204:2268   */\n  tag_28\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2194:2268   */\n  swap8\n  pop\n    /* \"#utility.yul\":2149:2278   */\n  pop\n    /* \"#utility.yul\":2317:2319   */\n  0x40\n    /* \"#utility.yul\":2343:2407   */\n  tag_62\n    /* \"#utility.yul\":2399:2406   */\n  dup12\n    /* \"#utility.yul\":2390:2396   */\n  dup3\n    /* \"#utility.yul\":2379:2388   */\n  dup13\n    /* \"#utility.yul\":2375:2397   */\n  add\n    /* \"#utility.yul\":2343:2407   */\n  tag_28\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2333:2407   */\n  swap7\n  pop\n    /* \"#utility.yul\":2288:2417   */\n  pop\n    /* \"#utility.yul\":2456:2458   */\n  0x60\n    /* \"#utility.yul\":2482:2546   */\n  tag_63\n    /* \"#utility.yul\":2538:2545   */\n  dup12\n    /* \"#utility.yul\":2529:2535   */\n  dup3\n    /* \"#utility.yul\":2518:2527   */\n  dup13\n    /* \"#utility.yul\":2514:2536   */\n  add\n    /* \"#utility.yul\":2482:2546   */\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2472:2546   */\n  swap6\n  pop\n    /* \"#utility.yul\":2427:2556   */\n  pop\n    /* \"#utility.yul\":2595:2598   */\n  0x80\n    /* \"#utility.yul\":2622:2686   */\n  tag_64\n    /* \"#utility.yul\":2678:2685   */\n  dup12\n    /* \"#utility.yul\":2669:2675   */\n  dup3\n    /* \"#utility.yul\":2658:2667   */\n  dup13\n    /* \"#utility.yul\":2654:2676   */\n  add\n    /* \"#utility.yul\":2622:2686   */\n  tag_28\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2612:2686   */\n  swap5\n  pop\n    /* \"#utility.yul\":2566:2696   */\n  pop\n    /* \"#utility.yul\":2735:2738   */\n  0xa0\n    /* \"#utility.yul\":2762:2826   */\n  tag_65\n    /* \"#utility.yul\":2818:2825   */\n  dup12\n    /* \"#utility.yul\":2809:2815   */\n  dup3\n    /* \"#utility.yul\":2798:2807   */\n  dup13\n    /* \"#utility.yul\":2794:2816   */\n  add\n    /* \"#utility.yul\":2762:2826   */\n  tag_28\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2752:2826   */\n  swap4\n  pop\n    /* \"#utility.yul\":2706:2836   */\n  pop\n    /* \"#utility.yul\":2875:2878   */\n  0xc0\n    /* \"#utility.yul\":2902:2966   */\n  tag_66\n    /* \"#utility.yul\":2958:2965   */\n  dup12\n    /* \"#utility.yul\":2949:2955   */\n  dup3\n    /* \"#utility.yul\":2938:2947   */\n  dup13\n    /* \"#utility.yul\":2934:2956   */\n  add\n    /* \"#utility.yul\":2902:2966   */\n  tag_28\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2892:2966   */\n  swap3\n  pop\n    /* \"#utility.yul\":2846:2976   */\n  pop\n    /* \"#utility.yul\":3015:3018   */\n  0xe0\n    /* \"#utility.yul\":3042:3106   */\n  tag_67\n    /* \"#utility.yul\":3098:3105   */\n  dup12\n    /* \"#utility.yul\":3089:3095   */\n  dup3\n    /* \"#utility.yul\":3078:3087   */\n  dup13\n    /* \"#utility.yul\":3074:3096   */\n  add\n    /* \"#utility.yul\":3042:3106   */\n  tag_30\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":3032:3106   */\n  swap2\n  pop\n    /* \"#utility.yul\":2986:3116   */\n  pop\n    /* \"#utility.yul\":1649:3123   */\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  swap1\n  swap4\n  swap7\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3129:3247   */\ntag_31:\n    /* \"#utility.yul\":3216:3240   */\n  tag_69\n    /* \"#utility.yul\":3234:3239   */\n  dup2\n    /* \"#utility.yul\":3216:3240   */\n  tag_22\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":3211:3214   */\n  dup3\n    /* \"#utility.yul\":3204:3241   */\n  mstore\n    /* \"#utility.yul\":3129:3247   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3253:3475   */\ntag_9:\n    /* \"#utility.yul\":3346:3350   */\n  0x00\n    /* \"#utility.yul\":3384:3386   */\n  0x20\n    /* \"#utility.yul\":3373:3382   */\n  dup3\n    /* \"#utility.yul\":3369:3387   */\n  add\n    /* \"#utility.yul\":3361:3387   */\n  swap1\n  pop\n    /* \"#utility.yul\":3397:3468   */\n  tag_71\n    /* \"#utility.yul\":3465:3466   */\n  0x00\n    /* \"#utility.yul\":3454:3463   */\n  dup4\n    /* \"#utility.yul\":3450:3467   */\n  add\n    /* \"#utility.yul\":3441:3447   */\n  dup5\n    /* \"#utility.yul\":3397:3468   */\n  tag_31\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3253:3475   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3481:3661   */\ntag_15:\n    /* \"#utility.yul\":3529:3606   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3526:3527   */\n  0x00\n    /* \"#utility.yul\":3519:3607   */\n  mstore\n    /* \"#utility.yul\":3626:3630   */\n  0x21\n    /* \"#utility.yul\":3623:3624   */\n  0x04\n    /* \"#utility.yul\":3616:3631   */\n  mstore\n    /* \"#utility.yul\":3650:3654   */\n  0x24\n    /* \"#utility.yul\":3647:3648   */\n  0x00\n    /* \"#utility.yul\":3640:3655   */\n  revert\n    /* \"contracts/TokenSale.sol\":232:5257  contract TokenSale is Ownable {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TokenSale.sol\":232:5257  contract TokenSale is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x87e449c3\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xc7d17fd1\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xc7d17fd1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe59c9510\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xfefae016\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x87e449c3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa43be57b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb5545a3c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc4849847\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x477f1eba\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x477f1eba\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x63d5502f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x64826b7a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7146e4fa\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x0269d3b4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x04c98b2b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x055ad42e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2a517ab2\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x35f74869\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/TokenSale.sol\":5207:5246  revert(\"Fallback function not allowed\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TokenSale.sol\":232:5257  contract TokenSale is Ownable {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TokenSale.sol\":2603:3102  function contributeToPresale() external payable onlyPresalePhase {... */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/TokenSale.sol\":2241:2351  function startPresale() external onlyOwner saleNotFinished {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/TokenSale.sol\":804:833  SalePhase public currentPhase */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":513:553  uint256 public publicSaleMinContribution */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":671:729  mapping(address => uint256) public publicSaleContributions */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":609:664  mapping(address => uint256) public presaleContributions */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":358:383  uint256 public presaleCap */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":390:418  uint256 public publicSaleCap */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":560:600  uint256 public publicSaleMaxContribution */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/TokenSale.sol\":469:506  uint256 public presaleMaxContribution */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":2359:2471  function endPresale() external onlyOwner onlyPresalePhase {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/TokenSale.sol\":4349:5118  function claimRefund() external saleNotFinished {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/TokenSale.sol\":425:462  uint256 public presaleMinContribution */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":2479:2595  function endPublicSale() external onlyOwner onlyPublicSalePhase {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contracts/TokenSale.sol\":3110:3642  function contributeToPublicSale() external payable onlyPublicSalePhase {... */\n    tag_19:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/TokenSale.sol\":306:324  ERC20 public token */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenSale.sol\":4074:4341  function distributeTokensToAddress(address recipient, uint256 tokenAmount) external onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      tag_108\n      jump\t// in\n    tag_105:\n      stop\n        /* \"contracts/TokenSale.sol\":2603:3102  function contributeToPresale() external payable onlyPresalePhase {... */\n    tag_31:\n        /* \"contracts/TokenSale.sol\":1156:1173  SalePhase.Presale */\n      0x01\n        /* \"contracts/TokenSale.sol\":1140:1173  currentPhase == SalePhase.Presale */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_110\n      jumpi\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n    tag_110:\n        /* \"contracts/TokenSale.sol\":1140:1152  currentPhase */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenSale.sol\":1140:1173  currentPhase == SalePhase.Presale */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_113\n      jumpi\n      tag_114\n      tag_112\n      jump\t// in\n    tag_114:\n    tag_113:\n      eq\n        /* \"contracts/TokenSale.sol\":1132:1198  require(currentPhase == SalePhase.Presale, \"Not in presale phase\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/TokenSale.sol\":2700:2722  presaleMinContribution */\n      sload(0x04)\n        /* \"contracts/TokenSale.sol\":2687:2696  msg.value */\n      callvalue\n        /* \"contracts/TokenSale.sol\":2687:2722  msg.value >= presaleMinContribution */\n      lt\n      iszero\n        /* \"contracts/TokenSale.sol\":2679:2761  require(msg.value >= presaleMinContribution, \"Below presale minimum contribution\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"contracts/TokenSale.sol\":2793:2815  presaleMaxContribution */\n      sload(0x05)\n        /* \"contracts/TokenSale.sol\":2780:2789  msg.value */\n      callvalue\n        /* \"contracts/TokenSale.sol\":2780:2815  msg.value <= presaleMaxContribution */\n      gt\n      iszero\n        /* \"contracts/TokenSale.sol\":2772:2856  require(msg.value <= presaleMaxContribution, \"Exceeds presale maximum contribution\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/TokenSale.sol\":2915:2925  presaleCap */\n      sload(0x02)\n        /* \"contracts/TokenSale.sol\":2875:2911  address(this).balance.add(msg.value) */\n      tag_125\n        /* \"contracts/TokenSale.sol\":2901:2910  msg.value */\n      callvalue\n        /* \"contracts/TokenSale.sol\":2875:2896  address(this).balance */\n      selfbalance\n        /* \"contracts/TokenSale.sol\":2875:2900  address(this).balance.add */\n      tag_126\n      swap1\n        /* \"contracts/TokenSale.sol\":2875:2911  address(this).balance.add(msg.value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"contracts/TokenSale.sol\":2875:2925  address(this).balance.add(msg.value) <= presaleCap */\n      gt\n      iszero\n        /* \"contracts/TokenSale.sol\":2867:2949  require(address(this).balance.add(msg.value) <= presaleCap, \"Presale cap reached\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"contracts/TokenSale.sol\":2997:3044  presaleContributions[msg.sender].add(msg.value) */\n      tag_130\n        /* \"contracts/TokenSale.sol\":3034:3043  msg.value */\n      callvalue\n        /* \"contracts/TokenSale.sol\":2997:3017  presaleContributions */\n      0x08\n        /* \"contracts/TokenSale.sol\":2997:3029  presaleContributions[msg.sender] */\n      0x00\n        /* \"contracts/TokenSale.sol\":3018:3028  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":2997:3029  presaleContributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TokenSale.sol\":2997:3033  presaleContributions[msg.sender].add */\n      tag_126\n      swap1\n        /* \"contracts/TokenSale.sol\":2997:3044  presaleContributions[msg.sender].add(msg.value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_130:\n        /* \"contracts/TokenSale.sol\":2962:2982  presaleContributions */\n      0x08\n        /* \"contracts/TokenSale.sol\":2962:2994  presaleContributions[msg.sender] */\n      0x00\n        /* \"contracts/TokenSale.sol\":2983:2993  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":2962:2994  presaleContributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenSale.sol\":2962:3044  presaleContributions[msg.sender] = presaleContributions[msg.sender].add(msg.value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenSale.sol\":3055:3094  distributeTokens(msg.sender, msg.value) */\n      tag_131\n        /* \"contracts/TokenSale.sol\":3072:3082  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":3084:3093  msg.value */\n      callvalue\n        /* \"contracts/TokenSale.sol\":3055:3071  distributeTokens */\n      tag_132\n        /* \"contracts/TokenSale.sol\":3055:3094  distributeTokens(msg.sender, msg.value) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/TokenSale.sol\":2603:3102  function contributeToPresale() external payable onlyPresalePhase {... */\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":2241:2351  function startPresale() external onlyOwner saleNotFinished {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_134:\n        /* \"contracts/TokenSale.sol\":1431:1449  SalePhase.Finished */\n      0x03\n        /* \"contracts/TokenSale.sol\":1415:1449  currentPhase != SalePhase.Finished */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_137\n      jumpi\n      tag_138\n      tag_112\n      jump\t// in\n    tag_138:\n    tag_137:\n        /* \"contracts/TokenSale.sol\":1415:1427  currentPhase */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenSale.sol\":1415:1449  currentPhase != SalePhase.Finished */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_139\n      jumpi\n      tag_140\n      tag_112\n      jump\t// in\n    tag_140:\n    tag_139:\n      sub\n        /* \"contracts/TokenSale.sol\":1407:1470  require(currentPhase != SalePhase.Finished, \"Sale is finished\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/TokenSale.sol\":2326:2343  SalePhase.Presale */\n      0x01\n        /* \"contracts/TokenSale.sol\":2311:2323  currentPhase */\n      0x0a\n      0x00\n        /* \"contracts/TokenSale.sol\":2311:2343  currentPhase = SalePhase.Presale */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_145\n      jumpi\n      tag_146\n      tag_112\n      jump\t// in\n    tag_146:\n    tag_145:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenSale.sol\":2241:2351  function startPresale() external onlyOwner saleNotFinished {... */\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":804:833  SalePhase public currentPhase */\n    tag_37:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":513:553  uint256 public publicSaleMinContribution */\n    tag_42:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":671:729  mapping(address => uint256) public publicSaleContributions */\n    tag_49:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":609:664  mapping(address => uint256) public presaleContributions */\n    tag_54:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":358:383  uint256 public presaleCap */\n    tag_58:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":390:418  uint256 public publicSaleCap */\n    tag_62:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":560:600  uint256 public publicSaleMaxContribution */\n    tag_66:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":469:506  uint256 public presaleMaxContribution */\n    tag_73:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":2359:2471  function endPresale() external onlyOwner onlyPresalePhase {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/TokenSale.sol\":1156:1173  SalePhase.Presale */\n      0x01\n        /* \"contracts/TokenSale.sol\":1140:1173  currentPhase == SalePhase.Presale */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_156\n      jumpi\n      tag_157\n      tag_112\n      jump\t// in\n    tag_157:\n    tag_156:\n        /* \"contracts/TokenSale.sol\":1140:1152  currentPhase */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenSale.sol\":1140:1173  currentPhase == SalePhase.Presale */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_158\n      jumpi\n      tag_159\n      tag_112\n      jump\t// in\n    tag_159:\n    tag_158:\n      eq\n        /* \"contracts/TokenSale.sol\":1132:1198  require(currentPhase == SalePhase.Presale, \"Not in presale phase\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_117\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"contracts/TokenSale.sol\":2443:2463  SalePhase.PublicSale */\n      0x02\n        /* \"contracts/TokenSale.sol\":2428:2440  currentPhase */\n      0x0a\n      0x00\n        /* \"contracts/TokenSale.sol\":2428:2463  currentPhase = SalePhase.PublicSale */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_163\n      jumpi\n      tag_164\n      tag_112\n      jump\t// in\n    tag_164:\n    tag_163:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenSale.sol\":2359:2471  function endPresale() external onlyOwner onlyPresalePhase {... */\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":4349:5118  function claimRefund() external saleNotFinished {... */\n    tag_85:\n        /* \"contracts/TokenSale.sol\":1431:1449  SalePhase.Finished */\n      0x03\n        /* \"contracts/TokenSale.sol\":1415:1449  currentPhase != SalePhase.Finished */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_166\n      jumpi\n      tag_167\n      tag_112\n      jump\t// in\n    tag_167:\n    tag_166:\n        /* \"contracts/TokenSale.sol\":1415:1427  currentPhase */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenSale.sol\":1415:1449  currentPhase != SalePhase.Finished */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_168\n      jumpi\n      tag_169\n      tag_112\n      jump\t// in\n    tag_169:\n    tag_168:\n      sub\n        /* \"contracts/TokenSale.sol\":1407:1470  require(currentPhase != SalePhase.Finished, \"Sale is finished\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_143\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/TokenSale.sol\":4408:4428  uint256 refundAmount */\n      0x00\n        /* \"contracts/TokenSale.sol\":4459:4476  SalePhase.Presale */\n      0x01\n        /* \"contracts/TokenSale.sol\":4443:4476  currentPhase == SalePhase.Presale */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_173\n      jumpi\n      tag_174\n      tag_112\n      jump\t// in\n    tag_174:\n    tag_173:\n        /* \"contracts/TokenSale.sol\":4443:4455  currentPhase */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenSale.sol\":4443:4476  currentPhase == SalePhase.Presale */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_175\n      jumpi\n      tag_176\n      tag_112\n      jump\t// in\n    tag_176:\n    tag_175:\n      sub\n        /* \"contracts/TokenSale.sol\":4439:4940  if (currentPhase == SalePhase.Presale) {... */\n      tag_177\n      jumpi\n        /* \"contracts/TokenSale.sol\":4508:4528  presaleContributions */\n      0x08\n        /* \"contracts/TokenSale.sol\":4508:4540  presaleContributions[msg.sender] */\n      0x00\n        /* \"contracts/TokenSale.sol\":4529:4539  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":4508:4540  presaleContributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TokenSale.sol\":4493:4540  refundAmount = presaleContributions[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":4578:4579  0 */\n      0x00\n        /* \"contracts/TokenSale.sol\":4563:4575  refundAmount */\n      dup2\n        /* \"contracts/TokenSale.sol\":4563:4579  refundAmount > 0 */\n      gt\n        /* \"contracts/TokenSale.sol\":4555:4617  require(refundAmount > 0, \"No presale contribution to refund\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"contracts/TokenSale.sol\":4667:4668  0 */\n      0x00\n        /* \"contracts/TokenSale.sol\":4632:4652  presaleContributions */\n      0x08\n        /* \"contracts/TokenSale.sol\":4632:4664  presaleContributions[msg.sender] */\n      0x00\n        /* \"contracts/TokenSale.sol\":4653:4663  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":4632:4664  presaleContributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenSale.sol\":4632:4668  presaleContributions[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenSale.sol\":4439:4940  if (currentPhase == SalePhase.Presale) {... */\n      jump(tag_181)\n    tag_177:\n        /* \"contracts/TokenSale.sol\":4706:4726  SalePhase.PublicSale */\n      0x02\n        /* \"contracts/TokenSale.sol\":4690:4726  currentPhase == SalePhase.PublicSale */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_182\n      jumpi\n      tag_183\n      tag_112\n      jump\t// in\n    tag_183:\n    tag_182:\n        /* \"contracts/TokenSale.sol\":4690:4702  currentPhase */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenSale.sol\":4690:4726  currentPhase == SalePhase.PublicSale */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_184\n      jumpi\n      tag_185\n      tag_112\n      jump\t// in\n    tag_185:\n    tag_184:\n      sub\n        /* \"contracts/TokenSale.sol\":4686:4940  if (currentPhase == SalePhase.PublicSale) {... */\n      tag_186\n      jumpi\n        /* \"contracts/TokenSale.sol\":4758:4781  publicSaleContributions */\n      0x09\n        /* \"contracts/TokenSale.sol\":4758:4793  publicSaleContributions[msg.sender] */\n      0x00\n        /* \"contracts/TokenSale.sol\":4782:4792  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":4758:4793  publicSaleContributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TokenSale.sol\":4743:4793  refundAmount = publicSaleContributions[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":4831:4832  0 */\n      0x00\n        /* \"contracts/TokenSale.sol\":4816:4828  refundAmount */\n      dup2\n        /* \"contracts/TokenSale.sol\":4816:4832  refundAmount > 0 */\n      gt\n        /* \"contracts/TokenSale.sol\":4808:4874  require(refundAmount > 0, \"No public sale contribution to refund\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/TokenSale.sol\":4927:4928  0 */\n      0x00\n        /* \"contracts/TokenSale.sol\":4889:4912  publicSaleContributions */\n      0x09\n        /* \"contracts/TokenSale.sol\":4889:4924  publicSaleContributions[msg.sender] */\n      0x00\n        /* \"contracts/TokenSale.sol\":4913:4923  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":4889:4924  publicSaleContributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenSale.sol\":4889:4928  publicSaleContributions[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenSale.sol\":4686:4940  if (currentPhase == SalePhase.PublicSale) {... */\n    tag_186:\n        /* \"contracts/TokenSale.sol\":4439:4940  if (currentPhase == SalePhase.Presale) {... */\n    tag_181:\n        /* \"contracts/TokenSale.sol\":4953:4965  bool success */\n      0x00\n        /* \"contracts/TokenSale.sol\":4971:4981  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":4971:4986  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":4994:5006  refundAmount */\n      dup3\n        /* \"contracts/TokenSale.sol\":4971:5011  msg.sender.call{value: refundAmount}(\"\") */\n      mload(0x40)\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_194\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_193)\n    tag_194:\n      0x60\n      swap2\n      pop\n    tag_193:\n      pop\n        /* \"contracts/TokenSale.sol\":4952:5011  (bool success, ) = msg.sender.call{value: refundAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":5030:5037  success */\n      dup1\n        /* \"contracts/TokenSale.sol\":5022:5055  require(success, \"Refund failed\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"contracts/TokenSale.sol\":5085:5095  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":5071:5110  RefundClaimed(msg.sender, refundAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x358fe4192934d3bf28ae181feda1f4bd08ca67f5e2fad55582cce5eb67304ae9\n        /* \"contracts/TokenSale.sol\":5097:5109  refundAmount */\n      dup4\n        /* \"contracts/TokenSale.sol\":5071:5110  RefundClaimed(msg.sender, refundAmount) */\n      mload(0x40)\n      tag_198\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/TokenSale.sol\":4397:5118  {... */\n      pop\n      pop\n        /* \"contracts/TokenSale.sol\":4349:5118  function claimRefund() external saleNotFinished {... */\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":425:462  uint256 public presaleMinContribution */\n    tag_88:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":2479:2595  function endPublicSale() external onlyOwner onlyPublicSalePhase {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/TokenSale.sol\":1292:1312  SalePhase.PublicSale */\n      0x02\n        /* \"contracts/TokenSale.sol\":1276:1312  currentPhase == SalePhase.PublicSale */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_202\n      jumpi\n      tag_203\n      tag_112\n      jump\t// in\n    tag_203:\n    tag_202:\n        /* \"contracts/TokenSale.sol\":1276:1288  currentPhase */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenSale.sol\":1276:1312  currentPhase == SalePhase.PublicSale */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_204\n      jumpi\n      tag_205\n      tag_112\n      jump\t// in\n    tag_205:\n    tag_204:\n      eq\n        /* \"contracts/TokenSale.sol\":1268:1341  require(currentPhase == SalePhase.PublicSale, \"Not in public sale phase\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"contracts/TokenSale.sol\":2569:2587  SalePhase.Finished */\n      0x03\n        /* \"contracts/TokenSale.sol\":2554:2566  currentPhase */\n      0x0a\n      0x00\n        /* \"contracts/TokenSale.sol\":2554:2587  currentPhase = SalePhase.Finished */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_210\n      jumpi\n      tag_211\n      tag_112\n      jump\t// in\n    tag_211:\n    tag_210:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenSale.sol\":2479:2595  function endPublicSale() external onlyOwner onlyPublicSalePhase {... */\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":3110:3642  function contributeToPublicSale() external payable onlyPublicSalePhase {... */\n    tag_94:\n        /* \"contracts/TokenSale.sol\":1292:1312  SalePhase.PublicSale */\n      0x02\n        /* \"contracts/TokenSale.sol\":1276:1312  currentPhase == SalePhase.PublicSale */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_213\n      jumpi\n      tag_214\n      tag_112\n      jump\t// in\n    tag_214:\n    tag_213:\n        /* \"contracts/TokenSale.sol\":1276:1288  currentPhase */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenSale.sol\":1276:1312  currentPhase == SalePhase.PublicSale */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_215\n      jumpi\n      tag_216\n      tag_112\n      jump\t// in\n    tag_216:\n    tag_215:\n      eq\n        /* \"contracts/TokenSale.sol\":1268:1341  require(currentPhase == SalePhase.PublicSale, \"Not in public sale phase\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_208\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"contracts/TokenSale.sol\":3213:3238  publicSaleMinContribution */\n      sload(0x06)\n        /* \"contracts/TokenSale.sol\":3200:3209  msg.value */\n      callvalue\n        /* \"contracts/TokenSale.sol\":3200:3238  msg.value >= publicSaleMinContribution */\n      lt\n      iszero\n        /* \"contracts/TokenSale.sol\":3192:3281  require(msg.value >= publicSaleMinContribution, \"Below public sale minimum contribution\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"contracts/TokenSale.sol\":3313:3338  publicSaleMaxContribution */\n      sload(0x07)\n        /* \"contracts/TokenSale.sol\":3300:3309  msg.value */\n      callvalue\n        /* \"contracts/TokenSale.sol\":3300:3338  msg.value <= publicSaleMaxContribution */\n      gt\n      iszero\n        /* \"contracts/TokenSale.sol\":3292:3383  require(msg.value <= publicSaleMaxContribution, \"Exceeds public sale maximum contribution\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"contracts/TokenSale.sol\":3442:3455  publicSaleCap */\n      sload(0x03)\n        /* \"contracts/TokenSale.sol\":3402:3438  address(this).balance.add(msg.value) */\n      tag_226\n        /* \"contracts/TokenSale.sol\":3428:3437  msg.value */\n      callvalue\n        /* \"contracts/TokenSale.sol\":3402:3423  address(this).balance */\n      selfbalance\n        /* \"contracts/TokenSale.sol\":3402:3427  address(this).balance.add */\n      tag_126\n      swap1\n        /* \"contracts/TokenSale.sol\":3402:3438  address(this).balance.add(msg.value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_226:\n        /* \"contracts/TokenSale.sol\":3402:3455  address(this).balance.add(msg.value) <= publicSaleCap */\n      gt\n      iszero\n        /* \"contracts/TokenSale.sol\":3394:3483  require(address(this).balance.add(msg.value) <= publicSaleCap, \"Public sale cap reached\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"contracts/TokenSale.sol\":3534:3584  publicSaleContributions[msg.sender].add(msg.value) */\n      tag_230\n        /* \"contracts/TokenSale.sol\":3574:3583  msg.value */\n      callvalue\n        /* \"contracts/TokenSale.sol\":3534:3557  publicSaleContributions */\n      0x09\n        /* \"contracts/TokenSale.sol\":3534:3569  publicSaleContributions[msg.sender] */\n      0x00\n        /* \"contracts/TokenSale.sol\":3558:3568  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":3534:3569  publicSaleContributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TokenSale.sol\":3534:3573  publicSaleContributions[msg.sender].add */\n      tag_126\n      swap1\n        /* \"contracts/TokenSale.sol\":3534:3584  publicSaleContributions[msg.sender].add(msg.value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"contracts/TokenSale.sol\":3496:3519  publicSaleContributions */\n      0x09\n        /* \"contracts/TokenSale.sol\":3496:3531  publicSaleContributions[msg.sender] */\n      0x00\n        /* \"contracts/TokenSale.sol\":3520:3530  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":3496:3531  publicSaleContributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenSale.sol\":3496:3584  publicSaleContributions[msg.sender] = publicSaleContributions[msg.sender].add(msg.value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenSale.sol\":3595:3634  distributeTokens(msg.sender, msg.value) */\n      tag_231\n        /* \"contracts/TokenSale.sol\":3612:3622  msg.sender */\n      caller\n        /* \"contracts/TokenSale.sol\":3624:3633  msg.value */\n      callvalue\n        /* \"contracts/TokenSale.sol\":3595:3611  distributeTokens */\n      tag_132\n        /* \"contracts/TokenSale.sol\":3595:3634  distributeTokens(msg.sender, msg.value) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/TokenSale.sol\":3110:3642  function contributeToPublicSale() external payable onlyPublicSalePhase {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":306:324  ERC20 public token */\n    tag_101:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":4074:4341  function distributeTokensToAddress(address recipient, uint256 tokenAmount) external onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_239:\n        /* \"contracts/TokenSale.sol\":4201:4202  0 */\n      0x00\n        /* \"contracts/TokenSale.sol\":4187:4198  tokenAmount */\n      dup2\n        /* \"contracts/TokenSale.sol\":4187:4202  tokenAmount > 0 */\n      gt\n        /* \"contracts/TokenSale.sol\":4179:4227  require(tokenAmount > 0, \"Invalid token amount\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"contracts/TokenSale.sol\":4238:4243  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":4238:4252  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/TokenSale.sol\":4253:4262  recipient */\n      dup4\n        /* \"contracts/TokenSale.sol\":4264:4275  tokenAmount */\n      dup4\n        /* \"contracts/TokenSale.sol\":4238:4276  token.transfer(recipient, tokenAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap3\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      pop\n        /* \"contracts/TokenSale.sol\":4310:4319  recipient */\n      dup2\n        /* \"contracts/TokenSale.sol\":4292:4333  TokensDistributed(recipient, tokenAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x16b0da2ffcb90c6723317bd637d9aad7f04711f42bbe0ac0918ebe10f1f9001c\n        /* \"contracts/TokenSale.sol\":4321:4332  tokenAmount */\n      dup3\n        /* \"contracts/TokenSale.sol\":4292:4333  TokensDistributed(recipient, tokenAmount) */\n      mload(0x40)\n      tag_250\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/TokenSale.sol\":4074:4341  function distributeTokensToAddress(address recipient, uint256 tokenAmount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_252\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenSale.sol\":3650:4066  function distributeTokens(address recipient, uint256 etherAmount) internal {... */\n    tag_132:\n        /* \"contracts/TokenSale.sol\":3736:3755  uint256 tokenAmount */\n      0x00\n        /* \"contracts/TokenSale.sol\":3758:3769  etherAmount */\n      dup2\n        /* \"contracts/TokenSale.sol\":3736:3769  uint256 tokenAmount = etherAmount */\n      swap1\n      pop\n        /* \"contracts/TokenSale.sol\":3899:3900  0 */\n      0x00\n        /* \"contracts/TokenSale.sol\":3885:3896  tokenAmount */\n      dup2\n        /* \"contracts/TokenSale.sol\":3885:3900  tokenAmount > 0 */\n      gt\n        /* \"contracts/TokenSale.sol\":3877:3925  require(tokenAmount > 0, \"Invalid token amount\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap1\n      tag_243\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_255:\n        /* \"contracts/TokenSale.sol\":3938:3943  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenSale.sol\":3938:3952  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/TokenSale.sol\":3953:3962  recipient */\n      dup5\n        /* \"contracts/TokenSale.sol\":3964:3975  tokenAmount */\n      dup4\n        /* \"contracts/TokenSale.sol\":3938:3976  token.transfer(recipient, tokenAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap3\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_257:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_259\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_259:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_260\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_260:\n      pop\n        /* \"contracts/TokenSale.sol\":4008:4017  recipient */\n      dup3\n        /* \"contracts/TokenSale.sol\":3992:4058  TokensPurchased(recipient, tokenAmount, etherAmount, currentPhase) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x07bd967119635e499edb871f00e988945fc967531c4dfa79a630a18ed98cf1eb\n        /* \"contracts/TokenSale.sol\":4019:4030  tokenAmount */\n      dup3\n        /* \"contracts/TokenSale.sol\":4032:4043  etherAmount */\n      dup5\n        /* \"contracts/TokenSale.sol\":4045:4057  currentPhase */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenSale.sol\":3992:4058  TokensPurchased(recipient, tokenAmount, etherAmount, currentPhase) */\n      mload(0x40)\n      tag_261\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/TokenSale.sol\":3725:4066  {... */\n      pop\n        /* \"contracts/TokenSale.sol\":3650:4066  function distributeTokens(address recipient, uint256 etherAmount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_264\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_272:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:361   */\n    tag_273:\n        /* \"#utility.yul\":322:353   */\n      0x46616c6c6261636b2066756e6374696f6e206e6f7420616c6c6f776564000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:354   */\n      mstore\n        /* \"#utility.yul\":182:361   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":367:733   */\n    tag_274:\n        /* \"#utility.yul\":509:512   */\n      0x00\n        /* \"#utility.yul\":530:597   */\n      tag_333\n        /* \"#utility.yul\":594:596   */\n      0x1d\n        /* \"#utility.yul\":589:592   */\n      dup4\n        /* \"#utility.yul\":530:597   */\n      tag_272\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":523:597   */\n      swap2\n      pop\n        /* \"#utility.yul\":606:699   */\n      tag_334\n        /* \"#utility.yul\":695:698   */\n      dup3\n        /* \"#utility.yul\":606:699   */\n      tag_273\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":724:726   */\n      0x20\n        /* \"#utility.yul\":719:722   */\n      dup3\n        /* \"#utility.yul\":715:727   */\n      add\n        /* \"#utility.yul\":708:727   */\n      swap1\n      pop\n        /* \"#utility.yul\":367:733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":739:1158   */\n    tag_29:\n        /* \"#utility.yul\":905:909   */\n      0x00\n        /* \"#utility.yul\":943:945   */\n      0x20\n        /* \"#utility.yul\":932:941   */\n      dup3\n        /* \"#utility.yul\":928:946   */\n      add\n        /* \"#utility.yul\":920:946   */\n      swap1\n      pop\n        /* \"#utility.yul\":992:1001   */\n      dup2\n        /* \"#utility.yul\":986:990   */\n      dup2\n        /* \"#utility.yul\":982:1002   */\n      sub\n        /* \"#utility.yul\":978:979   */\n      0x00\n        /* \"#utility.yul\":967:976   */\n      dup4\n        /* \"#utility.yul\":963:980   */\n      add\n        /* \"#utility.yul\":956:1003   */\n      mstore\n        /* \"#utility.yul\":1020:1151   */\n      tag_336\n        /* \"#utility.yul\":1146:1150   */\n      dup2\n        /* \"#utility.yul\":1020:1151   */\n      tag_274\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1012:1151   */\n      swap1\n      pop\n        /* \"#utility.yul\":739:1158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1164:1344   */\n    tag_112:\n        /* \"#utility.yul\":1212:1289   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1209:1210   */\n      0x00\n        /* \"#utility.yul\":1202:1290   */\n      mstore\n        /* \"#utility.yul\":1309:1313   */\n      0x21\n        /* \"#utility.yul\":1306:1307   */\n      0x04\n        /* \"#utility.yul\":1299:1314   */\n      mstore\n        /* \"#utility.yul\":1333:1337   */\n      0x24\n        /* \"#utility.yul\":1330:1331   */\n      0x00\n        /* \"#utility.yul\":1323:1338   */\n      revert\n        /* \"#utility.yul\":1350:1469   */\n    tag_275:\n        /* \"#utility.yul\":1437:1438   */\n      0x04\n        /* \"#utility.yul\":1430:1435   */\n      dup2\n        /* \"#utility.yul\":1427:1439   */\n      lt\n        /* \"#utility.yul\":1417:1463   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":1443:1461   */\n      tag_340\n      tag_112\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1417:1463   */\n    tag_339:\n        /* \"#utility.yul\":1350:1469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1475:1614   */\n    tag_276:\n        /* \"#utility.yul\":1526:1533   */\n      0x00\n        /* \"#utility.yul\":1555:1560   */\n      dup2\n        /* \"#utility.yul\":1544:1560   */\n      swap1\n      pop\n        /* \"#utility.yul\":1561:1608   */\n      tag_342\n        /* \"#utility.yul\":1602:1607   */\n      dup3\n        /* \"#utility.yul\":1561:1608   */\n      tag_275\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":1475:1614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1620:1759   */\n    tag_277:\n        /* \"#utility.yul\":1682:1691   */\n      0x00\n        /* \"#utility.yul\":1715:1753   */\n      tag_344\n        /* \"#utility.yul\":1747:1752   */\n      dup3\n        /* \"#utility.yul\":1715:1753   */\n      tag_276\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":1702:1753   */\n      swap1\n      pop\n        /* \"#utility.yul\":1620:1759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1765:1920   */\n    tag_278:\n        /* \"#utility.yul\":1864:1913   */\n      tag_346\n        /* \"#utility.yul\":1907:1912   */\n      dup2\n        /* \"#utility.yul\":1864:1913   */\n      tag_277\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1859:1862   */\n      dup3\n        /* \"#utility.yul\":1852:1914   */\n      mstore\n        /* \"#utility.yul\":1765:1920   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1926:2172   */\n    tag_39:\n        /* \"#utility.yul\":2031:2035   */\n      0x00\n        /* \"#utility.yul\":2069:2071   */\n      0x20\n        /* \"#utility.yul\":2058:2067   */\n      dup3\n        /* \"#utility.yul\":2054:2072   */\n      add\n        /* \"#utility.yul\":2046:2072   */\n      swap1\n      pop\n        /* \"#utility.yul\":2082:2165   */\n      tag_348\n        /* \"#utility.yul\":2162:2163   */\n      0x00\n        /* \"#utility.yul\":2151:2160   */\n      dup4\n        /* \"#utility.yul\":2147:2164   */\n      add\n        /* \"#utility.yul\":2138:2144   */\n      dup5\n        /* \"#utility.yul\":2082:2165   */\n      tag_278\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":1926:2172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2178:2255   */\n    tag_279:\n        /* \"#utility.yul\":2215:2222   */\n      0x00\n        /* \"#utility.yul\":2244:2249   */\n      dup2\n        /* \"#utility.yul\":2233:2249   */\n      swap1\n      pop\n        /* \"#utility.yul\":2178:2255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2261:2379   */\n    tag_280:\n        /* \"#utility.yul\":2348:2372   */\n      tag_351\n        /* \"#utility.yul\":2366:2371   */\n      dup2\n        /* \"#utility.yul\":2348:2372   */\n      tag_279\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2343:2346   */\n      dup3\n        /* \"#utility.yul\":2336:2373   */\n      mstore\n        /* \"#utility.yul\":2261:2379   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2385:2607   */\n    tag_44:\n        /* \"#utility.yul\":2478:2482   */\n      0x00\n        /* \"#utility.yul\":2516:2518   */\n      0x20\n        /* \"#utility.yul\":2505:2514   */\n      dup3\n        /* \"#utility.yul\":2501:2519   */\n      add\n        /* \"#utility.yul\":2493:2519   */\n      swap1\n      pop\n        /* \"#utility.yul\":2529:2600   */\n      tag_353\n        /* \"#utility.yul\":2597:2598   */\n      0x00\n        /* \"#utility.yul\":2586:2595   */\n      dup4\n        /* \"#utility.yul\":2582:2599   */\n      add\n        /* \"#utility.yul\":2573:2579   */\n      dup5\n        /* \"#utility.yul\":2529:2600   */\n      tag_280\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2385:2607   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2694:2811   */\n    tag_282:\n        /* \"#utility.yul\":2803:2804   */\n      0x00\n        /* \"#utility.yul\":2800:2801   */\n      dup1\n        /* \"#utility.yul\":2793:2805   */\n      revert\n        /* \"#utility.yul\":2940:3066   */\n    tag_284:\n        /* \"#utility.yul\":2977:2984   */\n      0x00\n        /* \"#utility.yul\":3017:3059   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3010:3015   */\n      dup3\n        /* \"#utility.yul\":3006:3060   */\n      and\n        /* \"#utility.yul\":2995:3060   */\n      swap1\n      pop\n        /* \"#utility.yul\":2940:3066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3072:3168   */\n    tag_285:\n        /* \"#utility.yul\":3109:3116   */\n      0x00\n        /* \"#utility.yul\":3138:3162   */\n      tag_359\n        /* \"#utility.yul\":3156:3161   */\n      dup3\n        /* \"#utility.yul\":3138:3162   */\n      tag_284\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3127:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3072:3168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3174:3296   */\n    tag_286:\n        /* \"#utility.yul\":3247:3271   */\n      tag_361\n        /* \"#utility.yul\":3265:3270   */\n      dup2\n        /* \"#utility.yul\":3247:3271   */\n      tag_285\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3240:3245   */\n      dup2\n        /* \"#utility.yul\":3237:3272   */\n      eq\n        /* \"#utility.yul\":3227:3290   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":3286:3287   */\n      0x00\n        /* \"#utility.yul\":3283:3284   */\n      dup1\n        /* \"#utility.yul\":3276:3288   */\n      revert\n        /* \"#utility.yul\":3227:3290   */\n    tag_362:\n        /* \"#utility.yul\":3174:3296   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3302:3441   */\n    tag_287:\n        /* \"#utility.yul\":3348:3353   */\n      0x00\n        /* \"#utility.yul\":3386:3392   */\n      dup2\n        /* \"#utility.yul\":3373:3393   */\n      calldataload\n        /* \"#utility.yul\":3364:3393   */\n      swap1\n      pop\n        /* \"#utility.yul\":3402:3435   */\n      tag_364\n        /* \"#utility.yul\":3429:3434   */\n      dup2\n        /* \"#utility.yul\":3402:3435   */\n      tag_286\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3302:3441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3447:3776   */\n    tag_48:\n        /* \"#utility.yul\":3506:3512   */\n      0x00\n        /* \"#utility.yul\":3555:3557   */\n      0x20\n        /* \"#utility.yul\":3543:3552   */\n      dup3\n        /* \"#utility.yul\":3534:3541   */\n      dup5\n        /* \"#utility.yul\":3530:3553   */\n      sub\n        /* \"#utility.yul\":3526:3558   */\n      slt\n        /* \"#utility.yul\":3523:3642   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":3561:3640   */\n      tag_367\n      tag_282\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3523:3642   */\n    tag_366:\n        /* \"#utility.yul\":3681:3682   */\n      0x00\n        /* \"#utility.yul\":3706:3759   */\n      tag_368\n        /* \"#utility.yul\":3751:3758   */\n      dup5\n        /* \"#utility.yul\":3742:3748   */\n      dup3\n        /* \"#utility.yul\":3731:3740   */\n      dup6\n        /* \"#utility.yul\":3727:3749   */\n      add\n        /* \"#utility.yul\":3706:3759   */\n      tag_287\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3696:3759   */\n      swap2\n      pop\n        /* \"#utility.yul\":3652:3769   */\n      pop\n        /* \"#utility.yul\":3447:3776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3782:3900   */\n    tag_288:\n        /* \"#utility.yul\":3869:3893   */\n      tag_370\n        /* \"#utility.yul\":3887:3892   */\n      dup2\n        /* \"#utility.yul\":3869:3893   */\n      tag_285\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":3864:3867   */\n      dup3\n        /* \"#utility.yul\":3857:3894   */\n      mstore\n        /* \"#utility.yul\":3782:3900   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3906:4128   */\n    tag_79:\n        /* \"#utility.yul\":3999:4003   */\n      0x00\n        /* \"#utility.yul\":4037:4039   */\n      0x20\n        /* \"#utility.yul\":4026:4035   */\n      dup3\n        /* \"#utility.yul\":4022:4040   */\n      add\n        /* \"#utility.yul\":4014:4040   */\n      swap1\n      pop\n        /* \"#utility.yul\":4050:4121   */\n      tag_372\n        /* \"#utility.yul\":4118:4119   */\n      0x00\n        /* \"#utility.yul\":4107:4116   */\n      dup4\n        /* \"#utility.yul\":4103:4120   */\n      add\n        /* \"#utility.yul\":4094:4100   */\n      dup5\n        /* \"#utility.yul\":4050:4121   */\n      tag_288\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":3906:4128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4134:4194   */\n    tag_289:\n        /* \"#utility.yul\":4162:4165   */\n      0x00\n        /* \"#utility.yul\":4183:4188   */\n      dup2\n        /* \"#utility.yul\":4176:4188   */\n      swap1\n      pop\n        /* \"#utility.yul\":4134:4194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4200:4342   */\n    tag_290:\n        /* \"#utility.yul\":4250:4259   */\n      0x00\n        /* \"#utility.yul\":4283:4336   */\n      tag_375\n        /* \"#utility.yul\":4301:4335   */\n      tag_376\n        /* \"#utility.yul\":4310:4334   */\n      tag_377\n        /* \"#utility.yul\":4328:4333   */\n      dup5\n        /* \"#utility.yul\":4310:4334   */\n      tag_284\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4301:4335   */\n      tag_289\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4283:4336   */\n      tag_284\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4270:4336   */\n      swap1\n      pop\n        /* \"#utility.yul\":4200:4342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4348:4474   */\n    tag_291:\n        /* \"#utility.yul\":4398:4407   */\n      0x00\n        /* \"#utility.yul\":4431:4468   */\n      tag_379\n        /* \"#utility.yul\":4462:4467   */\n      dup3\n        /* \"#utility.yul\":4431:4468   */\n      tag_290\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4418:4468   */\n      swap1\n      pop\n        /* \"#utility.yul\":4348:4474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4480:4619   */\n    tag_292:\n        /* \"#utility.yul\":4543:4552   */\n      0x00\n        /* \"#utility.yul\":4576:4613   */\n      tag_381\n        /* \"#utility.yul\":4607:4612   */\n      dup3\n        /* \"#utility.yul\":4576:4613   */\n      tag_291\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":4563:4613   */\n      swap1\n      pop\n        /* \"#utility.yul\":4480:4619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4625:4782   */\n    tag_293:\n        /* \"#utility.yul\":4725:4775   */\n      tag_383\n        /* \"#utility.yul\":4769:4774   */\n      dup2\n        /* \"#utility.yul\":4725:4775   */\n      tag_292\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":4720:4723   */\n      dup3\n        /* \"#utility.yul\":4713:4776   */\n      mstore\n        /* \"#utility.yul\":4625:4782   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4788:5036   */\n    tag_103:\n        /* \"#utility.yul\":4894:4898   */\n      0x00\n        /* \"#utility.yul\":4932:4934   */\n      0x20\n        /* \"#utility.yul\":4921:4930   */\n      dup3\n        /* \"#utility.yul\":4917:4935   */\n      add\n        /* \"#utility.yul\":4909:4935   */\n      swap1\n      pop\n        /* \"#utility.yul\":4945:5029   */\n      tag_385\n        /* \"#utility.yul\":5026:5027   */\n      0x00\n        /* \"#utility.yul\":5015:5024   */\n      dup4\n        /* \"#utility.yul\":5011:5028   */\n      add\n        /* \"#utility.yul\":5002:5008   */\n      dup5\n        /* \"#utility.yul\":4945:5029   */\n      tag_293\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":4788:5036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5042:5164   */\n    tag_294:\n        /* \"#utility.yul\":5115:5139   */\n      tag_387\n        /* \"#utility.yul\":5133:5138   */\n      dup2\n        /* \"#utility.yul\":5115:5139   */\n      tag_279\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5108:5113   */\n      dup2\n        /* \"#utility.yul\":5105:5140   */\n      eq\n        /* \"#utility.yul\":5095:5158   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":5154:5155   */\n      0x00\n        /* \"#utility.yul\":5151:5152   */\n      dup1\n        /* \"#utility.yul\":5144:5156   */\n      revert\n        /* \"#utility.yul\":5095:5158   */\n    tag_388:\n        /* \"#utility.yul\":5042:5164   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5170:5309   */\n    tag_295:\n        /* \"#utility.yul\":5216:5221   */\n      0x00\n        /* \"#utility.yul\":5254:5260   */\n      dup2\n        /* \"#utility.yul\":5241:5261   */\n      calldataload\n        /* \"#utility.yul\":5232:5261   */\n      swap1\n      pop\n        /* \"#utility.yul\":5270:5303   */\n      tag_390\n        /* \"#utility.yul\":5297:5302   */\n      dup2\n        /* \"#utility.yul\":5270:5303   */\n      tag_294\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5170:5309   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5315:5789   */\n    tag_107:\n        /* \"#utility.yul\":5383:5389   */\n      0x00\n        /* \"#utility.yul\":5391:5397   */\n      dup1\n        /* \"#utility.yul\":5440:5442   */\n      0x40\n        /* \"#utility.yul\":5428:5437   */\n      dup4\n        /* \"#utility.yul\":5419:5426   */\n      dup6\n        /* \"#utility.yul\":5415:5438   */\n      sub\n        /* \"#utility.yul\":5411:5443   */\n      slt\n        /* \"#utility.yul\":5408:5527   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":5446:5525   */\n      tag_393\n      tag_282\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5408:5527   */\n    tag_392:\n        /* \"#utility.yul\":5566:5567   */\n      0x00\n        /* \"#utility.yul\":5591:5644   */\n      tag_394\n        /* \"#utility.yul\":5636:5643   */\n      dup6\n        /* \"#utility.yul\":5627:5633   */\n      dup3\n        /* \"#utility.yul\":5616:5625   */\n      dup7\n        /* \"#utility.yul\":5612:5634   */\n      add\n        /* \"#utility.yul\":5591:5644   */\n      tag_287\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":5581:5644   */\n      swap3\n      pop\n        /* \"#utility.yul\":5537:5654   */\n      pop\n        /* \"#utility.yul\":5693:5695   */\n      0x20\n        /* \"#utility.yul\":5719:5772   */\n      tag_395\n        /* \"#utility.yul\":5764:5771   */\n      dup6\n        /* \"#utility.yul\":5755:5761   */\n      dup3\n        /* \"#utility.yul\":5744:5753   */\n      dup7\n        /* \"#utility.yul\":5740:5762   */\n      add\n        /* \"#utility.yul\":5719:5772   */\n      tag_295\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":5709:5772   */\n      swap2\n      pop\n        /* \"#utility.yul\":5664:5782   */\n      pop\n        /* \"#utility.yul\":5315:5789   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5795:5965   */\n    tag_296:\n        /* \"#utility.yul\":5935:5957   */\n      0x4e6f7420696e2070726573616c65207068617365000000000000000000000000\n        /* \"#utility.yul\":5931:5932   */\n      0x00\n        /* \"#utility.yul\":5923:5929   */\n      dup3\n        /* \"#utility.yul\":5919:5933   */\n      add\n        /* \"#utility.yul\":5912:5958   */\n      mstore\n        /* \"#utility.yul\":5795:5965   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5971:6337   */\n    tag_297:\n        /* \"#utility.yul\":6113:6116   */\n      0x00\n        /* \"#utility.yul\":6134:6201   */\n      tag_398\n        /* \"#utility.yul\":6198:6200   */\n      0x14\n        /* \"#utility.yul\":6193:6196   */\n      dup4\n        /* \"#utility.yul\":6134:6201   */\n      tag_272\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6127:6201   */\n      swap2\n      pop\n        /* \"#utility.yul\":6210:6303   */\n      tag_399\n        /* \"#utility.yul\":6299:6302   */\n      dup3\n        /* \"#utility.yul\":6210:6303   */\n      tag_296\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":6328:6330   */\n      0x20\n        /* \"#utility.yul\":6323:6326   */\n      dup3\n        /* \"#utility.yul\":6319:6331   */\n      add\n        /* \"#utility.yul\":6312:6331   */\n      swap1\n      pop\n        /* \"#utility.yul\":5971:6337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6343:6762   */\n    tag_117:\n        /* \"#utility.yul\":6509:6513   */\n      0x00\n        /* \"#utility.yul\":6547:6549   */\n      0x20\n        /* \"#utility.yul\":6536:6545   */\n      dup3\n        /* \"#utility.yul\":6532:6550   */\n      add\n        /* \"#utility.yul\":6524:6550   */\n      swap1\n      pop\n        /* \"#utility.yul\":6596:6605   */\n      dup2\n        /* \"#utility.yul\":6590:6594   */\n      dup2\n        /* \"#utility.yul\":6586:6606   */\n      sub\n        /* \"#utility.yul\":6582:6583   */\n      0x00\n        /* \"#utility.yul\":6571:6580   */\n      dup4\n        /* \"#utility.yul\":6567:6584   */\n      add\n        /* \"#utility.yul\":6560:6607   */\n      mstore\n        /* \"#utility.yul\":6624:6755   */\n      tag_401\n        /* \"#utility.yul\":6750:6754   */\n      dup2\n        /* \"#utility.yul\":6624:6755   */\n      tag_297\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":6616:6755   */\n      swap1\n      pop\n        /* \"#utility.yul\":6343:6762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6768:6989   */\n    tag_298:\n        /* \"#utility.yul\":6908:6942   */\n      0x42656c6f772070726573616c65206d696e696d756d20636f6e74726962757469\n        /* \"#utility.yul\":6904:6905   */\n      0x00\n        /* \"#utility.yul\":6896:6902   */\n      dup3\n        /* \"#utility.yul\":6892:6906   */\n      add\n        /* \"#utility.yul\":6885:6943   */\n      mstore\n        /* \"#utility.yul\":6977:6981   */\n      0x6f6e000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6972:6974   */\n      0x20\n        /* \"#utility.yul\":6964:6970   */\n      dup3\n        /* \"#utility.yul\":6960:6975   */\n      add\n        /* \"#utility.yul\":6953:6982   */\n      mstore\n        /* \"#utility.yul\":6768:6989   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6995:7361   */\n    tag_299:\n        /* \"#utility.yul\":7137:7140   */\n      0x00\n        /* \"#utility.yul\":7158:7225   */\n      tag_404\n        /* \"#utility.yul\":7222:7224   */\n      0x22\n        /* \"#utility.yul\":7217:7220   */\n      dup4\n        /* \"#utility.yul\":7158:7225   */\n      tag_272\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7151:7225   */\n      swap2\n      pop\n        /* \"#utility.yul\":7234:7327   */\n      tag_405\n        /* \"#utility.yul\":7323:7326   */\n      dup3\n        /* \"#utility.yul\":7234:7327   */\n      tag_298\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7352:7354   */\n      0x40\n        /* \"#utility.yul\":7347:7350   */\n      dup3\n        /* \"#utility.yul\":7343:7355   */\n      add\n        /* \"#utility.yul\":7336:7355   */\n      swap1\n      pop\n        /* \"#utility.yul\":6995:7361   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7367:7786   */\n    tag_121:\n        /* \"#utility.yul\":7533:7537   */\n      0x00\n        /* \"#utility.yul\":7571:7573   */\n      0x20\n        /* \"#utility.yul\":7560:7569   */\n      dup3\n        /* \"#utility.yul\":7556:7574   */\n      add\n        /* \"#utility.yul\":7548:7574   */\n      swap1\n      pop\n        /* \"#utility.yul\":7620:7629   */\n      dup2\n        /* \"#utility.yul\":7614:7618   */\n      dup2\n        /* \"#utility.yul\":7610:7630   */\n      sub\n        /* \"#utility.yul\":7606:7607   */\n      0x00\n        /* \"#utility.yul\":7595:7604   */\n      dup4\n        /* \"#utility.yul\":7591:7608   */\n      add\n        /* \"#utility.yul\":7584:7631   */\n      mstore\n        /* \"#utility.yul\":7648:7779   */\n      tag_407\n        /* \"#utility.yul\":7774:7778   */\n      dup2\n        /* \"#utility.yul\":7648:7779   */\n      tag_299\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7640:7779   */\n      swap1\n      pop\n        /* \"#utility.yul\":7367:7786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7792:8015   */\n    tag_300:\n        /* \"#utility.yul\":7932:7966   */\n      0x457863656564732070726573616c65206d6178696d756d20636f6e7472696275\n        /* \"#utility.yul\":7928:7929   */\n      0x00\n        /* \"#utility.yul\":7920:7926   */\n      dup3\n        /* \"#utility.yul\":7916:7930   */\n      add\n        /* \"#utility.yul\":7909:7967   */\n      mstore\n        /* \"#utility.yul\":8001:8007   */\n      0x74696f6e00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7996:7998   */\n      0x20\n        /* \"#utility.yul\":7988:7994   */\n      dup3\n        /* \"#utility.yul\":7984:7999   */\n      add\n        /* \"#utility.yul\":7977:8008   */\n      mstore\n        /* \"#utility.yul\":7792:8015   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8021:8387   */\n    tag_301:\n        /* \"#utility.yul\":8163:8166   */\n      0x00\n        /* \"#utility.yul\":8184:8251   */\n      tag_410\n        /* \"#utility.yul\":8248:8250   */\n      0x24\n        /* \"#utility.yul\":8243:8246   */\n      dup4\n        /* \"#utility.yul\":8184:8251   */\n      tag_272\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":8177:8251   */\n      swap2\n      pop\n        /* \"#utility.yul\":8260:8353   */\n      tag_411\n        /* \"#utility.yul\":8349:8352   */\n      dup3\n        /* \"#utility.yul\":8260:8353   */\n      tag_300\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8378:8380   */\n      0x40\n        /* \"#utility.yul\":8373:8376   */\n      dup3\n        /* \"#utility.yul\":8369:8381   */\n      add\n        /* \"#utility.yul\":8362:8381   */\n      swap1\n      pop\n        /* \"#utility.yul\":8021:8387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8393:8812   */\n    tag_124:\n        /* \"#utility.yul\":8559:8563   */\n      0x00\n        /* \"#utility.yul\":8597:8599   */\n      0x20\n        /* \"#utility.yul\":8586:8595   */\n      dup3\n        /* \"#utility.yul\":8582:8600   */\n      add\n        /* \"#utility.yul\":8574:8600   */\n      swap1\n      pop\n        /* \"#utility.yul\":8646:8655   */\n      dup2\n        /* \"#utility.yul\":8640:8644   */\n      dup2\n        /* \"#utility.yul\":8636:8656   */\n      sub\n        /* \"#utility.yul\":8632:8633   */\n      0x00\n        /* \"#utility.yul\":8621:8630   */\n      dup4\n        /* \"#utility.yul\":8617:8634   */\n      add\n        /* \"#utility.yul\":8610:8657   */\n      mstore\n        /* \"#utility.yul\":8674:8805   */\n      tag_413\n        /* \"#utility.yul\":8800:8804   */\n      dup2\n        /* \"#utility.yul\":8674:8805   */\n      tag_301\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":8666:8805   */\n      swap1\n      pop\n        /* \"#utility.yul\":8393:8812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8818:8987   */\n    tag_302:\n        /* \"#utility.yul\":8958:8979   */\n      0x50726573616c6520636170207265616368656400000000000000000000000000\n        /* \"#utility.yul\":8954:8955   */\n      0x00\n        /* \"#utility.yul\":8946:8952   */\n      dup3\n        /* \"#utility.yul\":8942:8956   */\n      add\n        /* \"#utility.yul\":8935:8980   */\n      mstore\n        /* \"#utility.yul\":8818:8987   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8993:9359   */\n    tag_303:\n        /* \"#utility.yul\":9135:9138   */\n      0x00\n        /* \"#utility.yul\":9156:9223   */\n      tag_416\n        /* \"#utility.yul\":9220:9222   */\n      0x13\n        /* \"#utility.yul\":9215:9218   */\n      dup4\n        /* \"#utility.yul\":9156:9223   */\n      tag_272\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":9149:9223   */\n      swap2\n      pop\n        /* \"#utility.yul\":9232:9325   */\n      tag_417\n        /* \"#utility.yul\":9321:9324   */\n      dup3\n        /* \"#utility.yul\":9232:9325   */\n      tag_302\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":9350:9352   */\n      0x20\n        /* \"#utility.yul\":9345:9348   */\n      dup3\n        /* \"#utility.yul\":9341:9353   */\n      add\n        /* \"#utility.yul\":9334:9353   */\n      swap1\n      pop\n        /* \"#utility.yul\":8993:9359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9365:9784   */\n    tag_129:\n        /* \"#utility.yul\":9531:9535   */\n      0x00\n        /* \"#utility.yul\":9569:9571   */\n      0x20\n        /* \"#utility.yul\":9558:9567   */\n      dup3\n        /* \"#utility.yul\":9554:9572   */\n      add\n        /* \"#utility.yul\":9546:9572   */\n      swap1\n      pop\n        /* \"#utility.yul\":9618:9627   */\n      dup2\n        /* \"#utility.yul\":9612:9616   */\n      dup2\n        /* \"#utility.yul\":9608:9628   */\n      sub\n        /* \"#utility.yul\":9604:9605   */\n      0x00\n        /* \"#utility.yul\":9593:9602   */\n      dup4\n        /* \"#utility.yul\":9589:9606   */\n      add\n        /* \"#utility.yul\":9582:9629   */\n      mstore\n        /* \"#utility.yul\":9646:9777   */\n      tag_419\n        /* \"#utility.yul\":9772:9776   */\n      dup2\n        /* \"#utility.yul\":9646:9777   */\n      tag_303\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":9638:9777   */\n      swap1\n      pop\n        /* \"#utility.yul\":9365:9784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9790:9956   */\n    tag_304:\n        /* \"#utility.yul\":9930:9948   */\n      0x53616c652069732066696e697368656400000000000000000000000000000000\n        /* \"#utility.yul\":9926:9927   */\n      0x00\n        /* \"#utility.yul\":9918:9924   */\n      dup3\n        /* \"#utility.yul\":9914:9928   */\n      add\n        /* \"#utility.yul\":9907:9949   */\n      mstore\n        /* \"#utility.yul\":9790:9956   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9962:10328   */\n    tag_305:\n        /* \"#utility.yul\":10104:10107   */\n      0x00\n        /* \"#utility.yul\":10125:10192   */\n      tag_422\n        /* \"#utility.yul\":10189:10191   */\n      0x10\n        /* \"#utility.yul\":10184:10187   */\n      dup4\n        /* \"#utility.yul\":10125:10192   */\n      tag_272\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":10118:10192   */\n      swap2\n      pop\n        /* \"#utility.yul\":10201:10294   */\n      tag_423\n        /* \"#utility.yul\":10290:10293   */\n      dup3\n        /* \"#utility.yul\":10201:10294   */\n      tag_304\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":10319:10321   */\n      0x20\n        /* \"#utility.yul\":10314:10317   */\n      dup3\n        /* \"#utility.yul\":10310:10322   */\n      add\n        /* \"#utility.yul\":10303:10322   */\n      swap1\n      pop\n        /* \"#utility.yul\":9962:10328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10334:10753   */\n    tag_143:\n        /* \"#utility.yul\":10500:10504   */\n      0x00\n        /* \"#utility.yul\":10538:10540   */\n      0x20\n        /* \"#utility.yul\":10527:10536   */\n      dup3\n        /* \"#utility.yul\":10523:10541   */\n      add\n        /* \"#utility.yul\":10515:10541   */\n      swap1\n      pop\n        /* \"#utility.yul\":10587:10596   */\n      dup2\n        /* \"#utility.yul\":10581:10585   */\n      dup2\n        /* \"#utility.yul\":10577:10597   */\n      sub\n        /* \"#utility.yul\":10573:10574   */\n      0x00\n        /* \"#utility.yul\":10562:10571   */\n      dup4\n        /* \"#utility.yul\":10558:10575   */\n      add\n        /* \"#utility.yul\":10551:10598   */\n      mstore\n        /* \"#utility.yul\":10615:10746   */\n      tag_425\n        /* \"#utility.yul\":10741:10745   */\n      dup2\n        /* \"#utility.yul\":10615:10746   */\n      tag_305\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":10607:10746   */\n      swap1\n      pop\n        /* \"#utility.yul\":10334:10753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10759:10979   */\n    tag_306:\n        /* \"#utility.yul\":10899:10933   */\n      0x4e6f2070726573616c6520636f6e747269627574696f6e20746f20726566756e\n        /* \"#utility.yul\":10895:10896   */\n      0x00\n        /* \"#utility.yul\":10887:10893   */\n      dup3\n        /* \"#utility.yul\":10883:10897   */\n      add\n        /* \"#utility.yul\":10876:10934   */\n      mstore\n        /* \"#utility.yul\":10968:10971   */\n      0x6400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10963:10965   */\n      0x20\n        /* \"#utility.yul\":10955:10961   */\n      dup3\n        /* \"#utility.yul\":10951:10966   */\n      add\n        /* \"#utility.yul\":10944:10972   */\n      mstore\n        /* \"#utility.yul\":10759:10979   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10985:11351   */\n    tag_307:\n        /* \"#utility.yul\":11127:11130   */\n      0x00\n        /* \"#utility.yul\":11148:11215   */\n      tag_428\n        /* \"#utility.yul\":11212:11214   */\n      0x21\n        /* \"#utility.yul\":11207:11210   */\n      dup4\n        /* \"#utility.yul\":11148:11215   */\n      tag_272\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":11141:11215   */\n      swap2\n      pop\n        /* \"#utility.yul\":11224:11317   */\n      tag_429\n        /* \"#utility.yul\":11313:11316   */\n      dup3\n        /* \"#utility.yul\":11224:11317   */\n      tag_306\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":11342:11344   */\n      0x40\n        /* \"#utility.yul\":11337:11340   */\n      dup3\n        /* \"#utility.yul\":11333:11345   */\n      add\n        /* \"#utility.yul\":11326:11345   */\n      swap1\n      pop\n        /* \"#utility.yul\":10985:11351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11357:11776   */\n    tag_180:\n        /* \"#utility.yul\":11523:11527   */\n      0x00\n        /* \"#utility.yul\":11561:11563   */\n      0x20\n        /* \"#utility.yul\":11550:11559   */\n      dup3\n        /* \"#utility.yul\":11546:11564   */\n      add\n        /* \"#utility.yul\":11538:11564   */\n      swap1\n      pop\n        /* \"#utility.yul\":11610:11619   */\n      dup2\n        /* \"#utility.yul\":11604:11608   */\n      dup2\n        /* \"#utility.yul\":11600:11620   */\n      sub\n        /* \"#utility.yul\":11596:11597   */\n      0x00\n        /* \"#utility.yul\":11585:11594   */\n      dup4\n        /* \"#utility.yul\":11581:11598   */\n      add\n        /* \"#utility.yul\":11574:11621   */\n      mstore\n        /* \"#utility.yul\":11638:11769   */\n      tag_431\n        /* \"#utility.yul\":11764:11768   */\n      dup2\n        /* \"#utility.yul\":11638:11769   */\n      tag_307\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":11630:11769   */\n      swap1\n      pop\n        /* \"#utility.yul\":11357:11776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11782:12006   */\n    tag_308:\n        /* \"#utility.yul\":11922:11956   */\n      0x4e6f207075626c69632073616c6520636f6e747269627574696f6e20746f2072\n        /* \"#utility.yul\":11918:11919   */\n      0x00\n        /* \"#utility.yul\":11910:11916   */\n      dup3\n        /* \"#utility.yul\":11906:11920   */\n      add\n        /* \"#utility.yul\":11899:11957   */\n      mstore\n        /* \"#utility.yul\":11991:11998   */\n      0x6566756e64000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11986:11988   */\n      0x20\n        /* \"#utility.yul\":11978:11984   */\n      dup3\n        /* \"#utility.yul\":11974:11989   */\n      add\n        /* \"#utility.yul\":11967:11999   */\n      mstore\n        /* \"#utility.yul\":11782:12006   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12012:12378   */\n    tag_309:\n        /* \"#utility.yul\":12154:12157   */\n      0x00\n        /* \"#utility.yul\":12175:12242   */\n      tag_434\n        /* \"#utility.yul\":12239:12241   */\n      0x25\n        /* \"#utility.yul\":12234:12237   */\n      dup4\n        /* \"#utility.yul\":12175:12242   */\n      tag_272\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":12168:12242   */\n      swap2\n      pop\n        /* \"#utility.yul\":12251:12344   */\n      tag_435\n        /* \"#utility.yul\":12340:12343   */\n      dup3\n        /* \"#utility.yul\":12251:12344   */\n      tag_308\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":12369:12371   */\n      0x40\n        /* \"#utility.yul\":12364:12367   */\n      dup3\n        /* \"#utility.yul\":12360:12372   */\n      add\n        /* \"#utility.yul\":12353:12372   */\n      swap1\n      pop\n        /* \"#utility.yul\":12012:12378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12384:12803   */\n    tag_189:\n        /* \"#utility.yul\":12550:12554   */\n      0x00\n        /* \"#utility.yul\":12588:12590   */\n      0x20\n        /* \"#utility.yul\":12577:12586   */\n      dup3\n        /* \"#utility.yul\":12573:12591   */\n      add\n        /* \"#utility.yul\":12565:12591   */\n      swap1\n      pop\n        /* \"#utility.yul\":12637:12646   */\n      dup2\n        /* \"#utility.yul\":12631:12635   */\n      dup2\n        /* \"#utility.yul\":12627:12647   */\n      sub\n        /* \"#utility.yul\":12623:12624   */\n      0x00\n        /* \"#utility.yul\":12612:12621   */\n      dup4\n        /* \"#utility.yul\":12608:12625   */\n      add\n        /* \"#utility.yul\":12601:12648   */\n      mstore\n        /* \"#utility.yul\":12665:12796   */\n      tag_437\n        /* \"#utility.yul\":12791:12795   */\n      dup2\n        /* \"#utility.yul\":12665:12796   */\n      tag_309\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":12657:12796   */\n      swap1\n      pop\n        /* \"#utility.yul\":12384:12803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12809:12956   */\n    tag_310:\n        /* \"#utility.yul\":12910:12921   */\n      0x00\n        /* \"#utility.yul\":12947:12950   */\n      dup2\n        /* \"#utility.yul\":12932:12950   */\n      swap1\n      pop\n        /* \"#utility.yul\":12809:12956   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12962:13076   */\n    tag_311:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13082:13480   */\n    tag_312:\n        /* \"#utility.yul\":13241:13244   */\n      0x00\n        /* \"#utility.yul\":13262:13345   */\n      tag_441\n        /* \"#utility.yul\":13343:13344   */\n      0x00\n        /* \"#utility.yul\":13338:13341   */\n      dup4\n        /* \"#utility.yul\":13262:13345   */\n      tag_310\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":13255:13345   */\n      swap2\n      pop\n        /* \"#utility.yul\":13354:13447   */\n      tag_442\n        /* \"#utility.yul\":13443:13446   */\n      dup3\n        /* \"#utility.yul\":13354:13447   */\n      tag_311\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13472:13473   */\n      0x00\n        /* \"#utility.yul\":13467:13470   */\n      dup3\n        /* \"#utility.yul\":13463:13474   */\n      add\n        /* \"#utility.yul\":13456:13474   */\n      swap1\n      pop\n        /* \"#utility.yul\":13082:13480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13486:13865   */\n    tag_191:\n        /* \"#utility.yul\":13670:13673   */\n      0x00\n        /* \"#utility.yul\":13692:13839   */\n      tag_444\n        /* \"#utility.yul\":13835:13838   */\n      dup3\n        /* \"#utility.yul\":13692:13839   */\n      tag_312\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13685:13839   */\n      swap2\n      pop\n        /* \"#utility.yul\":13856:13859   */\n      dup2\n        /* \"#utility.yul\":13849:13859   */\n      swap1\n      pop\n        /* \"#utility.yul\":13486:13865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13871:14034   */\n    tag_313:\n        /* \"#utility.yul\":14011:14026   */\n      0x526566756e64206661696c656400000000000000000000000000000000000000\n        /* \"#utility.yul\":14007:14008   */\n      0x00\n        /* \"#utility.yul\":13999:14005   */\n      dup3\n        /* \"#utility.yul\":13995:14009   */\n      add\n        /* \"#utility.yul\":13988:14027   */\n      mstore\n        /* \"#utility.yul\":13871:14034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14040:14406   */\n    tag_314:\n        /* \"#utility.yul\":14182:14185   */\n      0x00\n        /* \"#utility.yul\":14203:14270   */\n      tag_447\n        /* \"#utility.yul\":14267:14269   */\n      0x0d\n        /* \"#utility.yul\":14262:14265   */\n      dup4\n        /* \"#utility.yul\":14203:14270   */\n      tag_272\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":14196:14270   */\n      swap2\n      pop\n        /* \"#utility.yul\":14279:14372   */\n      tag_448\n        /* \"#utility.yul\":14368:14371   */\n      dup3\n        /* \"#utility.yul\":14279:14372   */\n      tag_313\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":14397:14399   */\n      0x20\n        /* \"#utility.yul\":14392:14395   */\n      dup3\n        /* \"#utility.yul\":14388:14400   */\n      add\n        /* \"#utility.yul\":14381:14400   */\n      swap1\n      pop\n        /* \"#utility.yul\":14040:14406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14412:14831   */\n    tag_197:\n        /* \"#utility.yul\":14578:14582   */\n      0x00\n        /* \"#utility.yul\":14616:14618   */\n      0x20\n        /* \"#utility.yul\":14605:14614   */\n      dup3\n        /* \"#utility.yul\":14601:14619   */\n      add\n        /* \"#utility.yul\":14593:14619   */\n      swap1\n      pop\n        /* \"#utility.yul\":14665:14674   */\n      dup2\n        /* \"#utility.yul\":14659:14663   */\n      dup2\n        /* \"#utility.yul\":14655:14675   */\n      sub\n        /* \"#utility.yul\":14651:14652   */\n      0x00\n        /* \"#utility.yul\":14640:14649   */\n      dup4\n        /* \"#utility.yul\":14636:14653   */\n      add\n        /* \"#utility.yul\":14629:14676   */\n      mstore\n        /* \"#utility.yul\":14693:14824   */\n      tag_450\n        /* \"#utility.yul\":14819:14823   */\n      dup2\n        /* \"#utility.yul\":14693:14824   */\n      tag_314\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":14685:14824   */\n      swap1\n      pop\n        /* \"#utility.yul\":14412:14831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14837:15011   */\n    tag_315:\n        /* \"#utility.yul\":14977:15003   */\n      0x4e6f7420696e207075626c69632073616c652070686173650000000000000000\n        /* \"#utility.yul\":14973:14974   */\n      0x00\n        /* \"#utility.yul\":14965:14971   */\n      dup3\n        /* \"#utility.yul\":14961:14975   */\n      add\n        /* \"#utility.yul\":14954:15004   */\n      mstore\n        /* \"#utility.yul\":14837:15011   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15017:15383   */\n    tag_316:\n        /* \"#utility.yul\":15159:15162   */\n      0x00\n        /* \"#utility.yul\":15180:15247   */\n      tag_453\n        /* \"#utility.yul\":15244:15246   */\n      0x18\n        /* \"#utility.yul\":15239:15242   */\n      dup4\n        /* \"#utility.yul\":15180:15247   */\n      tag_272\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":15173:15247   */\n      swap2\n      pop\n        /* \"#utility.yul\":15256:15349   */\n      tag_454\n        /* \"#utility.yul\":15345:15348   */\n      dup3\n        /* \"#utility.yul\":15256:15349   */\n      tag_315\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":15374:15376   */\n      0x20\n        /* \"#utility.yul\":15369:15372   */\n      dup3\n        /* \"#utility.yul\":15365:15377   */\n      add\n        /* \"#utility.yul\":15358:15377   */\n      swap1\n      pop\n        /* \"#utility.yul\":15017:15383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15389:15808   */\n    tag_208:\n        /* \"#utility.yul\":15555:15559   */\n      0x00\n        /* \"#utility.yul\":15593:15595   */\n      0x20\n        /* \"#utility.yul\":15582:15591   */\n      dup3\n        /* \"#utility.yul\":15578:15596   */\n      add\n        /* \"#utility.yul\":15570:15596   */\n      swap1\n      pop\n        /* \"#utility.yul\":15642:15651   */\n      dup2\n        /* \"#utility.yul\":15636:15640   */\n      dup2\n        /* \"#utility.yul\":15632:15652   */\n      sub\n        /* \"#utility.yul\":15628:15629   */\n      0x00\n        /* \"#utility.yul\":15617:15626   */\n      dup4\n        /* \"#utility.yul\":15613:15630   */\n      add\n        /* \"#utility.yul\":15606:15653   */\n      mstore\n        /* \"#utility.yul\":15670:15801   */\n      tag_456\n        /* \"#utility.yul\":15796:15800   */\n      dup2\n        /* \"#utility.yul\":15670:15801   */\n      tag_316\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":15662:15801   */\n      swap1\n      pop\n        /* \"#utility.yul\":15389:15808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15814:16039   */\n    tag_317:\n        /* \"#utility.yul\":15954:15988   */\n      0x42656c6f77207075626c69632073616c65206d696e696d756d20636f6e747269\n        /* \"#utility.yul\":15950:15951   */\n      0x00\n        /* \"#utility.yul\":15942:15948   */\n      dup3\n        /* \"#utility.yul\":15938:15952   */\n      add\n        /* \"#utility.yul\":15931:15989   */\n      mstore\n        /* \"#utility.yul\":16023:16031   */\n      0x627574696f6e0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16018:16020   */\n      0x20\n        /* \"#utility.yul\":16010:16016   */\n      dup3\n        /* \"#utility.yul\":16006:16021   */\n      add\n        /* \"#utility.yul\":15999:16032   */\n      mstore\n        /* \"#utility.yul\":15814:16039   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16045:16411   */\n    tag_318:\n        /* \"#utility.yul\":16187:16190   */\n      0x00\n        /* \"#utility.yul\":16208:16275   */\n      tag_459\n        /* \"#utility.yul\":16272:16274   */\n      0x26\n        /* \"#utility.yul\":16267:16270   */\n      dup4\n        /* \"#utility.yul\":16208:16275   */\n      tag_272\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":16201:16275   */\n      swap2\n      pop\n        /* \"#utility.yul\":16284:16377   */\n      tag_460\n        /* \"#utility.yul\":16373:16376   */\n      dup3\n        /* \"#utility.yul\":16284:16377   */\n      tag_317\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":16402:16404   */\n      0x40\n        /* \"#utility.yul\":16397:16400   */\n      dup3\n        /* \"#utility.yul\":16393:16405   */\n      add\n        /* \"#utility.yul\":16386:16405   */\n      swap1\n      pop\n        /* \"#utility.yul\":16045:16411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16417:16836   */\n    tag_222:\n        /* \"#utility.yul\":16583:16587   */\n      0x00\n        /* \"#utility.yul\":16621:16623   */\n      0x20\n        /* \"#utility.yul\":16610:16619   */\n      dup3\n        /* \"#utility.yul\":16606:16624   */\n      add\n        /* \"#utility.yul\":16598:16624   */\n      swap1\n      pop\n        /* \"#utility.yul\":16670:16679   */\n      dup2\n        /* \"#utility.yul\":16664:16668   */\n      dup2\n        /* \"#utility.yul\":16660:16680   */\n      sub\n        /* \"#utility.yul\":16656:16657   */\n      0x00\n        /* \"#utility.yul\":16645:16654   */\n      dup4\n        /* \"#utility.yul\":16641:16658   */\n      add\n        /* \"#utility.yul\":16634:16681   */\n      mstore\n        /* \"#utility.yul\":16698:16829   */\n      tag_462\n        /* \"#utility.yul\":16824:16828   */\n      dup2\n        /* \"#utility.yul\":16698:16829   */\n      tag_318\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":16690:16829   */\n      swap1\n      pop\n        /* \"#utility.yul\":16417:16836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16842:17069   */\n    tag_319:\n        /* \"#utility.yul\":16982:17016   */\n      0x45786365656473207075626c69632073616c65206d6178696d756d20636f6e74\n        /* \"#utility.yul\":16978:16979   */\n      0x00\n        /* \"#utility.yul\":16970:16976   */\n      dup3\n        /* \"#utility.yul\":16966:16980   */\n      add\n        /* \"#utility.yul\":16959:17017   */\n      mstore\n        /* \"#utility.yul\":17051:17061   */\n      0x7269627574696f6e000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17046:17048   */\n      0x20\n        /* \"#utility.yul\":17038:17044   */\n      dup3\n        /* \"#utility.yul\":17034:17049   */\n      add\n        /* \"#utility.yul\":17027:17062   */\n      mstore\n        /* \"#utility.yul\":16842:17069   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17075:17441   */\n    tag_320:\n        /* \"#utility.yul\":17217:17220   */\n      0x00\n        /* \"#utility.yul\":17238:17305   */\n      tag_465\n        /* \"#utility.yul\":17302:17304   */\n      0x28\n        /* \"#utility.yul\":17297:17300   */\n      dup4\n        /* \"#utility.yul\":17238:17305   */\n      tag_272\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":17231:17305   */\n      swap2\n      pop\n        /* \"#utility.yul\":17314:17407   */\n      tag_466\n        /* \"#utility.yul\":17403:17406   */\n      dup3\n        /* \"#utility.yul\":17314:17407   */\n      tag_319\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":17432:17434   */\n      0x40\n        /* \"#utility.yul\":17427:17430   */\n      dup3\n        /* \"#utility.yul\":17423:17435   */\n      add\n        /* \"#utility.yul\":17416:17435   */\n      swap1\n      pop\n        /* \"#utility.yul\":17075:17441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17447:17866   */\n    tag_225:\n        /* \"#utility.yul\":17613:17617   */\n      0x00\n        /* \"#utility.yul\":17651:17653   */\n      0x20\n        /* \"#utility.yul\":17640:17649   */\n      dup3\n        /* \"#utility.yul\":17636:17654   */\n      add\n        /* \"#utility.yul\":17628:17654   */\n      swap1\n      pop\n        /* \"#utility.yul\":17700:17709   */\n      dup2\n        /* \"#utility.yul\":17694:17698   */\n      dup2\n        /* \"#utility.yul\":17690:17710   */\n      sub\n        /* \"#utility.yul\":17686:17687   */\n      0x00\n        /* \"#utility.yul\":17675:17684   */\n      dup4\n        /* \"#utility.yul\":17671:17688   */\n      add\n        /* \"#utility.yul\":17664:17711   */\n      mstore\n        /* \"#utility.yul\":17728:17859   */\n      tag_468\n        /* \"#utility.yul\":17854:17858   */\n      dup2\n        /* \"#utility.yul\":17728:17859   */\n      tag_320\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":17720:17859   */\n      swap1\n      pop\n        /* \"#utility.yul\":17447:17866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17872:18045   */\n    tag_321:\n        /* \"#utility.yul\":18012:18037   */\n      0x5075626c69632073616c65206361702072656163686564000000000000000000\n        /* \"#utility.yul\":18008:18009   */\n      0x00\n        /* \"#utility.yul\":18000:18006   */\n      dup3\n        /* \"#utility.yul\":17996:18010   */\n      add\n        /* \"#utility.yul\":17989:18038   */\n      mstore\n        /* \"#utility.yul\":17872:18045   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18051:18417   */\n    tag_322:\n        /* \"#utility.yul\":18193:18196   */\n      0x00\n        /* \"#utility.yul\":18214:18281   */\n      tag_471\n        /* \"#utility.yul\":18278:18280   */\n      0x17\n        /* \"#utility.yul\":18273:18276   */\n      dup4\n        /* \"#utility.yul\":18214:18281   */\n      tag_272\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":18207:18281   */\n      swap2\n      pop\n        /* \"#utility.yul\":18290:18383   */\n      tag_472\n        /* \"#utility.yul\":18379:18382   */\n      dup3\n        /* \"#utility.yul\":18290:18383   */\n      tag_321\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":18408:18410   */\n      0x20\n        /* \"#utility.yul\":18403:18406   */\n      dup3\n        /* \"#utility.yul\":18399:18411   */\n      add\n        /* \"#utility.yul\":18392:18411   */\n      swap1\n      pop\n        /* \"#utility.yul\":18051:18417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18423:18842   */\n    tag_229:\n        /* \"#utility.yul\":18589:18593   */\n      0x00\n        /* \"#utility.yul\":18627:18629   */\n      0x20\n        /* \"#utility.yul\":18616:18625   */\n      dup3\n        /* \"#utility.yul\":18612:18630   */\n      add\n        /* \"#utility.yul\":18604:18630   */\n      swap1\n      pop\n        /* \"#utility.yul\":18676:18685   */\n      dup2\n        /* \"#utility.yul\":18670:18674   */\n      dup2\n        /* \"#utility.yul\":18666:18686   */\n      sub\n        /* \"#utility.yul\":18662:18663   */\n      0x00\n        /* \"#utility.yul\":18651:18660   */\n      dup4\n        /* \"#utility.yul\":18647:18664   */\n      add\n        /* \"#utility.yul\":18640:18687   */\n      mstore\n        /* \"#utility.yul\":18704:18835   */\n      tag_474\n        /* \"#utility.yul\":18830:18834   */\n      dup2\n        /* \"#utility.yul\":18704:18835   */\n      tag_322\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":18696:18835   */\n      swap1\n      pop\n        /* \"#utility.yul\":18423:18842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18848:19018   */\n    tag_323:\n        /* \"#utility.yul\":18988:19010   */\n      0x496e76616c696420746f6b656e20616d6f756e74000000000000000000000000\n        /* \"#utility.yul\":18984:18985   */\n      0x00\n        /* \"#utility.yul\":18976:18982   */\n      dup3\n        /* \"#utility.yul\":18972:18986   */\n      add\n        /* \"#utility.yul\":18965:19011   */\n      mstore\n        /* \"#utility.yul\":18848:19018   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19024:19390   */\n    tag_324:\n        /* \"#utility.yul\":19166:19169   */\n      0x00\n        /* \"#utility.yul\":19187:19254   */\n      tag_477\n        /* \"#utility.yul\":19251:19253   */\n      0x14\n        /* \"#utility.yul\":19246:19249   */\n      dup4\n        /* \"#utility.yul\":19187:19254   */\n      tag_272\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":19180:19254   */\n      swap2\n      pop\n        /* \"#utility.yul\":19263:19356   */\n      tag_478\n        /* \"#utility.yul\":19352:19355   */\n      dup3\n        /* \"#utility.yul\":19263:19356   */\n      tag_323\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":19381:19383   */\n      0x20\n        /* \"#utility.yul\":19376:19379   */\n      dup3\n        /* \"#utility.yul\":19372:19384   */\n      add\n        /* \"#utility.yul\":19365:19384   */\n      swap1\n      pop\n        /* \"#utility.yul\":19024:19390   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19396:19815   */\n    tag_243:\n        /* \"#utility.yul\":19562:19566   */\n      0x00\n        /* \"#utility.yul\":19600:19602   */\n      0x20\n        /* \"#utility.yul\":19589:19598   */\n      dup3\n        /* \"#utility.yul\":19585:19603   */\n      add\n        /* \"#utility.yul\":19577:19603   */\n      swap1\n      pop\n        /* \"#utility.yul\":19649:19658   */\n      dup2\n        /* \"#utility.yul\":19643:19647   */\n      dup2\n        /* \"#utility.yul\":19639:19659   */\n      sub\n        /* \"#utility.yul\":19635:19636   */\n      0x00\n        /* \"#utility.yul\":19624:19633   */\n      dup4\n        /* \"#utility.yul\":19620:19637   */\n      add\n        /* \"#utility.yul\":19613:19660   */\n      mstore\n        /* \"#utility.yul\":19677:19808   */\n      tag_480\n        /* \"#utility.yul\":19803:19807   */\n      dup2\n        /* \"#utility.yul\":19677:19808   */\n      tag_324\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":19669:19808   */\n      swap1\n      pop\n        /* \"#utility.yul\":19396:19815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19821:20153   */\n    tag_245:\n        /* \"#utility.yul\":19942:19946   */\n      0x00\n        /* \"#utility.yul\":19980:19982   */\n      0x40\n        /* \"#utility.yul\":19969:19978   */\n      dup3\n        /* \"#utility.yul\":19965:19983   */\n      add\n        /* \"#utility.yul\":19957:19983   */\n      swap1\n      pop\n        /* \"#utility.yul\":19993:20064   */\n      tag_482\n        /* \"#utility.yul\":20061:20062   */\n      0x00\n        /* \"#utility.yul\":20050:20059   */\n      dup4\n        /* \"#utility.yul\":20046:20063   */\n      add\n        /* \"#utility.yul\":20037:20043   */\n      dup6\n        /* \"#utility.yul\":19993:20064   */\n      tag_288\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":20074:20146   */\n      tag_483\n        /* \"#utility.yul\":20142:20144   */\n      0x20\n        /* \"#utility.yul\":20131:20140   */\n      dup4\n        /* \"#utility.yul\":20127:20145   */\n      add\n        /* \"#utility.yul\":20118:20124   */\n      dup5\n        /* \"#utility.yul\":20074:20146   */\n      tag_280\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":19821:20153   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20159:20249   */\n    tag_325:\n        /* \"#utility.yul\":20193:20200   */\n      0x00\n        /* \"#utility.yul\":20236:20241   */\n      dup2\n        /* \"#utility.yul\":20229:20242   */\n      iszero\n        /* \"#utility.yul\":20222:20243   */\n      iszero\n        /* \"#utility.yul\":20211:20243   */\n      swap1\n      pop\n        /* \"#utility.yul\":20159:20249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20255:20371   */\n    tag_326:\n        /* \"#utility.yul\":20325:20346   */\n      tag_486\n        /* \"#utility.yul\":20340:20345   */\n      dup2\n        /* \"#utility.yul\":20325:20346   */\n      tag_325\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":20318:20323   */\n      dup2\n        /* \"#utility.yul\":20315:20347   */\n      eq\n        /* \"#utility.yul\":20305:20365   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":20361:20362   */\n      0x00\n        /* \"#utility.yul\":20358:20359   */\n      dup1\n        /* \"#utility.yul\":20351:20363   */\n      revert\n        /* \"#utility.yul\":20305:20365   */\n    tag_487:\n        /* \"#utility.yul\":20255:20371   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20377:20514   */\n    tag_327:\n        /* \"#utility.yul\":20431:20436   */\n      0x00\n        /* \"#utility.yul\":20462:20468   */\n      dup2\n        /* \"#utility.yul\":20456:20469   */\n      mload\n        /* \"#utility.yul\":20447:20469   */\n      swap1\n      pop\n        /* \"#utility.yul\":20478:20508   */\n      tag_489\n        /* \"#utility.yul\":20502:20507   */\n      dup2\n        /* \"#utility.yul\":20478:20508   */\n      tag_326\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":20377:20514   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20520:20865   */\n    tag_249:\n        /* \"#utility.yul\":20587:20593   */\n      0x00\n        /* \"#utility.yul\":20636:20638   */\n      0x20\n        /* \"#utility.yul\":20624:20633   */\n      dup3\n        /* \"#utility.yul\":20615:20622   */\n      dup5\n        /* \"#utility.yul\":20611:20634   */\n      sub\n        /* \"#utility.yul\":20607:20639   */\n      slt\n        /* \"#utility.yul\":20604:20723   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":20642:20721   */\n      tag_492\n      tag_282\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":20604:20723   */\n    tag_491:\n        /* \"#utility.yul\":20762:20763   */\n      0x00\n        /* \"#utility.yul\":20787:20848   */\n      tag_493\n        /* \"#utility.yul\":20840:20847   */\n      dup5\n        /* \"#utility.yul\":20831:20837   */\n      dup3\n        /* \"#utility.yul\":20820:20829   */\n      dup6\n        /* \"#utility.yul\":20816:20838   */\n      add\n        /* \"#utility.yul\":20787:20848   */\n      tag_327\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":20777:20848   */\n      swap2\n      pop\n        /* \"#utility.yul\":20733:20858   */\n      pop\n        /* \"#utility.yul\":20520:20865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20871:21051   */\n    tag_328:\n        /* \"#utility.yul\":20919:20996   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20916:20917   */\n      0x00\n        /* \"#utility.yul\":20909:20997   */\n      mstore\n        /* \"#utility.yul\":21016:21020   */\n      0x11\n        /* \"#utility.yul\":21013:21014   */\n      0x04\n        /* \"#utility.yul\":21006:21021   */\n      mstore\n        /* \"#utility.yul\":21040:21044   */\n      0x24\n        /* \"#utility.yul\":21037:21038   */\n      0x00\n        /* \"#utility.yul\":21030:21045   */\n      revert\n        /* \"#utility.yul\":21057:21248   */\n    tag_253:\n        /* \"#utility.yul\":21097:21100   */\n      0x00\n        /* \"#utility.yul\":21116:21136   */\n      tag_496\n        /* \"#utility.yul\":21134:21135   */\n      dup3\n        /* \"#utility.yul\":21116:21136   */\n      tag_279\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":21111:21136   */\n      swap2\n      pop\n        /* \"#utility.yul\":21150:21170   */\n      tag_497\n        /* \"#utility.yul\":21168:21169   */\n      dup4\n        /* \"#utility.yul\":21150:21170   */\n      tag_279\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":21145:21170   */\n      swap3\n      pop\n        /* \"#utility.yul\":21193:21194   */\n      dup3\n        /* \"#utility.yul\":21190:21191   */\n      dup3\n        /* \"#utility.yul\":21186:21195   */\n      add\n        /* \"#utility.yul\":21179:21195   */\n      swap1\n      pop\n        /* \"#utility.yul\":21214:21217   */\n      dup1\n        /* \"#utility.yul\":21211:21212   */\n      dup3\n        /* \"#utility.yul\":21208:21218   */\n      gt\n        /* \"#utility.yul\":21205:21241   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":21221:21239   */\n      tag_499\n      tag_328\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":21205:21241   */\n    tag_498:\n        /* \"#utility.yul\":21057:21248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21254:21720   */\n    tag_262:\n        /* \"#utility.yul\":21415:21419   */\n      0x00\n        /* \"#utility.yul\":21453:21455   */\n      0x60\n        /* \"#utility.yul\":21442:21451   */\n      dup3\n        /* \"#utility.yul\":21438:21456   */\n      add\n        /* \"#utility.yul\":21430:21456   */\n      swap1\n      pop\n        /* \"#utility.yul\":21466:21537   */\n      tag_501\n        /* \"#utility.yul\":21534:21535   */\n      0x00\n        /* \"#utility.yul\":21523:21532   */\n      dup4\n        /* \"#utility.yul\":21519:21536   */\n      add\n        /* \"#utility.yul\":21510:21516   */\n      dup7\n        /* \"#utility.yul\":21466:21537   */\n      tag_280\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":21547:21619   */\n      tag_502\n        /* \"#utility.yul\":21615:21617   */\n      0x20\n        /* \"#utility.yul\":21604:21613   */\n      dup4\n        /* \"#utility.yul\":21600:21618   */\n      add\n        /* \"#utility.yul\":21591:21597   */\n      dup6\n        /* \"#utility.yul\":21547:21619   */\n      tag_280\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":21629:21713   */\n      tag_503\n        /* \"#utility.yul\":21709:21711   */\n      0x40\n        /* \"#utility.yul\":21698:21707   */\n      dup4\n        /* \"#utility.yul\":21694:21712   */\n      add\n        /* \"#utility.yul\":21685:21691   */\n      dup5\n        /* \"#utility.yul\":21629:21713   */\n      tag_278\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":21254:21720   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e4d03697f67ab737b582c2428bd78fec868096d54e8c64ca65fead28d72f25e064736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1402": {
									"entryPoint": null,
									"id": 1402,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 352,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ERC20_$799_fromMemory": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ERC20_$799t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ERC20_$799": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ERC20_$799": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3664:8",
										"nodeType": "YulBlock",
										"src": "0:3664:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "626:51:8",
													"nodeType": "YulBlock",
													"src": "626:51:8",
													"statements": [
														{
															"nativeSrc": "636:35:8",
															"nodeType": "YulAssignment",
															"src": "636:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "665:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "665:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "647:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "647:17:8"
																},
																"nativeSrc": "647:24:8",
																"nodeType": "YulFunctionCall",
																"src": "647:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "636:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "636:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ERC20_$799",
												"nativeSrc": "568:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "608:5:8",
														"nodeType": "YulTypedName",
														"src": "608:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "618:7:8",
														"nodeType": "YulTypedName",
														"src": "618:7:8",
														"type": ""
													}
												],
												"src": "568:109:8"
											},
											{
												"body": {
													"nativeSrc": "739:92:8",
													"nodeType": "YulBlock",
													"src": "739:92:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "809:16:8",
																"nodeType": "YulBlock",
																"src": "809:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "818:1:8",
																					"nodeType": "YulLiteral",
																					"src": "818:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:8",
																					"nodeType": "YulLiteral",
																					"src": "821:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "811:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "811:6:8"
																			},
																			"nativeSrc": "811:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "811:12:8"
																		},
																		"nativeSrc": "811:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "811:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "762:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "762:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "800:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "800:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ERC20_$799",
																					"nativeSrc": "769:30:8",
																					"nodeType": "YulIdentifier",
																					"src": "769:30:8"
																				},
																				"nativeSrc": "769:37:8",
																				"nodeType": "YulFunctionCall",
																				"src": "769:37:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "759:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "759:2:8"
																		},
																		"nativeSrc": "759:48:8",
																		"nodeType": "YulFunctionCall",
																		"src": "759:48:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "752:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:8"
																},
																"nativeSrc": "752:56:8",
																"nodeType": "YulFunctionCall",
																"src": "752:56:8"
															},
															"nativeSrc": "749:76:8",
															"nodeType": "YulIf",
															"src": "749:76:8"
														}
													]
												},
												"name": "validator_revert_t_contract$_ERC20_$799",
												"nativeSrc": "683:148:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "732:5:8",
														"nodeType": "YulTypedName",
														"src": "732:5:8",
														"type": ""
													}
												],
												"src": "683:148:8"
											},
											{
												"body": {
													"nativeSrc": "913:93:8",
													"nodeType": "YulBlock",
													"src": "913:93:8",
													"statements": [
														{
															"nativeSrc": "923:22:8",
															"nodeType": "YulAssignment",
															"src": "923:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "938:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "938:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "932:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "932:5:8"
																},
																"nativeSrc": "932:13:8",
																"nodeType": "YulFunctionCall",
																"src": "932:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "923:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "923:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "994:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "994:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ERC20_$799",
																	"nativeSrc": "954:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "954:39:8"
																},
																"nativeSrc": "954:46:8",
																"nodeType": "YulFunctionCall",
																"src": "954:46:8"
															},
															"nativeSrc": "954:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "954:46:8"
														}
													]
												},
												"name": "abi_decode_t_contract$_ERC20_$799_fromMemory",
												"nativeSrc": "837:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "891:6:8",
														"nodeType": "YulTypedName",
														"src": "891:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "899:3:8",
														"nodeType": "YulTypedName",
														"src": "899:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "907:5:8",
														"nodeType": "YulTypedName",
														"src": "907:5:8",
														"type": ""
													}
												],
												"src": "837:169:8"
											},
											{
												"body": {
													"nativeSrc": "1057:32:8",
													"nodeType": "YulBlock",
													"src": "1057:32:8",
													"statements": [
														{
															"nativeSrc": "1067:16:8",
															"nodeType": "YulAssignment",
															"src": "1067:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "1078:5:8",
																"nodeType": "YulIdentifier",
																"src": "1078:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1067:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1067:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1012:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:8",
														"nodeType": "YulTypedName",
														"src": "1039:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1049:7:8",
														"nodeType": "YulTypedName",
														"src": "1049:7:8",
														"type": ""
													}
												],
												"src": "1012:77:8"
											},
											{
												"body": {
													"nativeSrc": "1138:79:8",
													"nodeType": "YulBlock",
													"src": "1138:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1195:16:8",
																"nodeType": "YulBlock",
																"src": "1195:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1204:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1204:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1207:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1207:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1197:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1197:6:8"
																			},
																			"nativeSrc": "1197:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1197:12:8"
																		},
																		"nativeSrc": "1197:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1197:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1161:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1161:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1186:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1186:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1168:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1168:17:8"
																				},
																				"nativeSrc": "1168:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1168:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1158:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1158:2:8"
																		},
																		"nativeSrc": "1158:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1158:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1151:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:6:8"
																},
																"nativeSrc": "1151:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:43:8"
															},
															"nativeSrc": "1148:63:8",
															"nodeType": "YulIf",
															"src": "1148:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1095:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1131:5:8",
														"nodeType": "YulTypedName",
														"src": "1131:5:8",
														"type": ""
													}
												],
												"src": "1095:122:8"
											},
											{
												"body": {
													"nativeSrc": "1286:80:8",
													"nodeType": "YulBlock",
													"src": "1286:80:8",
													"statements": [
														{
															"nativeSrc": "1296:22:8",
															"nodeType": "YulAssignment",
															"src": "1296:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1311:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1311:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1305:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1305:5:8"
																},
																"nativeSrc": "1305:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1305:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1296:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1296:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1354:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1354:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1327:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1327:26:8"
																},
																"nativeSrc": "1327:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1327:33:8"
															},
															"nativeSrc": "1327:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1327:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1223:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1264:6:8",
														"nodeType": "YulTypedName",
														"src": "1264:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1272:3:8",
														"nodeType": "YulTypedName",
														"src": "1272:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1280:5:8",
														"nodeType": "YulTypedName",
														"src": "1280:5:8",
														"type": ""
													}
												],
												"src": "1223:143:8"
											},
											{
												"body": {
													"nativeSrc": "1415:79:8",
													"nodeType": "YulBlock",
													"src": "1415:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1472:16:8",
																"nodeType": "YulBlock",
																"src": "1472:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1481:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1481:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1484:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1484:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1474:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1474:6:8"
																			},
																			"nativeSrc": "1474:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1474:12:8"
																		},
																		"nativeSrc": "1474:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1474:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1438:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1438:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1463:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1463:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1445:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1445:17:8"
																				},
																				"nativeSrc": "1445:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1445:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1435:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1435:2:8"
																		},
																		"nativeSrc": "1435:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1435:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1428:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:8"
																},
																"nativeSrc": "1428:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1428:43:8"
															},
															"nativeSrc": "1425:63:8",
															"nodeType": "YulIf",
															"src": "1425:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1372:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1408:5:8",
														"nodeType": "YulTypedName",
														"src": "1408:5:8",
														"type": ""
													}
												],
												"src": "1372:122:8"
											},
											{
												"body": {
													"nativeSrc": "1563:80:8",
													"nodeType": "YulBlock",
													"src": "1563:80:8",
													"statements": [
														{
															"nativeSrc": "1573:22:8",
															"nodeType": "YulAssignment",
															"src": "1573:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1588:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1588:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1582:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1582:5:8"
																},
																"nativeSrc": "1582:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1582:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1573:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1573:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1631:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1631:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1604:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1604:26:8"
																},
																"nativeSrc": "1604:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1604:33:8"
															},
															"nativeSrc": "1604:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1604:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1500:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1541:6:8",
														"nodeType": "YulTypedName",
														"src": "1541:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1549:3:8",
														"nodeType": "YulTypedName",
														"src": "1549:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1557:5:8",
														"nodeType": "YulTypedName",
														"src": "1557:5:8",
														"type": ""
													}
												],
												"src": "1500:143:8"
											},
											{
												"body": {
													"nativeSrc": "1858:1265:8",
													"nodeType": "YulBlock",
													"src": "1858:1265:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1905:83:8",
																"nodeType": "YulBlock",
																"src": "1905:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1907:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1907:77:8"
																			},
																			"nativeSrc": "1907:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1907:79:8"
																		},
																		"nativeSrc": "1907:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1879:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1879:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1888:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1888:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1875:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1875:3:8"
																		},
																		"nativeSrc": "1875:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1875:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1900:3:8",
																		"nodeType": "YulLiteral",
																		"src": "1900:3:8",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1871:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1871:3:8"
																},
																"nativeSrc": "1871:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1871:33:8"
															},
															"nativeSrc": "1868:120:8",
															"nodeType": "YulIf",
															"src": "1868:120:8"
														},
														{
															"nativeSrc": "1998:141:8",
															"nodeType": "YulBlock",
															"src": "1998:141:8",
															"statements": [
																{
																	"nativeSrc": "2013:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2013:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2027:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2027:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2017:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2017:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2042:87:8",
																	"nodeType": "YulAssignment",
																	"src": "2042:87:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2101:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2101:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2112:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2112:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2097:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2097:3:8"
																				},
																				"nativeSrc": "2097:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2097:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2121:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2121:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ERC20_$799_fromMemory",
																			"nativeSrc": "2052:44:8",
																			"nodeType": "YulIdentifier",
																			"src": "2052:44:8"
																		},
																		"nativeSrc": "2052:77:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2052:77:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2042:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2042:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2149:129:8",
															"nodeType": "YulBlock",
															"src": "2149:129:8",
															"statements": [
																{
																	"nativeSrc": "2164:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2164:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2178:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2178:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2168:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2168:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2194:74:8",
																	"nodeType": "YulAssignment",
																	"src": "2194:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2240:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2240:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2251:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2251:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2236:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2236:3:8"
																				},
																				"nativeSrc": "2236:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2236:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2260:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2260:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2204:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "2204:31:8"
																		},
																		"nativeSrc": "2204:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2204:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2194:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2194:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2288:129:8",
															"nodeType": "YulBlock",
															"src": "2288:129:8",
															"statements": [
																{
																	"nativeSrc": "2303:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2303:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2317:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2317:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2307:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2307:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2333:74:8",
																	"nodeType": "YulAssignment",
																	"src": "2333:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2379:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2379:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2390:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2390:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2375:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2375:3:8"
																				},
																				"nativeSrc": "2375:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2375:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2399:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2399:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2343:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "2343:31:8"
																		},
																		"nativeSrc": "2343:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2343:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2333:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2333:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2427:129:8",
															"nodeType": "YulBlock",
															"src": "2427:129:8",
															"statements": [
																{
																	"nativeSrc": "2442:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2442:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2456:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2456:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2446:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2446:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2472:74:8",
																	"nodeType": "YulAssignment",
																	"src": "2472:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2518:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2518:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2529:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2529:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2514:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2514:3:8"
																				},
																				"nativeSrc": "2514:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2514:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2538:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2538:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2482:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "2482:31:8"
																		},
																		"nativeSrc": "2482:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2482:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2472:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2472:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2566:130:8",
															"nodeType": "YulBlock",
															"src": "2566:130:8",
															"statements": [
																{
																	"nativeSrc": "2581:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2581:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2595:3:8",
																		"nodeType": "YulLiteral",
																		"src": "2595:3:8",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2585:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2585:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2612:74:8",
																	"nodeType": "YulAssignment",
																	"src": "2612:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2658:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2658:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2669:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2669:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2654:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2654:3:8"
																				},
																				"nativeSrc": "2654:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2654:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2678:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2678:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2622:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "2622:31:8"
																		},
																		"nativeSrc": "2622:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2622:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2612:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2612:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2706:130:8",
															"nodeType": "YulBlock",
															"src": "2706:130:8",
															"statements": [
																{
																	"nativeSrc": "2721:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2721:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2735:3:8",
																		"nodeType": "YulLiteral",
																		"src": "2735:3:8",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2725:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2725:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2752:74:8",
																	"nodeType": "YulAssignment",
																	"src": "2752:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2798:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2798:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2809:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2809:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2794:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2794:3:8"
																				},
																				"nativeSrc": "2794:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2794:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2818:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2818:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2762:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "2762:31:8"
																		},
																		"nativeSrc": "2762:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2762:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "2752:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2752:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2846:130:8",
															"nodeType": "YulBlock",
															"src": "2846:130:8",
															"statements": [
																{
																	"nativeSrc": "2861:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2861:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2875:3:8",
																		"nodeType": "YulLiteral",
																		"src": "2875:3:8",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2865:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2865:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2892:74:8",
																	"nodeType": "YulAssignment",
																	"src": "2892:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2938:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2938:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2949:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2949:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2934:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2934:3:8"
																				},
																				"nativeSrc": "2934:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2934:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2958:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2958:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2902:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "2902:31:8"
																		},
																		"nativeSrc": "2902:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2902:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "2892:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2892:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2986:130:8",
															"nodeType": "YulBlock",
															"src": "2986:130:8",
															"statements": [
																{
																	"nativeSrc": "3001:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3001:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3015:3:8",
																		"nodeType": "YulLiteral",
																		"src": "3015:3:8",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3005:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3005:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3032:74:8",
																	"nodeType": "YulAssignment",
																	"src": "3032:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3078:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3078:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3089:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3089:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3074:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3074:3:8"
																				},
																				"nativeSrc": "3074:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3074:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3098:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3098:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3042:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "3042:31:8"
																		},
																		"nativeSrc": "3042:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3042:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "3032:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3032:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC20_$799t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_address_fromMemory",
												"nativeSrc": "1649:1474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1772:9:8",
														"nodeType": "YulTypedName",
														"src": "1772:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1783:7:8",
														"nodeType": "YulTypedName",
														"src": "1783:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1795:6:8",
														"nodeType": "YulTypedName",
														"src": "1795:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1803:6:8",
														"nodeType": "YulTypedName",
														"src": "1803:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1811:6:8",
														"nodeType": "YulTypedName",
														"src": "1811:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1819:6:8",
														"nodeType": "YulTypedName",
														"src": "1819:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1827:6:8",
														"nodeType": "YulTypedName",
														"src": "1827:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1835:6:8",
														"nodeType": "YulTypedName",
														"src": "1835:6:8",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "1843:6:8",
														"nodeType": "YulTypedName",
														"src": "1843:6:8",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "1851:6:8",
														"nodeType": "YulTypedName",
														"src": "1851:6:8",
														"type": ""
													}
												],
												"src": "1649:1474:8"
											},
											{
												"body": {
													"nativeSrc": "3194:53:8",
													"nodeType": "YulBlock",
													"src": "3194:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3211:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3211:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3234:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3234:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3216:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3216:17:8"
																		},
																		"nativeSrc": "3216:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3216:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3204:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:8"
																},
																"nativeSrc": "3204:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3204:37:8"
															},
															"nativeSrc": "3204:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3204:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3129:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3182:5:8",
														"nodeType": "YulTypedName",
														"src": "3182:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3189:3:8",
														"nodeType": "YulTypedName",
														"src": "3189:3:8",
														"type": ""
													}
												],
												"src": "3129:118:8"
											},
											{
												"body": {
													"nativeSrc": "3351:124:8",
													"nodeType": "YulBlock",
													"src": "3351:124:8",
													"statements": [
														{
															"nativeSrc": "3361:26:8",
															"nodeType": "YulAssignment",
															"src": "3361:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3373:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3373:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3384:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3384:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3369:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3369:3:8"
																},
																"nativeSrc": "3369:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3369:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3361:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3361:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3441:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3441:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3454:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3454:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3465:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3465:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3450:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3450:3:8"
																		},
																		"nativeSrc": "3450:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3450:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3397:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3397:43:8"
																},
																"nativeSrc": "3397:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3397:71:8"
															},
															"nativeSrc": "3397:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3397:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3253:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3323:9:8",
														"nodeType": "YulTypedName",
														"src": "3323:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3335:6:8",
														"nodeType": "YulTypedName",
														"src": "3335:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3346:4:8",
														"nodeType": "YulTypedName",
														"src": "3346:4:8",
														"type": ""
													}
												],
												"src": "3253:222:8"
											},
											{
												"body": {
													"nativeSrc": "3509:152:8",
													"nodeType": "YulBlock",
													"src": "3509:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3526:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3526:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3529:77:8",
																		"nodeType": "YulLiteral",
																		"src": "3529:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3519:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3519:6:8"
																},
																"nativeSrc": "3519:88:8",
																"nodeType": "YulFunctionCall",
																"src": "3519:88:8"
															},
															"nativeSrc": "3519:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "3519:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3623:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3623:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3626:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3626:4:8",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3616:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3616:6:8"
																},
																"nativeSrc": "3616:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3616:15:8"
															},
															"nativeSrc": "3616:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3616:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3647:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3647:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3650:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3650:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3640:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:8"
																},
																"nativeSrc": "3640:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3640:15:8"
															},
															"nativeSrc": "3640:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3640:15:8"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "3481:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "3481:180:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20_$799(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC20_$799(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$799(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC20_$799_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$799(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$799t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$799_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200215038038062002150833981810160405281019062000036919062000300565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a19190620003d5565b60405180910390fd5b620000bb816200016060201b60201c565b508760015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660028190555085600381905550846004819055508360058190555082600681905550816007819055505f600a5f6101000a81548160ff021916908360038111156200014d576200014c620003f0565b5b021790555050505050505050506200041d565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002508262000225565b9050919050565b5f620002638262000244565b9050919050565b620002758162000257565b811462000280575f80fd5b50565b5f8151905062000293816200026a565b92915050565b5f819050919050565b620002ad8162000299565b8114620002b8575f80fd5b50565b5f81519050620002cb81620002a2565b92915050565b620002dc8162000244565b8114620002e7575f80fd5b50565b5f81519050620002fa81620002d1565b92915050565b5f805f805f805f80610100898b03121562000320576200031f62000221565b5b5f6200032f8b828c0162000283565b9850506020620003428b828c01620002bb565b9750506040620003558b828c01620002bb565b9650506060620003688b828c01620002bb565b95505060806200037b8b828c01620002bb565b94505060a06200038e8b828c01620002bb565b93505060c0620003a18b828c01620002bb565b92505060e0620003b48b828c01620002ea565b9150509295985092959890939650565b620003cf8162000244565b82525050565b5f602082019050620003ea5f830184620003c4565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b611d25806200042b5f395ff3fe608060405260043610610122575f3560e01c806387e449c31161009f578063c7d17fd111610063578063c7d17fd114610390578063e59c9510146103a6578063f2fde38b146103b0578063fc0c546a146103d8578063fefae0161461040257610162565b806387e449c3146102e65780638da5cb5b14610310578063a43be57b1461033a578063b5545a3c14610350578063c48498471461036657610162565b8063477f1eba116100e6578063477f1eba1461021657806363d5502f1461025257806364826b7a1461027c5780637146e4fa146102a6578063715018a6146102d057610162565b80630269d3b41461016657806304c98b2b14610170578063055ad42e146101865780632a517ab2146101b057806335f74869146101da57610162565b36610162576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610159906112fe565b60405180910390fd5b5f80fd5b61016e61042a565b005b34801561017b575f80fd5b5061018461061d565b005b348015610191575f80fd5b5061019a6106c5565b6040516101a7919061138f565b60405180910390f35b3480156101bb575f80fd5b506101c46106d7565b6040516101d191906113c0565b60405180910390f35b3480156101e5575f80fd5b5061020060048036038101906101fb9190611437565b6106dd565b60405161020d91906113c0565b60405180910390f35b348015610221575f80fd5b5061023c60048036038101906102379190611437565b6106f2565b60405161024991906113c0565b60405180910390f35b34801561025d575f80fd5b50610266610707565b60405161027391906113c0565b60405180910390f35b348015610287575f80fd5b5061029061070d565b60405161029d91906113c0565b60405180910390f35b3480156102b1575f80fd5b506102ba610713565b6040516102c791906113c0565b60405180910390f35b3480156102db575f80fd5b506102e4610719565b005b3480156102f1575f80fd5b506102fa61072c565b60405161030791906113c0565b60405180910390f35b34801561031b575f80fd5b50610324610732565b6040516103319190611471565b60405180910390f35b348015610345575f80fd5b5061034e610759565b005b34801561035b575f80fd5b50610364610802565b005b348015610371575f80fd5b5061037a610b74565b60405161038791906113c0565b60405180910390f35b34801561039b575f80fd5b506103a4610b7a565b005b6103ae610c23565b005b3480156103bb575f80fd5b506103d660048036038101906103d19190611437565b610e16565b005b3480156103e3575f80fd5b506103ec610e9a565b6040516103f991906114e5565b60405180910390f35b34801561040d575f80fd5b5061042860048036038101906104239190611528565b610ebf565b005b6001600381111561043e5761043d61131c565b5b600a5f9054906101000a900460ff16600381111561045f5761045e61131c565b5b1461049f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610496906115b0565b60405180910390fd5b6004543410156104e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db9061163e565b60405180910390fd5b600554341115610529576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610520906116cc565b60405180910390fd5b60025461053f3447610ff890919063ffffffff16565b1115610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790611734565b60405180910390fd5b6105d03460085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610ff890919063ffffffff16565b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061061b333461100d565b565b610625611155565b6003808111156106385761063761131c565b5b600a5f9054906101000a900460ff1660038111156106595761065861131c565b5b03610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106909061179c565b60405180910390fd5b6001600a5f6101000a81548160ff021916908360038111156106be576106bd61131c565b5b0217905550565b600a5f9054906101000a900460ff1681565b60065481565b6009602052805f5260405f205f915090505481565b6008602052805f5260405f205f915090505481565b60025481565b60035481565b60075481565b610721611155565b61072a5f6111dc565b565b60055481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610761611155565b600160038111156107755761077461131c565b5b600a5f9054906101000a900460ff1660038111156107965761079561131c565b5b146107d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cd906115b0565b60405180910390fd5b6002600a5f6101000a81548160ff021916908360038111156107fb576107fa61131c565b5b0217905550565b6003808111156108155761081461131c565b5b600a5f9054906101000a900460ff1660038111156108365761083561131c565b5b03610876576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086d9061179c565b60405180910390fd5b5f6001600381111561088b5761088a61131c565b5b600a5f9054906101000a900460ff1660038111156108ac576108ab61131c565b5b0361097a5760085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a9061182a565b60405180910390fd5b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610a7a565b6002600381111561098e5761098d61131c565b5b600a5f9054906101000a900460ff1660038111156109af576109ae61131c565b5b03610a795760095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2d906118b8565b60405180910390fd5b5f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5b5f3373ffffffffffffffffffffffffffffffffffffffff1682604051610a9f90611903565b5f6040518083038185875af1925050503d805f8114610ad9576040519150601f19603f3d011682016040523d82523d5f602084013e610ade565b606091505b5050905080610b22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1990611961565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f358fe4192934d3bf28ae181feda1f4bd08ca67f5e2fad55582cce5eb67304ae983604051610b6891906113c0565b60405180910390a25050565b60045481565b610b82611155565b60026003811115610b9657610b9561131c565b5b600a5f9054906101000a900460ff166003811115610bb757610bb661131c565b5b14610bf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bee906119c9565b60405180910390fd5b6003600a5f6101000a81548160ff02191690836003811115610c1c57610c1b61131c565b5b0217905550565b60026003811115610c3757610c3661131c565b5b600a5f9054906101000a900460ff166003811115610c5857610c5761131c565b5b14610c98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8f906119c9565b60405180910390fd5b600654341015610cdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd490611a57565b60405180910390fd5b600754341115610d22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1990611ae5565b60405180910390fd5b600354610d383447610ff890919063ffffffff16565b1115610d79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7090611b4d565b60405180910390fd5b610dc93460095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610ff890919063ffffffff16565b60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610e14333461100d565b565b610e1e611155565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e8e575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e859190611471565b60405180910390fd5b610e97816111dc565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ec7611155565b5f8111610f09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0090611bb5565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610f65929190611bd3565b6020604051808303815f875af1158015610f81573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fa59190611c2f565b508173ffffffffffffffffffffffffffffffffffffffff167f16b0da2ffcb90c6723317bd637d9aad7f04711f42bbe0ac0918ebe10f1f9001c82604051610fec91906113c0565b60405180910390a25050565b5f81836110059190611c87565b905092915050565b5f8190505f8111611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104a90611bb5565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b81526004016110af929190611bd3565b6020604051808303815f875af11580156110cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110ef9190611c2f565b508273ffffffffffffffffffffffffffffffffffffffff167f07bd967119635e499edb871f00e988945fc967531c4dfa79a630a18ed98cf1eb8284600a5f9054906101000a900460ff1660405161114893929190611cba565b60405180910390a2505050565b61115d61129d565b73ffffffffffffffffffffffffffffffffffffffff1661117b610732565b73ffffffffffffffffffffffffffffffffffffffff16146111da5761119e61129d565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111d19190611471565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f82825260208201905092915050565b7f46616c6c6261636b2066756e6374696f6e206e6f7420616c6c6f7765640000005f82015250565b5f6112e8601d836112a4565b91506112f3826112b4565b602082019050919050565b5f6020820190508181035f830152611315816112dc565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6004811061135a5761135961131c565b5b50565b5f81905061136a82611349565b919050565b5f6113798261135d565b9050919050565b6113898161136f565b82525050565b5f6020820190506113a25f830184611380565b92915050565b5f819050919050565b6113ba816113a8565b82525050565b5f6020820190506113d35f8301846113b1565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611406826113dd565b9050919050565b611416816113fc565b8114611420575f80fd5b50565b5f813590506114318161140d565b92915050565b5f6020828403121561144c5761144b6113d9565b5b5f61145984828501611423565b91505092915050565b61146b816113fc565b82525050565b5f6020820190506114845f830184611462565b92915050565b5f819050919050565b5f6114ad6114a86114a3846113dd565b61148a565b6113dd565b9050919050565b5f6114be82611493565b9050919050565b5f6114cf826114b4565b9050919050565b6114df816114c5565b82525050565b5f6020820190506114f85f8301846114d6565b92915050565b611507816113a8565b8114611511575f80fd5b50565b5f81359050611522816114fe565b92915050565b5f806040838503121561153e5761153d6113d9565b5b5f61154b85828601611423565b925050602061155c85828601611514565b9150509250929050565b7f4e6f7420696e2070726573616c652070686173650000000000000000000000005f82015250565b5f61159a6014836112a4565b91506115a582611566565b602082019050919050565b5f6020820190508181035f8301526115c78161158e565b9050919050565b7f42656c6f772070726573616c65206d696e696d756d20636f6e747269627574695f8201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b5f6116286022836112a4565b9150611633826115ce565b604082019050919050565b5f6020820190508181035f8301526116558161161c565b9050919050565b7f457863656564732070726573616c65206d6178696d756d20636f6e74726962755f8201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b5f6116b66024836112a4565b91506116c18261165c565b604082019050919050565b5f6020820190508181035f8301526116e3816116aa565b9050919050565b7f50726573616c65206361702072656163686564000000000000000000000000005f82015250565b5f61171e6013836112a4565b9150611729826116ea565b602082019050919050565b5f6020820190508181035f83015261174b81611712565b9050919050565b7f53616c652069732066696e6973686564000000000000000000000000000000005f82015250565b5f6117866010836112a4565b915061179182611752565b602082019050919050565b5f6020820190508181035f8301526117b38161177a565b9050919050565b7f4e6f2070726573616c6520636f6e747269627574696f6e20746f20726566756e5f8201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b5f6118146021836112a4565b915061181f826117ba565b604082019050919050565b5f6020820190508181035f83015261184181611808565b9050919050565b7f4e6f207075626c69632073616c6520636f6e747269627574696f6e20746f20725f8201527f6566756e64000000000000000000000000000000000000000000000000000000602082015250565b5f6118a26025836112a4565b91506118ad82611848565b604082019050919050565b5f6020820190508181035f8301526118cf81611896565b9050919050565b5f81905092915050565b50565b5f6118ee5f836118d6565b91506118f9826118e0565b5f82019050919050565b5f61190d826118e3565b9150819050919050565b7f526566756e64206661696c6564000000000000000000000000000000000000005f82015250565b5f61194b600d836112a4565b915061195682611917565b602082019050919050565b5f6020820190508181035f8301526119788161193f565b9050919050565b7f4e6f7420696e207075626c69632073616c6520706861736500000000000000005f82015250565b5f6119b36018836112a4565b91506119be8261197f565b602082019050919050565b5f6020820190508181035f8301526119e0816119a7565b9050919050565b7f42656c6f77207075626c69632073616c65206d696e696d756d20636f6e7472695f8201527f627574696f6e0000000000000000000000000000000000000000000000000000602082015250565b5f611a416026836112a4565b9150611a4c826119e7565b604082019050919050565b5f6020820190508181035f830152611a6e81611a35565b9050919050565b7f45786365656473207075626c69632073616c65206d6178696d756d20636f6e745f8201527f7269627574696f6e000000000000000000000000000000000000000000000000602082015250565b5f611acf6028836112a4565b9150611ada82611a75565b604082019050919050565b5f6020820190508181035f830152611afc81611ac3565b9050919050565b7f5075626c69632073616c652063617020726561636865640000000000000000005f82015250565b5f611b376017836112a4565b9150611b4282611b03565b602082019050919050565b5f6020820190508181035f830152611b6481611b2b565b9050919050565b7f496e76616c696420746f6b656e20616d6f756e740000000000000000000000005f82015250565b5f611b9f6014836112a4565b9150611baa82611b6b565b602082019050919050565b5f6020820190508181035f830152611bcc81611b93565b9050919050565b5f604082019050611be65f830185611462565b611bf360208301846113b1565b9392505050565b5f8115159050919050565b611c0e81611bfa565b8114611c18575f80fd5b50565b5f81519050611c2981611c05565b92915050565b5f60208284031215611c4457611c436113d9565b5b5f611c5184828501611c1b565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c91826113a8565b9150611c9c836113a8565b9250828201905080821115611cb457611cb3611c5a565b5b92915050565b5f606082019050611ccd5f8301866113b1565b611cda60208301856113b1565b611ce76040830184611380565b94935050505056fea2646970667358221220e4d03697f67ab737b582c2428bd78fec868096d54e8c64ca65fead28d72f25e064736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2150 CODESIZE SUB DUP1 PUSH3 0x2150 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x300 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0x160 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP8 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x14D JUMPI PUSH3 0x14C PUSH3 0x3F0 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP PUSH3 0x41D JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x250 DUP3 PUSH3 0x225 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x263 DUP3 PUSH3 0x244 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x275 DUP2 PUSH3 0x257 JUMP JUMPDEST DUP2 EQ PUSH3 0x280 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x293 DUP2 PUSH3 0x26A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2AD DUP2 PUSH3 0x299 JUMP JUMPDEST DUP2 EQ PUSH3 0x2B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2CB DUP2 PUSH3 0x2A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2DC DUP2 PUSH3 0x244 JUMP JUMPDEST DUP2 EQ PUSH3 0x2E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2FA DUP2 PUSH3 0x2D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH3 0x320 JUMPI PUSH3 0x31F PUSH3 0x221 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x32F DUP12 DUP3 DUP13 ADD PUSH3 0x283 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH3 0x342 DUP12 DUP3 DUP13 ADD PUSH3 0x2BB JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH3 0x355 DUP12 DUP3 DUP13 ADD PUSH3 0x2BB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH3 0x368 DUP12 DUP3 DUP13 ADD PUSH3 0x2BB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH3 0x37B DUP12 DUP3 DUP13 ADD PUSH3 0x2BB JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH3 0x38E DUP12 DUP3 DUP13 ADD PUSH3 0x2BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH3 0x3A1 DUP12 DUP3 DUP13 ADD PUSH3 0x2BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH3 0x3B4 DUP12 DUP3 DUP13 ADD PUSH3 0x2EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH3 0x3CF DUP2 PUSH3 0x244 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x3EA PUSH0 DUP4 ADD DUP5 PUSH3 0x3C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D25 DUP1 PUSH3 0x42B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x122 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87E449C3 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xC7D17FD1 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xC7D17FD1 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xE59C9510 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xFEFAE016 EQ PUSH2 0x402 JUMPI PUSH2 0x162 JUMP JUMPDEST DUP1 PUSH4 0x87E449C3 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xA43BE57B EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xB5545A3C EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xC4849847 EQ PUSH2 0x366 JUMPI PUSH2 0x162 JUMP JUMPDEST DUP1 PUSH4 0x477F1EBA GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x477F1EBA EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x63D5502F EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x64826B7A EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x7146E4FA EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D0 JUMPI PUSH2 0x162 JUMP JUMPDEST DUP1 PUSH4 0x269D3B4 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x4C98B2B EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x55AD42E EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x2A517AB2 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x35F74869 EQ PUSH2 0x1DA JUMPI PUSH2 0x162 JUMP JUMPDEST CALLDATASIZE PUSH2 0x162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159 SWAP1 PUSH2 0x12FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16E PUSH2 0x42A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x61D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x138F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x290 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH2 0x719 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FA PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH2 0x759 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH2 0x802 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A4 PUSH2 0xB7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH2 0xC23 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xE16 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EC PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x428 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0xEBF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x43E JUMPI PUSH2 0x43D PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x45F JUMPI PUSH2 0x45E PUSH2 0x131C JUMP JUMPDEST JUMPDEST EQ PUSH2 0x49F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x496 SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD CALLVALUE LT ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DB SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD CALLVALUE GT ISZERO PUSH2 0x529 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x520 SWAP1 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x53F CALLVALUE SELFBALANCE PUSH2 0xFF8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x577 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D0 CALLVALUE PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xFF8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x61B CALLER CALLVALUE PUSH2 0x100D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x625 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x638 JUMPI PUSH2 0x637 PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x659 JUMPI PUSH2 0x658 PUSH2 0x131C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x699 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x690 SWAP1 PUSH2 0x179C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6BE JUMPI PUSH2 0x6BD PUSH2 0x131C JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x721 PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x72A PUSH0 PUSH2 0x11DC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x761 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x775 JUMPI PUSH2 0x774 PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x796 JUMPI PUSH2 0x795 PUSH2 0x131C JUMP JUMPDEST JUMPDEST EQ PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CD SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7FB JUMPI PUSH2 0x7FA PUSH2 0x131C JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x815 JUMPI PUSH2 0x814 PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x836 JUMPI PUSH2 0x835 PUSH2 0x131C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86D SWAP1 PUSH2 0x179C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x88B JUMPI PUSH2 0x88A PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8AC JUMPI PUSH2 0x8AB PUSH2 0x131C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x97A JUMPI PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x182A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x98E JUMPI PUSH2 0x98D PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9AF JUMPI PUSH2 0x9AE PUSH2 0x131C JUMP JUMPDEST JUMPDEST SUB PUSH2 0xA79 JUMPI PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xA36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xA9F SWAP1 PUSH2 0x1903 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xADE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB19 SWAP1 PUSH2 0x1961 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x358FE4192934D3BF28AE181FEDA1F4BD08CA67F5E2FAD55582CCE5EB67304AE9 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB68 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB82 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB96 JUMPI PUSH2 0xB95 PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBB7 JUMPI PUSH2 0xBB6 PUSH2 0x131C JUMP JUMPDEST JUMPDEST EQ PUSH2 0xBF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEE SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC1C JUMPI PUSH2 0xC1B PUSH2 0x131C JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC37 JUMPI PUSH2 0xC36 PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC58 JUMPI PUSH2 0xC57 PUSH2 0x131C JUMP JUMPDEST JUMPDEST EQ PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8F SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD CALLVALUE LT ISZERO PUSH2 0xCDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP1 PUSH2 0x1A57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD CALLVALUE GT ISZERO PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD19 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xD38 CALLVALUE SELFBALANCE PUSH2 0xFF8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0xD79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD70 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC9 CALLVALUE PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xFF8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE14 CALLER CALLVALUE PUSH2 0x100D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE1E PUSH2 0x1155 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE85 SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE97 DUP2 PUSH2 0x11DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xEC7 PUSH2 0x1155 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xF09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF00 SWAP1 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF65 SWAP3 SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF81 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA5 SWAP2 SWAP1 PUSH2 0x1C2F JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x16B0DA2FFCB90C6723317BD637D9AAD7F04711F42BBE0AC0918EBE10F1F9001C DUP3 PUSH1 0x40 MLOAD PUSH2 0xFEC SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1005 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP1 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AF SWAP3 SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10CB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10EF SWAP2 SWAP1 PUSH2 0x1C2F JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7BD967119635E499EDB871F00E988945FC967531C4DFA79A630A18ED98CF1EB DUP3 DUP5 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1148 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x115D PUSH2 0x129D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x117B PUSH2 0x732 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11DA JUMPI PUSH2 0x119E PUSH2 0x129D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D1 SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x46616C6C6261636B2066756E6374696F6E206E6F7420616C6C6F776564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12E8 PUSH1 0x1D DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F3 DUP3 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1315 DUP2 PUSH2 0x12DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x135A JUMPI PUSH2 0x1359 PUSH2 0x131C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x136A DUP3 PUSH2 0x1349 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1379 DUP3 PUSH2 0x135D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1389 DUP2 PUSH2 0x136F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1380 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BA DUP2 PUSH2 0x13A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x13B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1406 DUP3 PUSH2 0x13DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1416 DUP2 PUSH2 0x13FC JUMP JUMPDEST DUP2 EQ PUSH2 0x1420 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1431 DUP2 PUSH2 0x140D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x144C JUMPI PUSH2 0x144B PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1459 DUP5 DUP3 DUP6 ADD PUSH2 0x1423 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x146B DUP2 PUSH2 0x13FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1484 PUSH0 DUP4 ADD DUP5 PUSH2 0x1462 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14AD PUSH2 0x14A8 PUSH2 0x14A3 DUP5 PUSH2 0x13DD JUMP JUMPDEST PUSH2 0x148A JUMP JUMPDEST PUSH2 0x13DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14BE DUP3 PUSH2 0x1493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14CF DUP3 PUSH2 0x14B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DF DUP2 PUSH2 0x14C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F8 PUSH0 DUP4 ADD DUP5 PUSH2 0x14D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1507 DUP2 PUSH2 0x13A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1511 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1522 DUP2 PUSH2 0x14FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x153E JUMPI PUSH2 0x153D PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x154B DUP6 DUP3 DUP7 ADD PUSH2 0x1423 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x155C DUP6 DUP3 DUP7 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420696E2070726573616C65207068617365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x159A PUSH1 0x14 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x15A5 DUP3 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15C7 DUP2 PUSH2 0x158E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42656C6F772070726573616C65206D696E696D756D20636F6E74726962757469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1628 PUSH1 0x22 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1633 DUP3 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1655 DUP2 PUSH2 0x161C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x457863656564732070726573616C65206D6178696D756D20636F6E7472696275 PUSH0 DUP3 ADD MSTORE PUSH32 0x74696F6E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16B6 PUSH1 0x24 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x16C1 DUP3 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16E3 DUP2 PUSH2 0x16AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C6520636170207265616368656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x171E PUSH1 0x13 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1729 DUP3 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x174B DUP2 PUSH2 0x1712 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616C652069732066696E697368656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1786 PUSH1 0x10 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1791 DUP3 PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17B3 DUP2 PUSH2 0x177A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2070726573616C6520636F6E747269627574696F6E20746F20726566756E PUSH0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1814 PUSH1 0x21 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x181F DUP3 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1841 DUP2 PUSH2 0x1808 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207075626C69632073616C6520636F6E747269627574696F6E20746F2072 PUSH0 DUP3 ADD MSTORE PUSH32 0x6566756E64000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18A2 PUSH1 0x25 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x18AD DUP3 PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18CF DUP2 PUSH2 0x1896 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x18EE PUSH0 DUP4 PUSH2 0x18D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F9 DUP3 PUSH2 0x18E0 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x190D DUP3 PUSH2 0x18E3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526566756E64206661696C656400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x194B PUSH1 0xD DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1956 DUP3 PUSH2 0x1917 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1978 DUP2 PUSH2 0x193F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420696E207075626C69632073616C652070686173650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19B3 PUSH1 0x18 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BE DUP3 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19E0 DUP2 PUSH2 0x19A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42656C6F77207075626C69632073616C65206D696E696D756D20636F6E747269 PUSH0 DUP3 ADD MSTORE PUSH32 0x627574696F6E0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A41 PUSH1 0x26 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4C DUP3 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A6E DUP2 PUSH2 0x1A35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473207075626C69632073616C65206D6178696D756D20636F6E74 PUSH0 DUP3 ADD MSTORE PUSH32 0x7269627574696F6E000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACF PUSH1 0x28 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADA DUP3 PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AFC DUP2 PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5075626C69632073616C65206361702072656163686564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B37 PUSH1 0x17 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B42 DUP3 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B64 DUP2 PUSH2 0x1B2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616D6F756E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9F PUSH1 0x14 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAA DUP3 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BCC DUP2 PUSH2 0x1B93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BE6 PUSH0 DUP4 ADD DUP6 PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x1BF3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13B1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C0E DUP2 PUSH2 0x1BFA JUMP JUMPDEST DUP2 EQ PUSH2 0x1C18 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C29 DUP2 PUSH2 0x1C05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C44 JUMPI PUSH2 0x1C43 PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C51 DUP5 DUP3 DUP6 ADD PUSH2 0x1C1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C91 DUP3 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9C DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CB4 JUMPI PUSH2 0x1CB3 PUSH2 0x1C5A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CCD PUSH0 DUP4 ADD DUP7 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x1CDA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x1CE7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1380 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xD0 CALLDATASIZE SWAP8 0xF6 PUSH27 0xB737B582C2428BD78FEC868096D54E8C64CA65FEAD28D72F25E064 PUSH20 0x6F6C634300081700330000000000000000000000 ",
							"sourceMap": "232:5025:7:-:0;;;1498:735;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1816:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1849:6:7::1;1841:5;;:14;;;;;;;;;;;;;;;;;;1879:11;1866:10;:24;;;;1917:14;1901:13;:30;;;;1967:23;1942:22;:48;;;;2026:23;2001:22;:48;;;;2088:26;2060:25;:54;;;;2153:26;2125:25;:54;;;;2205:20;2190:12;;:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1498:735:::0;;;;;;;;232:5025;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:169::-;907:5;938:6;932:13;923:22;;954:46;994:5;954:46;:::i;:::-;837:169;;;;:::o;1012:77::-;1049:7;1078:5;1067:16;;1012:77;;;:::o;1095:122::-;1168:24;1186:5;1168:24;:::i;:::-;1161:5;1158:35;1148:63;;1207:1;1204;1197:12;1148:63;1095:122;:::o;1223:143::-;1280:5;1311:6;1305:13;1296:22;;1327:33;1354:5;1327:33;:::i;:::-;1223:143;;;;:::o;1372:122::-;1445:24;1463:5;1445:24;:::i;:::-;1438:5;1435:35;1425:63;;1484:1;1481;1474:12;1425:63;1372:122;:::o;1500:143::-;1557:5;1588:6;1582:13;1573:22;;1604:33;1631:5;1604:33;:::i;:::-;1500:143;;;;:::o;1649:1474::-;1795:6;1803;1811;1819;1827;1835;1843;1851;1900:3;1888:9;1879:7;1875:23;1871:33;1868:120;;;1907:79;;:::i;:::-;1868:120;2027:1;2052:77;2121:7;2112:6;2101:9;2097:22;2052:77;:::i;:::-;2042:87;;1998:141;2178:2;2204:64;2260:7;2251:6;2240:9;2236:22;2204:64;:::i;:::-;2194:74;;2149:129;2317:2;2343:64;2399:7;2390:6;2379:9;2375:22;2343:64;:::i;:::-;2333:74;;2288:129;2456:2;2482:64;2538:7;2529:6;2518:9;2514:22;2482:64;:::i;:::-;2472:74;;2427:129;2595:3;2622:64;2678:7;2669:6;2658:9;2654:22;2622:64;:::i;:::-;2612:74;;2566:130;2735:3;2762:64;2818:7;2809:6;2798:9;2794:22;2762:64;:::i;:::-;2752:74;;2706:130;2875:3;2902:64;2958:7;2949:6;2938:9;2934:22;2902:64;:::i;:::-;2892:74;;2846:130;3015:3;3042:64;3098:7;3089:6;3078:9;3074:22;3042:64;:::i;:::-;3032:74;;2986:130;1649:1474;;;;;;;;;;;:::o;3129:118::-;3216:24;3234:5;3216:24;:::i;:::-;3211:3;3204:37;3129:118;;:::o;3253:222::-;3346:4;3384:2;3373:9;3369:18;3361:26;;3397:71;3465:1;3454:9;3450:17;3441:6;3397:71;:::i;:::-;3253:222;;;;:::o;3481:180::-;3529:77;3526:1;3519:88;3626:4;3623:1;3616:15;3650:4;3647:1;3640:15;232:5025:7;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1711": {
									"entryPoint": null,
									"id": 1711,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4437,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 4765,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 4572,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1109": {
									"entryPoint": 4088,
									"id": 1109,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimRefund_1703": {
									"entryPoint": 2050,
									"id": 1703,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contributeToPresale_1499": {
									"entryPoint": 1066,
									"id": 1499,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contributeToPublicSale_1557": {
									"entryPoint": 3107,
									"id": 1557,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentPhase_1286": {
									"entryPoint": 1733,
									"id": 1286,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@distributeTokensToAddress_1619": {
									"entryPoint": 3775,
									"id": 1619,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@distributeTokens_1590": {
									"entryPoint": 4109,
									"id": 1590,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@endPresale_1428": {
									"entryPoint": 1881,
									"id": 1428,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endPublicSale_1441": {
									"entryPoint": 2938,
									"id": 1441,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1842,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@presaleCap_1260": {
									"entryPoint": 1799,
									"id": 1260,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@presaleContributions_1274": {
									"entryPoint": 1778,
									"id": 1274,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@presaleMaxContribution_1266": {
									"entryPoint": 1836,
									"id": 1266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@presaleMinContribution_1264": {
									"entryPoint": 2932,
									"id": 1264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@publicSaleCap_1262": {
									"entryPoint": 1805,
									"id": 1262,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@publicSaleContributions_1278": {
									"entryPoint": 1757,
									"id": 1278,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@publicSaleMaxContribution_1270": {
									"entryPoint": 1811,
									"id": 1270,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@publicSaleMinContribution_1268": {
									"entryPoint": 1751,
									"id": 1268,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1817,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startPresale_1415": {
									"entryPoint": 1565,
									"id": 1415,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_1258": {
									"entryPoint": 3738,
									"id": 1258,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3606,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack": {
									"entryPoint": 5334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_SalePhase_$1283_to_t_uint8_fromStack": {
									"entryPoint": 4992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_039875f28fd62c64eb2a7c30f6ed91c70a45e101ec247c9ef31897f9d7c81bf0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_11dceae1f6fe37f98654565689f256508e5e1d136e9204b15d7d6313600e3ba9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_170e0e05573eb0a178e40db61f717720b74467c1c2a75d6e20c5aae44ea7513c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1bdadf08185d5508cdbdc01e2a97dd384f3d5d49a4e81f930d8ce61cbb46eaa3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24f78bdc540fa518f899558cbd02c2348ec59a00e6c73d111cf9aa107af4e447_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3220cb0e510e1fcc5b8ebbe7e0fb4f28a7eb74b62a1825d130d339146247e647_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4a416c07eaf5249727c707e8ce66fa46914920413139e2355062a65d939e1866_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a4d0eed3cde0c3bb2a26113f40258e6b92434d0336da732b006592277caac580_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bf220db8b7e738831b38283f816668eeccdbb13d8b1decd6299cb3a7bc22448c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f212a1a49cb2a4d8bd4c7344416f62ab0139924f122c28867e8d08455ec6aac8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f538c3dae3ae556c2667197f31eeb6cee0b2916f588ec055ee0529d83d1317f1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f60a2877b0c2d535227e68c42b7651a75acbcf1c62616f00b8946788a0c807d7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7123,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$799__to_t_address__fromStack_reversed": {
									"entryPoint": 5349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_SalePhase_$1283__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_039875f28fd62c64eb2a7c30f6ed91c70a45e101ec247c9ef31897f9d7c81bf0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_11dceae1f6fe37f98654565689f256508e5e1d136e9204b15d7d6313600e3ba9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_170e0e05573eb0a178e40db61f717720b74467c1c2a75d6e20c5aae44ea7513c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1bdadf08185d5508cdbdc01e2a97dd384f3d5d49a4e81f930d8ce61cbb46eaa3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24f78bdc540fa518f899558cbd02c2348ec59a00e6c73d111cf9aa107af4e447__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3220cb0e510e1fcc5b8ebbe7e0fb4f28a7eb74b62a1825d130d339146247e647__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a416c07eaf5249727c707e8ce66fa46914920413139e2355062a65d939e1866__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a4d0eed3cde0c3bb2a26113f40258e6b92434d0336da732b006592277caac580__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf220db8b7e738831b38283f816668eeccdbb13d8b1decd6299cb3a7bc22448c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f212a1a49cb2a4d8bd4c7344416f62ab0139924f122c28867e8d08455ec6aac8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f538c3dae3ae556c2667197f31eeb6cee0b2916f588ec055ee0529d83d1317f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f60a2877b0c2d535227e68c42b7651a75acbcf1c62616f00b8946788a0c807d7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_enum$_SalePhase_$1283__to_t_uint256_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 7354,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_SalePhase_$1283": {
									"entryPoint": 4957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$799_to_t_address": {
									"entryPoint": 5317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_SalePhase_$1283_to_t_uint8": {
									"entryPoint": 4975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7258,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 4892,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5081,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_039875f28fd62c64eb2a7c30f6ed91c70a45e101ec247c9ef31897f9d7c81bf0": {
									"entryPoint": 5866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_11dceae1f6fe37f98654565689f256508e5e1d136e9204b15d7d6313600e3ba9": {
									"entryPoint": 5478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_170e0e05573eb0a178e40db61f717720b74467c1c2a75d6e20c5aae44ea7513c": {
									"entryPoint": 6216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1bdadf08185d5508cdbdc01e2a97dd384f3d5d49a4e81f930d8ce61cbb46eaa3": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24f78bdc540fa518f899558cbd02c2348ec59a00e6c73d111cf9aa107af4e447": {
									"entryPoint": 6773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3220cb0e510e1fcc5b8ebbe7e0fb4f28a7eb74b62a1825d130d339146247e647": {
									"entryPoint": 4788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4a416c07eaf5249727c707e8ce66fa46914920413139e2355062a65d939e1866": {
									"entryPoint": 6631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58": {
									"entryPoint": 7019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e": {
									"entryPoint": 6423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a4d0eed3cde0c3bb2a26113f40258e6b92434d0336da732b006592277caac580": {
									"entryPoint": 6074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bf220db8b7e738831b38283f816668eeccdbb13d8b1decd6299cb3a7bc22448c": {
									"entryPoint": 6915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 6368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f212a1a49cb2a4d8bd4c7344416f62ab0139924f122c28867e8d08455ec6aac8": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f538c3dae3ae556c2667197f31eeb6cee0b2916f588ec055ee0529d83d1317f1": {
									"entryPoint": 5970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f60a2877b0c2d535227e68c42b7651a75acbcf1c62616f00b8946788a0c807d7": {
									"entryPoint": 5582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_SalePhase_$1283": {
									"entryPoint": 4937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21723:8",
										"nodeType": "YulBlock",
										"src": "0:21723:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:8",
													"nodeType": "YulBlock",
													"src": "103:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:8"
																},
																"nativeSrc": "113:19:8",
																"nodeType": "YulFunctionCall",
																"src": "113:19:8"
															},
															"nativeSrc": "113:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:8"
														},
														{
															"nativeSrc": "141:29:8",
															"nodeType": "YulAssignment",
															"src": "141:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:8",
																		"nodeType": "YulLiteral",
																		"src": "165:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:8"
																},
																"nativeSrc": "156:14:8",
																"nodeType": "YulFunctionCall",
																"src": "156:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:8",
														"nodeType": "YulTypedName",
														"src": "75:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:8",
														"nodeType": "YulTypedName",
														"src": "80:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:8",
														"nodeType": "YulTypedName",
														"src": "91:11:8",
														"type": ""
													}
												],
												"src": "7:169:8"
											},
											{
												"body": {
													"nativeSrc": "288:73:8",
													"nodeType": "YulBlock",
													"src": "288:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:8",
																				"nodeType": "YulLiteral",
																				"src": "318:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:8"
																		},
																		"nativeSrc": "306:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:8"
																	},
																	{
																		"hexValue": "46616c6c6261636b2066756e6374696f6e206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "322:31:8",
																		"nodeType": "YulLiteral",
																		"src": "322:31:8",
																		"type": "",
																		"value": "Fallback function not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:8"
																},
																"nativeSrc": "299:55:8",
																"nodeType": "YulFunctionCall",
																"src": "299:55:8"
															},
															"nativeSrc": "299:55:8",
															"nodeType": "YulExpressionStatement",
															"src": "299:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_3220cb0e510e1fcc5b8ebbe7e0fb4f28a7eb74b62a1825d130d339146247e647",
												"nativeSrc": "182:179:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:8",
														"nodeType": "YulTypedName",
														"src": "280:6:8",
														"type": ""
													}
												],
												"src": "182:179:8"
											},
											{
												"body": {
													"nativeSrc": "513:220:8",
													"nodeType": "YulBlock",
													"src": "513:220:8",
													"statements": [
														{
															"nativeSrc": "523:74:8",
															"nodeType": "YulAssignment",
															"src": "523:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "589:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "589:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "594:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "530:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "530:58:8"
																},
																"nativeSrc": "530:67:8",
																"nodeType": "YulFunctionCall",
																"src": "530:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "523:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "523:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "695:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "695:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3220cb0e510e1fcc5b8ebbe7e0fb4f28a7eb74b62a1825d130d339146247e647",
																	"nativeSrc": "606:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "606:88:8"
																},
																"nativeSrc": "606:93:8",
																"nodeType": "YulFunctionCall",
																"src": "606:93:8"
															},
															"nativeSrc": "606:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "606:93:8"
														},
														{
															"nativeSrc": "708:19:8",
															"nodeType": "YulAssignment",
															"src": "708:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "719:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "719:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "724:2:8",
																		"nodeType": "YulLiteral",
																		"src": "724:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "715:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:8"
																},
																"nativeSrc": "715:12:8",
																"nodeType": "YulFunctionCall",
																"src": "715:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "708:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "708:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3220cb0e510e1fcc5b8ebbe7e0fb4f28a7eb74b62a1825d130d339146247e647_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "367:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "501:3:8",
														"nodeType": "YulTypedName",
														"src": "501:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "509:3:8",
														"nodeType": "YulTypedName",
														"src": "509:3:8",
														"type": ""
													}
												],
												"src": "367:366:8"
											},
											{
												"body": {
													"nativeSrc": "910:248:8",
													"nodeType": "YulBlock",
													"src": "910:248:8",
													"statements": [
														{
															"nativeSrc": "920:26:8",
															"nodeType": "YulAssignment",
															"src": "920:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "943:2:8",
																		"nodeType": "YulLiteral",
																		"src": "943:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "928:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "928:3:8"
																},
																"nativeSrc": "928:18:8",
																"nodeType": "YulFunctionCall",
																"src": "928:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "920:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "920:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "967:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "967:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "978:1:8",
																				"nodeType": "YulLiteral",
																				"src": "978:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "963:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "963:3:8"
																		},
																		"nativeSrc": "963:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "963:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "986:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "986:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "992:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "992:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "982:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "982:3:8"
																		},
																		"nativeSrc": "982:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "982:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "956:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "956:6:8"
																},
																"nativeSrc": "956:47:8",
																"nodeType": "YulFunctionCall",
																"src": "956:47:8"
															},
															"nativeSrc": "956:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "956:47:8"
														},
														{
															"nativeSrc": "1012:139:8",
															"nodeType": "YulAssignment",
															"src": "1012:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1146:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1146:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3220cb0e510e1fcc5b8ebbe7e0fb4f28a7eb74b62a1825d130d339146247e647_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1020:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "1020:124:8"
																},
																"nativeSrc": "1020:131:8",
																"nodeType": "YulFunctionCall",
																"src": "1020:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1012:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1012:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3220cb0e510e1fcc5b8ebbe7e0fb4f28a7eb74b62a1825d130d339146247e647__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "739:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "890:9:8",
														"nodeType": "YulTypedName",
														"src": "890:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "905:4:8",
														"nodeType": "YulTypedName",
														"src": "905:4:8",
														"type": ""
													}
												],
												"src": "739:419:8"
											},
											{
												"body": {
													"nativeSrc": "1192:152:8",
													"nodeType": "YulBlock",
													"src": "1192:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1209:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1209:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1212:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1212:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1202:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1202:6:8"
																},
																"nativeSrc": "1202:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1202:88:8"
															},
															"nativeSrc": "1202:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1202:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1306:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1309:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1309:4:8",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1299:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:8"
																},
																"nativeSrc": "1299:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1299:15:8"
															},
															"nativeSrc": "1299:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1299:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1330:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1330:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1333:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1333:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1323:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:8"
																},
																"nativeSrc": "1323:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1323:15:8"
															},
															"nativeSrc": "1323:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1323:15:8"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "1164:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1164:180:8"
											},
											{
												"body": {
													"nativeSrc": "1407:62:8",
													"nodeType": "YulBlock",
													"src": "1407:62:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1441:22:8",
																"nodeType": "YulBlock",
																"src": "1441:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "1443:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1443:16:8"
																			},
																			"nativeSrc": "1443:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1443:18:8"
																		},
																		"nativeSrc": "1443:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1443:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1430:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1430:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1437:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1437:1:8",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1427:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1427:2:8"
																		},
																		"nativeSrc": "1427:12:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:12:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1420:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:8"
																},
																"nativeSrc": "1420:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1420:20:8"
															},
															"nativeSrc": "1417:46:8",
															"nodeType": "YulIf",
															"src": "1417:46:8"
														}
													]
												},
												"name": "validator_assert_t_enum$_SalePhase_$1283",
												"nativeSrc": "1350:119:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1400:5:8",
														"nodeType": "YulTypedName",
														"src": "1400:5:8",
														"type": ""
													}
												],
												"src": "1350:119:8"
											},
											{
												"body": {
													"nativeSrc": "1534:80:8",
													"nodeType": "YulBlock",
													"src": "1534:80:8",
													"statements": [
														{
															"nativeSrc": "1544:16:8",
															"nodeType": "YulAssignment",
															"src": "1544:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "1555:5:8",
																"nodeType": "YulIdentifier",
																"src": "1555:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1544:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1544:7:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1602:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1602:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_SalePhase_$1283",
																	"nativeSrc": "1561:40:8",
																	"nodeType": "YulIdentifier",
																	"src": "1561:40:8"
																},
																"nativeSrc": "1561:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1561:47:8"
															},
															"nativeSrc": "1561:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1561:47:8"
														}
													]
												},
												"name": "cleanup_t_enum$_SalePhase_$1283",
												"nativeSrc": "1475:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1516:5:8",
														"nodeType": "YulTypedName",
														"src": "1516:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1526:7:8",
														"nodeType": "YulTypedName",
														"src": "1526:7:8",
														"type": ""
													}
												],
												"src": "1475:139:8"
											},
											{
												"body": {
													"nativeSrc": "1692:67:8",
													"nodeType": "YulBlock",
													"src": "1692:67:8",
													"statements": [
														{
															"nativeSrc": "1702:51:8",
															"nodeType": "YulAssignment",
															"src": "1702:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1747:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1747:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_SalePhase_$1283",
																	"nativeSrc": "1715:31:8",
																	"nodeType": "YulIdentifier",
																	"src": "1715:31:8"
																},
																"nativeSrc": "1715:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1715:38:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1702:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1702:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_SalePhase_$1283_to_t_uint8",
												"nativeSrc": "1620:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1672:5:8",
														"nodeType": "YulTypedName",
														"src": "1672:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1682:9:8",
														"nodeType": "YulTypedName",
														"src": "1682:9:8",
														"type": ""
													}
												],
												"src": "1620:139:8"
											},
											{
												"body": {
													"nativeSrc": "1842:78:8",
													"nodeType": "YulBlock",
													"src": "1842:78:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1859:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1859:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1907:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1907:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_SalePhase_$1283_to_t_uint8",
																			"nativeSrc": "1864:42:8",
																			"nodeType": "YulIdentifier",
																			"src": "1864:42:8"
																		},
																		"nativeSrc": "1864:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1864:49:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1852:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1852:6:8"
																},
																"nativeSrc": "1852:62:8",
																"nodeType": "YulFunctionCall",
																"src": "1852:62:8"
															},
															"nativeSrc": "1852:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "1852:62:8"
														}
													]
												},
												"name": "abi_encode_t_enum$_SalePhase_$1283_to_t_uint8_fromStack",
												"nativeSrc": "1765:155:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1830:5:8",
														"nodeType": "YulTypedName",
														"src": "1830:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1837:3:8",
														"nodeType": "YulTypedName",
														"src": "1837:3:8",
														"type": ""
													}
												],
												"src": "1765:155:8"
											},
											{
												"body": {
													"nativeSrc": "2036:136:8",
													"nodeType": "YulBlock",
													"src": "2036:136:8",
													"statements": [
														{
															"nativeSrc": "2046:26:8",
															"nodeType": "YulAssignment",
															"src": "2046:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2058:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2069:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2069:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2054:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2054:3:8"
																},
																"nativeSrc": "2054:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2054:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2046:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2046:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2138:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2138:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2151:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2151:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2162:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2162:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2147:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2147:3:8"
																		},
																		"nativeSrc": "2147:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2147:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_SalePhase_$1283_to_t_uint8_fromStack",
																	"nativeSrc": "2082:55:8",
																	"nodeType": "YulIdentifier",
																	"src": "2082:55:8"
																},
																"nativeSrc": "2082:83:8",
																"nodeType": "YulFunctionCall",
																"src": "2082:83:8"
															},
															"nativeSrc": "2082:83:8",
															"nodeType": "YulExpressionStatement",
															"src": "2082:83:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_SalePhase_$1283__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1926:246:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2008:9:8",
														"nodeType": "YulTypedName",
														"src": "2008:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2020:6:8",
														"nodeType": "YulTypedName",
														"src": "2020:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2031:4:8",
														"nodeType": "YulTypedName",
														"src": "2031:4:8",
														"type": ""
													}
												],
												"src": "1926:246:8"
											},
											{
												"body": {
													"nativeSrc": "2223:32:8",
													"nodeType": "YulBlock",
													"src": "2223:32:8",
													"statements": [
														{
															"nativeSrc": "2233:16:8",
															"nodeType": "YulAssignment",
															"src": "2233:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2244:5:8",
																"nodeType": "YulIdentifier",
																"src": "2244:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2233:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2233:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2178:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2205:5:8",
														"nodeType": "YulTypedName",
														"src": "2205:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2215:7:8",
														"nodeType": "YulTypedName",
														"src": "2215:7:8",
														"type": ""
													}
												],
												"src": "2178:77:8"
											},
											{
												"body": {
													"nativeSrc": "2326:53:8",
													"nodeType": "YulBlock",
													"src": "2326:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2343:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2343:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2366:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2366:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2348:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "2348:17:8"
																		},
																		"nativeSrc": "2348:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2348:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2336:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2336:6:8"
																},
																"nativeSrc": "2336:37:8",
																"nodeType": "YulFunctionCall",
																"src": "2336:37:8"
															},
															"nativeSrc": "2336:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "2336:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2261:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2314:5:8",
														"nodeType": "YulTypedName",
														"src": "2314:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2321:3:8",
														"nodeType": "YulTypedName",
														"src": "2321:3:8",
														"type": ""
													}
												],
												"src": "2261:118:8"
											},
											{
												"body": {
													"nativeSrc": "2483:124:8",
													"nodeType": "YulBlock",
													"src": "2483:124:8",
													"statements": [
														{
															"nativeSrc": "2493:26:8",
															"nodeType": "YulAssignment",
															"src": "2493:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2505:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2505:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2516:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2516:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2501:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2501:3:8"
																},
																"nativeSrc": "2501:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2501:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2493:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2493:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2573:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2573:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2586:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2586:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2597:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2597:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2582:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2582:3:8"
																		},
																		"nativeSrc": "2582:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2582:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2529:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2529:43:8"
																},
																"nativeSrc": "2529:71:8",
																"nodeType": "YulFunctionCall",
																"src": "2529:71:8"
															},
															"nativeSrc": "2529:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "2529:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2385:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2455:9:8",
														"nodeType": "YulTypedName",
														"src": "2455:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2467:6:8",
														"nodeType": "YulTypedName",
														"src": "2467:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2478:4:8",
														"nodeType": "YulTypedName",
														"src": "2478:4:8",
														"type": ""
													}
												],
												"src": "2385:222:8"
											},
											{
												"body": {
													"nativeSrc": "2653:35:8",
													"nodeType": "YulBlock",
													"src": "2653:35:8",
													"statements": [
														{
															"nativeSrc": "2663:19:8",
															"nodeType": "YulAssignment",
															"src": "2663:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2679:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2673:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2673:5:8"
																},
																"nativeSrc": "2673:9:8",
																"nodeType": "YulFunctionCall",
																"src": "2673:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2663:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2663:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "2613:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2646:6:8",
														"nodeType": "YulTypedName",
														"src": "2646:6:8",
														"type": ""
													}
												],
												"src": "2613:75:8"
											},
											{
												"body": {
													"nativeSrc": "2783:28:8",
													"nodeType": "YulBlock",
													"src": "2783:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2800:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2800:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2803:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2803:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2793:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2793:6:8"
																},
																"nativeSrc": "2793:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2793:12:8"
															},
															"nativeSrc": "2793:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "2793:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2694:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2694:117:8"
											},
											{
												"body": {
													"nativeSrc": "2906:28:8",
													"nodeType": "YulBlock",
													"src": "2906:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2923:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2923:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2926:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2926:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2916:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:8"
																},
																"nativeSrc": "2916:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2916:12:8"
															},
															"nativeSrc": "2916:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "2916:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2817:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2817:117:8"
											},
											{
												"body": {
													"nativeSrc": "2985:81:8",
													"nodeType": "YulBlock",
													"src": "2985:81:8",
													"statements": [
														{
															"nativeSrc": "2995:65:8",
															"nodeType": "YulAssignment",
															"src": "2995:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3010:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3010:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3017:42:8",
																		"nodeType": "YulLiteral",
																		"src": "3017:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3006:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3006:3:8"
																},
																"nativeSrc": "3006:54:8",
																"nodeType": "YulFunctionCall",
																"src": "3006:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2995:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2995:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2940:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2967:5:8",
														"nodeType": "YulTypedName",
														"src": "2967:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2977:7:8",
														"nodeType": "YulTypedName",
														"src": "2977:7:8",
														"type": ""
													}
												],
												"src": "2940:126:8"
											},
											{
												"body": {
													"nativeSrc": "3117:51:8",
													"nodeType": "YulBlock",
													"src": "3117:51:8",
													"statements": [
														{
															"nativeSrc": "3127:35:8",
															"nodeType": "YulAssignment",
															"src": "3127:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3156:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3156:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3138:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3138:17:8"
																},
																"nativeSrc": "3138:24:8",
																"nodeType": "YulFunctionCall",
																"src": "3138:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3127:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3127:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3072:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3099:5:8",
														"nodeType": "YulTypedName",
														"src": "3099:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3109:7:8",
														"nodeType": "YulTypedName",
														"src": "3109:7:8",
														"type": ""
													}
												],
												"src": "3072:96:8"
											},
											{
												"body": {
													"nativeSrc": "3217:79:8",
													"nodeType": "YulBlock",
													"src": "3217:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3274:16:8",
																"nodeType": "YulBlock",
																"src": "3274:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3283:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3283:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3286:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3286:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3276:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3276:6:8"
																			},
																			"nativeSrc": "3276:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3276:12:8"
																		},
																		"nativeSrc": "3276:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3276:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3240:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3240:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3265:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3265:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3247:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3247:17:8"
																				},
																				"nativeSrc": "3247:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3247:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3237:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3237:2:8"
																		},
																		"nativeSrc": "3237:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3237:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3230:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3230:6:8"
																},
																"nativeSrc": "3230:43:8",
																"nodeType": "YulFunctionCall",
																"src": "3230:43:8"
															},
															"nativeSrc": "3227:63:8",
															"nodeType": "YulIf",
															"src": "3227:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3174:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3210:5:8",
														"nodeType": "YulTypedName",
														"src": "3210:5:8",
														"type": ""
													}
												],
												"src": "3174:122:8"
											},
											{
												"body": {
													"nativeSrc": "3354:87:8",
													"nodeType": "YulBlock",
													"src": "3354:87:8",
													"statements": [
														{
															"nativeSrc": "3364:29:8",
															"nodeType": "YulAssignment",
															"src": "3364:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3386:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3386:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3373:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3373:12:8"
																},
																"nativeSrc": "3373:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3373:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3364:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3364:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3429:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3429:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3402:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "3402:26:8"
																},
																"nativeSrc": "3402:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3402:33:8"
															},
															"nativeSrc": "3402:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3402:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3302:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3332:6:8",
														"nodeType": "YulTypedName",
														"src": "3332:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3340:3:8",
														"nodeType": "YulTypedName",
														"src": "3340:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3348:5:8",
														"nodeType": "YulTypedName",
														"src": "3348:5:8",
														"type": ""
													}
												],
												"src": "3302:139:8"
											},
											{
												"body": {
													"nativeSrc": "3513:263:8",
													"nodeType": "YulBlock",
													"src": "3513:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3559:83:8",
																"nodeType": "YulBlock",
																"src": "3559:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3561:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3561:77:8"
																			},
																			"nativeSrc": "3561:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3561:79:8"
																		},
																		"nativeSrc": "3561:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3561:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3534:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3534:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3543:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3543:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3530:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:8"
																		},
																		"nativeSrc": "3530:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3530:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3555:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3555:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3526:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3526:3:8"
																},
																"nativeSrc": "3526:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3526:32:8"
															},
															"nativeSrc": "3523:119:8",
															"nodeType": "YulIf",
															"src": "3523:119:8"
														},
														{
															"nativeSrc": "3652:117:8",
															"nodeType": "YulBlock",
															"src": "3652:117:8",
															"statements": [
																{
																	"nativeSrc": "3667:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3667:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3681:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3681:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3671:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3671:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3696:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3696:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3731:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3731:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3742:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3742:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3727:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3727:3:8"
																				},
																				"nativeSrc": "3727:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3727:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3751:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3751:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3706:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3706:20:8"
																		},
																		"nativeSrc": "3706:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3706:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3696:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3696:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3447:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3483:9:8",
														"nodeType": "YulTypedName",
														"src": "3483:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3494:7:8",
														"nodeType": "YulTypedName",
														"src": "3494:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3506:6:8",
														"nodeType": "YulTypedName",
														"src": "3506:6:8",
														"type": ""
													}
												],
												"src": "3447:329:8"
											},
											{
												"body": {
													"nativeSrc": "3847:53:8",
													"nodeType": "YulBlock",
													"src": "3847:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3864:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3864:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3887:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3887:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3869:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3869:17:8"
																		},
																		"nativeSrc": "3869:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3869:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3857:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3857:6:8"
																},
																"nativeSrc": "3857:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3857:37:8"
															},
															"nativeSrc": "3857:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3857:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3782:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3835:5:8",
														"nodeType": "YulTypedName",
														"src": "3835:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3842:3:8",
														"nodeType": "YulTypedName",
														"src": "3842:3:8",
														"type": ""
													}
												],
												"src": "3782:118:8"
											},
											{
												"body": {
													"nativeSrc": "4004:124:8",
													"nodeType": "YulBlock",
													"src": "4004:124:8",
													"statements": [
														{
															"nativeSrc": "4014:26:8",
															"nodeType": "YulAssignment",
															"src": "4014:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4026:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4026:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4037:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4037:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4022:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4022:3:8"
																},
																"nativeSrc": "4022:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4022:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4014:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4014:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4094:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4094:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4107:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4107:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4118:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4118:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4103:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4103:3:8"
																		},
																		"nativeSrc": "4103:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4103:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4050:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4050:43:8"
																},
																"nativeSrc": "4050:71:8",
																"nodeType": "YulFunctionCall",
																"src": "4050:71:8"
															},
															"nativeSrc": "4050:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "4050:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3906:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3976:9:8",
														"nodeType": "YulTypedName",
														"src": "3976:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3988:6:8",
														"nodeType": "YulTypedName",
														"src": "3988:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3999:4:8",
														"nodeType": "YulTypedName",
														"src": "3999:4:8",
														"type": ""
													}
												],
												"src": "3906:222:8"
											},
											{
												"body": {
													"nativeSrc": "4166:28:8",
													"nodeType": "YulBlock",
													"src": "4166:28:8",
													"statements": [
														{
															"nativeSrc": "4176:12:8",
															"nodeType": "YulAssignment",
															"src": "4176:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "4183:5:8",
																"nodeType": "YulIdentifier",
																"src": "4183:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4176:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4176:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4134:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4152:5:8",
														"nodeType": "YulTypedName",
														"src": "4152:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4162:3:8",
														"nodeType": "YulTypedName",
														"src": "4162:3:8",
														"type": ""
													}
												],
												"src": "4134:60:8"
											},
											{
												"body": {
													"nativeSrc": "4260:82:8",
													"nodeType": "YulBlock",
													"src": "4260:82:8",
													"statements": [
														{
															"nativeSrc": "4270:66:8",
															"nodeType": "YulAssignment",
															"src": "4270:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4328:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4328:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4310:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "4310:17:8"
																				},
																				"nativeSrc": "4310:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4310:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4301:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "4301:8:8"
																		},
																		"nativeSrc": "4301:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4301:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4283:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4283:17:8"
																},
																"nativeSrc": "4283:53:8",
																"nodeType": "YulFunctionCall",
																"src": "4283:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4270:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4270:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4200:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4240:5:8",
														"nodeType": "YulTypedName",
														"src": "4240:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4250:9:8",
														"nodeType": "YulTypedName",
														"src": "4250:9:8",
														"type": ""
													}
												],
												"src": "4200:142:8"
											},
											{
												"body": {
													"nativeSrc": "4408:66:8",
													"nodeType": "YulBlock",
													"src": "4408:66:8",
													"statements": [
														{
															"nativeSrc": "4418:50:8",
															"nodeType": "YulAssignment",
															"src": "4418:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4462:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4462:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4431:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4431:30:8"
																},
																"nativeSrc": "4431:37:8",
																"nodeType": "YulFunctionCall",
																"src": "4431:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4418:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4418:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4348:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4388:5:8",
														"nodeType": "YulTypedName",
														"src": "4388:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4398:9:8",
														"nodeType": "YulTypedName",
														"src": "4398:9:8",
														"type": ""
													}
												],
												"src": "4348:126:8"
											},
											{
												"body": {
													"nativeSrc": "4553:66:8",
													"nodeType": "YulBlock",
													"src": "4553:66:8",
													"statements": [
														{
															"nativeSrc": "4563:50:8",
															"nodeType": "YulAssignment",
															"src": "4563:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4607:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4607:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4576:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4576:30:8"
																},
																"nativeSrc": "4576:37:8",
																"nodeType": "YulFunctionCall",
																"src": "4576:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4563:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4563:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$799_to_t_address",
												"nativeSrc": "4480:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4533:5:8",
														"nodeType": "YulTypedName",
														"src": "4533:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4543:9:8",
														"nodeType": "YulTypedName",
														"src": "4543:9:8",
														"type": ""
													}
												],
												"src": "4480:139:8"
											},
											{
												"body": {
													"nativeSrc": "4703:79:8",
													"nodeType": "YulBlock",
													"src": "4703:79:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4720:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4720:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4769:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4769:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$799_to_t_address",
																			"nativeSrc": "4725:43:8",
																			"nodeType": "YulIdentifier",
																			"src": "4725:43:8"
																		},
																		"nativeSrc": "4725:50:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4725:50:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4713:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4713:6:8"
																},
																"nativeSrc": "4713:63:8",
																"nodeType": "YulFunctionCall",
																"src": "4713:63:8"
															},
															"nativeSrc": "4713:63:8",
															"nodeType": "YulExpressionStatement",
															"src": "4713:63:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack",
												"nativeSrc": "4625:157:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4691:5:8",
														"nodeType": "YulTypedName",
														"src": "4691:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4698:3:8",
														"nodeType": "YulTypedName",
														"src": "4698:3:8",
														"type": ""
													}
												],
												"src": "4625:157:8"
											},
											{
												"body": {
													"nativeSrc": "4899:137:8",
													"nodeType": "YulBlock",
													"src": "4899:137:8",
													"statements": [
														{
															"nativeSrc": "4909:26:8",
															"nodeType": "YulAssignment",
															"src": "4909:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4921:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4921:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4932:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4932:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4917:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4917:3:8"
																},
																"nativeSrc": "4917:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4917:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4909:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4909:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5002:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5002:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5015:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5015:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5026:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5026:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5011:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5011:3:8"
																		},
																		"nativeSrc": "5011:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5011:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack",
																	"nativeSrc": "4945:56:8",
																	"nodeType": "YulIdentifier",
																	"src": "4945:56:8"
																},
																"nativeSrc": "4945:84:8",
																"nodeType": "YulFunctionCall",
																"src": "4945:84:8"
															},
															"nativeSrc": "4945:84:8",
															"nodeType": "YulExpressionStatement",
															"src": "4945:84:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$799__to_t_address__fromStack_reversed",
												"nativeSrc": "4788:248:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4871:9:8",
														"nodeType": "YulTypedName",
														"src": "4871:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4883:6:8",
														"nodeType": "YulTypedName",
														"src": "4883:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4894:4:8",
														"nodeType": "YulTypedName",
														"src": "4894:4:8",
														"type": ""
													}
												],
												"src": "4788:248:8"
											},
											{
												"body": {
													"nativeSrc": "5085:79:8",
													"nodeType": "YulBlock",
													"src": "5085:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5142:16:8",
																"nodeType": "YulBlock",
																"src": "5142:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5151:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5151:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5154:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5154:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5144:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5144:6:8"
																			},
																			"nativeSrc": "5144:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5144:12:8"
																		},
																		"nativeSrc": "5144:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5144:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5108:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5108:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5133:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5133:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5115:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "5115:17:8"
																				},
																				"nativeSrc": "5115:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5115:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5105:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5105:2:8"
																		},
																		"nativeSrc": "5105:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5098:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5098:6:8"
																},
																"nativeSrc": "5098:43:8",
																"nodeType": "YulFunctionCall",
																"src": "5098:43:8"
															},
															"nativeSrc": "5095:63:8",
															"nodeType": "YulIf",
															"src": "5095:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "5042:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5078:5:8",
														"nodeType": "YulTypedName",
														"src": "5078:5:8",
														"type": ""
													}
												],
												"src": "5042:122:8"
											},
											{
												"body": {
													"nativeSrc": "5222:87:8",
													"nodeType": "YulBlock",
													"src": "5222:87:8",
													"statements": [
														{
															"nativeSrc": "5232:29:8",
															"nodeType": "YulAssignment",
															"src": "5232:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5254:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5254:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5241:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "5241:12:8"
																},
																"nativeSrc": "5241:20:8",
																"nodeType": "YulFunctionCall",
																"src": "5241:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5232:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5232:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5297:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5297:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5270:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "5270:26:8"
																},
																"nativeSrc": "5270:33:8",
																"nodeType": "YulFunctionCall",
																"src": "5270:33:8"
															},
															"nativeSrc": "5270:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "5170:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5200:6:8",
														"nodeType": "YulTypedName",
														"src": "5200:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5208:3:8",
														"nodeType": "YulTypedName",
														"src": "5208:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5216:5:8",
														"nodeType": "YulTypedName",
														"src": "5216:5:8",
														"type": ""
													}
												],
												"src": "5170:139:8"
											},
											{
												"body": {
													"nativeSrc": "5398:391:8",
													"nodeType": "YulBlock",
													"src": "5398:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5444:83:8",
																"nodeType": "YulBlock",
																"src": "5444:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5446:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5446:77:8"
																			},
																			"nativeSrc": "5446:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5446:79:8"
																		},
																		"nativeSrc": "5446:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5446:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5419:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5419:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5428:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5428:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5415:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5415:3:8"
																		},
																		"nativeSrc": "5415:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5415:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5440:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5440:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5411:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5411:3:8"
																},
																"nativeSrc": "5411:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5411:32:8"
															},
															"nativeSrc": "5408:119:8",
															"nodeType": "YulIf",
															"src": "5408:119:8"
														},
														{
															"nativeSrc": "5537:117:8",
															"nodeType": "YulBlock",
															"src": "5537:117:8",
															"statements": [
																{
																	"nativeSrc": "5552:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5552:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5566:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5566:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5556:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5556:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5581:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5581:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5616:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5616:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5627:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5627:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5612:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5612:3:8"
																				},
																				"nativeSrc": "5612:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5612:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5636:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5636:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5591:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5591:20:8"
																		},
																		"nativeSrc": "5591:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5591:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5581:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5581:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5664:118:8",
															"nodeType": "YulBlock",
															"src": "5664:118:8",
															"statements": [
																{
																	"nativeSrc": "5679:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5679:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5693:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5693:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5683:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5683:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5709:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5709:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5744:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5744:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5755:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5755:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5740:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5740:3:8"
																				},
																				"nativeSrc": "5740:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5740:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5764:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5764:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5719:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5719:20:8"
																		},
																		"nativeSrc": "5719:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5719:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5709:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5709:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "5315:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5360:9:8",
														"nodeType": "YulTypedName",
														"src": "5360:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5371:7:8",
														"nodeType": "YulTypedName",
														"src": "5371:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5383:6:8",
														"nodeType": "YulTypedName",
														"src": "5383:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5391:6:8",
														"nodeType": "YulTypedName",
														"src": "5391:6:8",
														"type": ""
													}
												],
												"src": "5315:474:8"
											},
											{
												"body": {
													"nativeSrc": "5901:64:8",
													"nodeType": "YulBlock",
													"src": "5901:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5923:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5923:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5931:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5931:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5919:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5919:3:8"
																		},
																		"nativeSrc": "5919:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5919:14:8"
																	},
																	{
																		"hexValue": "4e6f7420696e2070726573616c65207068617365",
																		"kind": "string",
																		"nativeSrc": "5935:22:8",
																		"nodeType": "YulLiteral",
																		"src": "5935:22:8",
																		"type": "",
																		"value": "Not in presale phase"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5912:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5912:6:8"
																},
																"nativeSrc": "5912:46:8",
																"nodeType": "YulFunctionCall",
																"src": "5912:46:8"
															},
															"nativeSrc": "5912:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "5912:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_11dceae1f6fe37f98654565689f256508e5e1d136e9204b15d7d6313600e3ba9",
												"nativeSrc": "5795:170:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5893:6:8",
														"nodeType": "YulTypedName",
														"src": "5893:6:8",
														"type": ""
													}
												],
												"src": "5795:170:8"
											},
											{
												"body": {
													"nativeSrc": "6117:220:8",
													"nodeType": "YulBlock",
													"src": "6117:220:8",
													"statements": [
														{
															"nativeSrc": "6127:74:8",
															"nodeType": "YulAssignment",
															"src": "6127:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6193:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6193:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6198:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6198:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6134:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "6134:58:8"
																},
																"nativeSrc": "6134:67:8",
																"nodeType": "YulFunctionCall",
																"src": "6134:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6127:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6127:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6299:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6299:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_11dceae1f6fe37f98654565689f256508e5e1d136e9204b15d7d6313600e3ba9",
																	"nativeSrc": "6210:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "6210:88:8"
																},
																"nativeSrc": "6210:93:8",
																"nodeType": "YulFunctionCall",
																"src": "6210:93:8"
															},
															"nativeSrc": "6210:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "6210:93:8"
														},
														{
															"nativeSrc": "6312:19:8",
															"nodeType": "YulAssignment",
															"src": "6312:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6323:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6323:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6328:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6328:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6319:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6319:3:8"
																},
																"nativeSrc": "6319:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6319:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6312:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6312:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_11dceae1f6fe37f98654565689f256508e5e1d136e9204b15d7d6313600e3ba9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5971:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6105:3:8",
														"nodeType": "YulTypedName",
														"src": "6105:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6113:3:8",
														"nodeType": "YulTypedName",
														"src": "6113:3:8",
														"type": ""
													}
												],
												"src": "5971:366:8"
											},
											{
												"body": {
													"nativeSrc": "6514:248:8",
													"nodeType": "YulBlock",
													"src": "6514:248:8",
													"statements": [
														{
															"nativeSrc": "6524:26:8",
															"nodeType": "YulAssignment",
															"src": "6524:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6536:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6536:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6547:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6547:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6532:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6532:3:8"
																},
																"nativeSrc": "6532:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6532:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6524:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6524:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6571:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6571:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6582:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6582:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6567:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6567:3:8"
																		},
																		"nativeSrc": "6567:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6567:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6590:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6590:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6596:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6596:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6586:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6586:3:8"
																		},
																		"nativeSrc": "6586:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6586:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6560:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:8"
																},
																"nativeSrc": "6560:47:8",
																"nodeType": "YulFunctionCall",
																"src": "6560:47:8"
															},
															"nativeSrc": "6560:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "6560:47:8"
														},
														{
															"nativeSrc": "6616:139:8",
															"nodeType": "YulAssignment",
															"src": "6616:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6750:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6750:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_11dceae1f6fe37f98654565689f256508e5e1d136e9204b15d7d6313600e3ba9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6624:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "6624:124:8"
																},
																"nativeSrc": "6624:131:8",
																"nodeType": "YulFunctionCall",
																"src": "6624:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6616:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6616:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_11dceae1f6fe37f98654565689f256508e5e1d136e9204b15d7d6313600e3ba9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6343:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6494:9:8",
														"nodeType": "YulTypedName",
														"src": "6494:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6509:4:8",
														"nodeType": "YulTypedName",
														"src": "6509:4:8",
														"type": ""
													}
												],
												"src": "6343:419:8"
											},
											{
												"body": {
													"nativeSrc": "6874:115:8",
													"nodeType": "YulBlock",
													"src": "6874:115:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6896:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6896:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6904:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6904:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6892:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6892:3:8"
																		},
																		"nativeSrc": "6892:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6892:14:8"
																	},
																	{
																		"hexValue": "42656c6f772070726573616c65206d696e696d756d20636f6e74726962757469",
																		"kind": "string",
																		"nativeSrc": "6908:34:8",
																		"nodeType": "YulLiteral",
																		"src": "6908:34:8",
																		"type": "",
																		"value": "Below presale minimum contributi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6885:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6885:6:8"
																},
																"nativeSrc": "6885:58:8",
																"nodeType": "YulFunctionCall",
																"src": "6885:58:8"
															},
															"nativeSrc": "6885:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "6885:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6964:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6964:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6972:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6972:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6960:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6960:3:8"
																		},
																		"nativeSrc": "6960:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6960:15:8"
																	},
																	{
																		"hexValue": "6f6e",
																		"kind": "string",
																		"nativeSrc": "6977:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6977:4:8",
																		"type": "",
																		"value": "on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6953:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6953:6:8"
																},
																"nativeSrc": "6953:29:8",
																"nodeType": "YulFunctionCall",
																"src": "6953:29:8"
															},
															"nativeSrc": "6953:29:8",
															"nodeType": "YulExpressionStatement",
															"src": "6953:29:8"
														}
													]
												},
												"name": "store_literal_in_memory_f60a2877b0c2d535227e68c42b7651a75acbcf1c62616f00b8946788a0c807d7",
												"nativeSrc": "6768:221:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6866:6:8",
														"nodeType": "YulTypedName",
														"src": "6866:6:8",
														"type": ""
													}
												],
												"src": "6768:221:8"
											},
											{
												"body": {
													"nativeSrc": "7141:220:8",
													"nodeType": "YulBlock",
													"src": "7141:220:8",
													"statements": [
														{
															"nativeSrc": "7151:74:8",
															"nodeType": "YulAssignment",
															"src": "7151:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7217:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7217:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7222:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7222:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7158:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7158:58:8"
																},
																"nativeSrc": "7158:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7158:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7151:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7151:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7323:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7323:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f60a2877b0c2d535227e68c42b7651a75acbcf1c62616f00b8946788a0c807d7",
																	"nativeSrc": "7234:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "7234:88:8"
																},
																"nativeSrc": "7234:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7234:93:8"
															},
															"nativeSrc": "7234:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "7234:93:8"
														},
														{
															"nativeSrc": "7336:19:8",
															"nodeType": "YulAssignment",
															"src": "7336:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7347:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7347:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7352:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7352:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7343:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7343:3:8"
																},
																"nativeSrc": "7343:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7343:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7336:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7336:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f60a2877b0c2d535227e68c42b7651a75acbcf1c62616f00b8946788a0c807d7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6995:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7129:3:8",
														"nodeType": "YulTypedName",
														"src": "7129:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7137:3:8",
														"nodeType": "YulTypedName",
														"src": "7137:3:8",
														"type": ""
													}
												],
												"src": "6995:366:8"
											},
											{
												"body": {
													"nativeSrc": "7538:248:8",
													"nodeType": "YulBlock",
													"src": "7538:248:8",
													"statements": [
														{
															"nativeSrc": "7548:26:8",
															"nodeType": "YulAssignment",
															"src": "7548:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7560:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7560:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7571:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7571:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7556:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7556:3:8"
																},
																"nativeSrc": "7556:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7556:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7548:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7548:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7595:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7595:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7606:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7606:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7591:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7591:3:8"
																		},
																		"nativeSrc": "7591:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7591:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7614:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7614:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7620:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7620:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7610:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7610:3:8"
																		},
																		"nativeSrc": "7610:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7610:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7584:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7584:6:8"
																},
																"nativeSrc": "7584:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7584:47:8"
															},
															"nativeSrc": "7584:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7584:47:8"
														},
														{
															"nativeSrc": "7640:139:8",
															"nodeType": "YulAssignment",
															"src": "7640:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7774:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f60a2877b0c2d535227e68c42b7651a75acbcf1c62616f00b8946788a0c807d7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7648:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "7648:124:8"
																},
																"nativeSrc": "7648:131:8",
																"nodeType": "YulFunctionCall",
																"src": "7648:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7640:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7640:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f60a2877b0c2d535227e68c42b7651a75acbcf1c62616f00b8946788a0c807d7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7367:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7518:9:8",
														"nodeType": "YulTypedName",
														"src": "7518:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7533:4:8",
														"nodeType": "YulTypedName",
														"src": "7533:4:8",
														"type": ""
													}
												],
												"src": "7367:419:8"
											},
											{
												"body": {
													"nativeSrc": "7898:117:8",
													"nodeType": "YulBlock",
													"src": "7898:117:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7920:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7920:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7928:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7928:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7916:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7916:3:8"
																		},
																		"nativeSrc": "7916:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:14:8"
																	},
																	{
																		"hexValue": "457863656564732070726573616c65206d6178696d756d20636f6e7472696275",
																		"kind": "string",
																		"nativeSrc": "7932:34:8",
																		"nodeType": "YulLiteral",
																		"src": "7932:34:8",
																		"type": "",
																		"value": "Exceeds presale maximum contribu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7909:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7909:6:8"
																},
																"nativeSrc": "7909:58:8",
																"nodeType": "YulFunctionCall",
																"src": "7909:58:8"
															},
															"nativeSrc": "7909:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "7909:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7988:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7988:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7996:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7996:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7984:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7984:3:8"
																		},
																		"nativeSrc": "7984:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7984:15:8"
																	},
																	{
																		"hexValue": "74696f6e",
																		"kind": "string",
																		"nativeSrc": "8001:6:8",
																		"nodeType": "YulLiteral",
																		"src": "8001:6:8",
																		"type": "",
																		"value": "tion"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7977:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7977:6:8"
																},
																"nativeSrc": "7977:31:8",
																"nodeType": "YulFunctionCall",
																"src": "7977:31:8"
															},
															"nativeSrc": "7977:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "7977:31:8"
														}
													]
												},
												"name": "store_literal_in_memory_f212a1a49cb2a4d8bd4c7344416f62ab0139924f122c28867e8d08455ec6aac8",
												"nativeSrc": "7792:223:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7890:6:8",
														"nodeType": "YulTypedName",
														"src": "7890:6:8",
														"type": ""
													}
												],
												"src": "7792:223:8"
											},
											{
												"body": {
													"nativeSrc": "8167:220:8",
													"nodeType": "YulBlock",
													"src": "8167:220:8",
													"statements": [
														{
															"nativeSrc": "8177:74:8",
															"nodeType": "YulAssignment",
															"src": "8177:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8243:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8243:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8248:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8184:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8184:58:8"
																},
																"nativeSrc": "8184:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8184:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8177:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8177:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8349:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8349:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f212a1a49cb2a4d8bd4c7344416f62ab0139924f122c28867e8d08455ec6aac8",
																	"nativeSrc": "8260:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8260:88:8"
																},
																"nativeSrc": "8260:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8260:93:8"
															},
															"nativeSrc": "8260:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8260:93:8"
														},
														{
															"nativeSrc": "8362:19:8",
															"nodeType": "YulAssignment",
															"src": "8362:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8373:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8373:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8378:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8378:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8369:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8369:3:8"
																},
																"nativeSrc": "8369:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8369:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8362:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8362:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f212a1a49cb2a4d8bd4c7344416f62ab0139924f122c28867e8d08455ec6aac8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8021:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8155:3:8",
														"nodeType": "YulTypedName",
														"src": "8155:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8163:3:8",
														"nodeType": "YulTypedName",
														"src": "8163:3:8",
														"type": ""
													}
												],
												"src": "8021:366:8"
											},
											{
												"body": {
													"nativeSrc": "8564:248:8",
													"nodeType": "YulBlock",
													"src": "8564:248:8",
													"statements": [
														{
															"nativeSrc": "8574:26:8",
															"nodeType": "YulAssignment",
															"src": "8574:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8586:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8586:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8597:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8597:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8582:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8582:3:8"
																},
																"nativeSrc": "8582:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8582:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8574:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8574:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8621:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8621:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8632:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8632:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8617:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8617:3:8"
																		},
																		"nativeSrc": "8617:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8617:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8640:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8640:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8646:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8646:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8636:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8636:3:8"
																		},
																		"nativeSrc": "8636:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8636:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8610:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8610:6:8"
																},
																"nativeSrc": "8610:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8610:47:8"
															},
															"nativeSrc": "8610:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8610:47:8"
														},
														{
															"nativeSrc": "8666:139:8",
															"nodeType": "YulAssignment",
															"src": "8666:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8800:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8800:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f212a1a49cb2a4d8bd4c7344416f62ab0139924f122c28867e8d08455ec6aac8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8674:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "8674:124:8"
																},
																"nativeSrc": "8674:131:8",
																"nodeType": "YulFunctionCall",
																"src": "8674:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8666:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8666:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f212a1a49cb2a4d8bd4c7344416f62ab0139924f122c28867e8d08455ec6aac8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8393:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8544:9:8",
														"nodeType": "YulTypedName",
														"src": "8544:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8559:4:8",
														"nodeType": "YulTypedName",
														"src": "8559:4:8",
														"type": ""
													}
												],
												"src": "8393:419:8"
											},
											{
												"body": {
													"nativeSrc": "8924:63:8",
													"nodeType": "YulBlock",
													"src": "8924:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8946:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8946:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8954:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8954:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8942:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8942:3:8"
																		},
																		"nativeSrc": "8942:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8942:14:8"
																	},
																	{
																		"hexValue": "50726573616c65206361702072656163686564",
																		"kind": "string",
																		"nativeSrc": "8958:21:8",
																		"nodeType": "YulLiteral",
																		"src": "8958:21:8",
																		"type": "",
																		"value": "Presale cap reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8935:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8935:6:8"
																},
																"nativeSrc": "8935:45:8",
																"nodeType": "YulFunctionCall",
																"src": "8935:45:8"
															},
															"nativeSrc": "8935:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "8935:45:8"
														}
													]
												},
												"name": "store_literal_in_memory_039875f28fd62c64eb2a7c30f6ed91c70a45e101ec247c9ef31897f9d7c81bf0",
												"nativeSrc": "8818:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8916:6:8",
														"nodeType": "YulTypedName",
														"src": "8916:6:8",
														"type": ""
													}
												],
												"src": "8818:169:8"
											},
											{
												"body": {
													"nativeSrc": "9139:220:8",
													"nodeType": "YulBlock",
													"src": "9139:220:8",
													"statements": [
														{
															"nativeSrc": "9149:74:8",
															"nodeType": "YulAssignment",
															"src": "9149:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9215:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9215:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9220:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9220:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9156:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "9156:58:8"
																},
																"nativeSrc": "9156:67:8",
																"nodeType": "YulFunctionCall",
																"src": "9156:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9149:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9149:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9321:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9321:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_039875f28fd62c64eb2a7c30f6ed91c70a45e101ec247c9ef31897f9d7c81bf0",
																	"nativeSrc": "9232:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "9232:88:8"
																},
																"nativeSrc": "9232:93:8",
																"nodeType": "YulFunctionCall",
																"src": "9232:93:8"
															},
															"nativeSrc": "9232:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "9232:93:8"
														},
														{
															"nativeSrc": "9334:19:8",
															"nodeType": "YulAssignment",
															"src": "9334:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9345:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9345:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9350:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9350:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9341:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9341:3:8"
																},
																"nativeSrc": "9341:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9341:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9334:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9334:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_039875f28fd62c64eb2a7c30f6ed91c70a45e101ec247c9ef31897f9d7c81bf0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8993:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9127:3:8",
														"nodeType": "YulTypedName",
														"src": "9127:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9135:3:8",
														"nodeType": "YulTypedName",
														"src": "9135:3:8",
														"type": ""
													}
												],
												"src": "8993:366:8"
											},
											{
												"body": {
													"nativeSrc": "9536:248:8",
													"nodeType": "YulBlock",
													"src": "9536:248:8",
													"statements": [
														{
															"nativeSrc": "9546:26:8",
															"nodeType": "YulAssignment",
															"src": "9546:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9558:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9558:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9569:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9569:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9554:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9554:3:8"
																},
																"nativeSrc": "9554:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9554:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9546:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9546:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9593:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9593:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9604:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9604:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9589:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9589:3:8"
																		},
																		"nativeSrc": "9589:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9589:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9612:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9612:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9618:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9618:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9608:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9608:3:8"
																		},
																		"nativeSrc": "9608:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9608:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9582:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9582:6:8"
																},
																"nativeSrc": "9582:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9582:47:8"
															},
															"nativeSrc": "9582:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9582:47:8"
														},
														{
															"nativeSrc": "9638:139:8",
															"nodeType": "YulAssignment",
															"src": "9638:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9772:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9772:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_039875f28fd62c64eb2a7c30f6ed91c70a45e101ec247c9ef31897f9d7c81bf0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9646:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "9646:124:8"
																},
																"nativeSrc": "9646:131:8",
																"nodeType": "YulFunctionCall",
																"src": "9646:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9638:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9638:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_039875f28fd62c64eb2a7c30f6ed91c70a45e101ec247c9ef31897f9d7c81bf0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9365:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9516:9:8",
														"nodeType": "YulTypedName",
														"src": "9516:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9531:4:8",
														"nodeType": "YulTypedName",
														"src": "9531:4:8",
														"type": ""
													}
												],
												"src": "9365:419:8"
											},
											{
												"body": {
													"nativeSrc": "9896:60:8",
													"nodeType": "YulBlock",
													"src": "9896:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9918:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9918:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9926:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9926:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9914:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9914:3:8"
																		},
																		"nativeSrc": "9914:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9914:14:8"
																	},
																	{
																		"hexValue": "53616c652069732066696e6973686564",
																		"kind": "string",
																		"nativeSrc": "9930:18:8",
																		"nodeType": "YulLiteral",
																		"src": "9930:18:8",
																		"type": "",
																		"value": "Sale is finished"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9907:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9907:6:8"
																},
																"nativeSrc": "9907:42:8",
																"nodeType": "YulFunctionCall",
																"src": "9907:42:8"
															},
															"nativeSrc": "9907:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "9907:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_f538c3dae3ae556c2667197f31eeb6cee0b2916f588ec055ee0529d83d1317f1",
												"nativeSrc": "9790:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9888:6:8",
														"nodeType": "YulTypedName",
														"src": "9888:6:8",
														"type": ""
													}
												],
												"src": "9790:166:8"
											},
											{
												"body": {
													"nativeSrc": "10108:220:8",
													"nodeType": "YulBlock",
													"src": "10108:220:8",
													"statements": [
														{
															"nativeSrc": "10118:74:8",
															"nodeType": "YulAssignment",
															"src": "10118:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10184:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10184:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10189:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10189:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10125:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10125:58:8"
																},
																"nativeSrc": "10125:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10125:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10118:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10118:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10290:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10290:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f538c3dae3ae556c2667197f31eeb6cee0b2916f588ec055ee0529d83d1317f1",
																	"nativeSrc": "10201:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10201:88:8"
																},
																"nativeSrc": "10201:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10201:93:8"
															},
															"nativeSrc": "10201:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10201:93:8"
														},
														{
															"nativeSrc": "10303:19:8",
															"nodeType": "YulAssignment",
															"src": "10303:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10314:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10314:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10319:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10319:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10310:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10310:3:8"
																},
																"nativeSrc": "10310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10310:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10303:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10303:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f538c3dae3ae556c2667197f31eeb6cee0b2916f588ec055ee0529d83d1317f1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9962:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10096:3:8",
														"nodeType": "YulTypedName",
														"src": "10096:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10104:3:8",
														"nodeType": "YulTypedName",
														"src": "10104:3:8",
														"type": ""
													}
												],
												"src": "9962:366:8"
											},
											{
												"body": {
													"nativeSrc": "10505:248:8",
													"nodeType": "YulBlock",
													"src": "10505:248:8",
													"statements": [
														{
															"nativeSrc": "10515:26:8",
															"nodeType": "YulAssignment",
															"src": "10515:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10527:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10527:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10538:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10538:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10523:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10523:3:8"
																},
																"nativeSrc": "10523:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10523:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10515:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10515:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10562:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10562:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10573:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10573:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10558:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10558:3:8"
																		},
																		"nativeSrc": "10558:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10558:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10581:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10581:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10587:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10587:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10577:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10577:3:8"
																		},
																		"nativeSrc": "10577:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10577:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10551:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10551:6:8"
																},
																"nativeSrc": "10551:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10551:47:8"
															},
															"nativeSrc": "10551:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10551:47:8"
														},
														{
															"nativeSrc": "10607:139:8",
															"nodeType": "YulAssignment",
															"src": "10607:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10741:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10741:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f538c3dae3ae556c2667197f31eeb6cee0b2916f588ec055ee0529d83d1317f1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10615:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10615:124:8"
																},
																"nativeSrc": "10615:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10615:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10607:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10607:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f538c3dae3ae556c2667197f31eeb6cee0b2916f588ec055ee0529d83d1317f1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10334:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10485:9:8",
														"nodeType": "YulTypedName",
														"src": "10485:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10500:4:8",
														"nodeType": "YulTypedName",
														"src": "10500:4:8",
														"type": ""
													}
												],
												"src": "10334:419:8"
											},
											{
												"body": {
													"nativeSrc": "10865:114:8",
													"nodeType": "YulBlock",
													"src": "10865:114:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10887:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10887:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10895:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10895:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10883:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10883:3:8"
																		},
																		"nativeSrc": "10883:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10883:14:8"
																	},
																	{
																		"hexValue": "4e6f2070726573616c6520636f6e747269627574696f6e20746f20726566756e",
																		"kind": "string",
																		"nativeSrc": "10899:34:8",
																		"nodeType": "YulLiteral",
																		"src": "10899:34:8",
																		"type": "",
																		"value": "No presale contribution to refun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10876:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10876:6:8"
																},
																"nativeSrc": "10876:58:8",
																"nodeType": "YulFunctionCall",
																"src": "10876:58:8"
															},
															"nativeSrc": "10876:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "10876:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10955:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10955:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10963:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10963:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10951:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10951:3:8"
																		},
																		"nativeSrc": "10951:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10951:15:8"
																	},
																	{
																		"hexValue": "64",
																		"kind": "string",
																		"nativeSrc": "10968:3:8",
																		"nodeType": "YulLiteral",
																		"src": "10968:3:8",
																		"type": "",
																		"value": "d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10944:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10944:6:8"
																},
																"nativeSrc": "10944:28:8",
																"nodeType": "YulFunctionCall",
																"src": "10944:28:8"
															},
															"nativeSrc": "10944:28:8",
															"nodeType": "YulExpressionStatement",
															"src": "10944:28:8"
														}
													]
												},
												"name": "store_literal_in_memory_a4d0eed3cde0c3bb2a26113f40258e6b92434d0336da732b006592277caac580",
												"nativeSrc": "10759:220:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10857:6:8",
														"nodeType": "YulTypedName",
														"src": "10857:6:8",
														"type": ""
													}
												],
												"src": "10759:220:8"
											},
											{
												"body": {
													"nativeSrc": "11131:220:8",
													"nodeType": "YulBlock",
													"src": "11131:220:8",
													"statements": [
														{
															"nativeSrc": "11141:74:8",
															"nodeType": "YulAssignment",
															"src": "11141:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11207:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11207:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11212:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11212:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11148:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11148:58:8"
																},
																"nativeSrc": "11148:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11148:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11141:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11141:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11313:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11313:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a4d0eed3cde0c3bb2a26113f40258e6b92434d0336da732b006592277caac580",
																	"nativeSrc": "11224:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11224:88:8"
																},
																"nativeSrc": "11224:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11224:93:8"
															},
															"nativeSrc": "11224:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11224:93:8"
														},
														{
															"nativeSrc": "11326:19:8",
															"nodeType": "YulAssignment",
															"src": "11326:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11337:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11337:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11342:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11342:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11333:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11333:3:8"
																},
																"nativeSrc": "11333:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11333:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11326:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11326:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a4d0eed3cde0c3bb2a26113f40258e6b92434d0336da732b006592277caac580_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10985:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11119:3:8",
														"nodeType": "YulTypedName",
														"src": "11119:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11127:3:8",
														"nodeType": "YulTypedName",
														"src": "11127:3:8",
														"type": ""
													}
												],
												"src": "10985:366:8"
											},
											{
												"body": {
													"nativeSrc": "11528:248:8",
													"nodeType": "YulBlock",
													"src": "11528:248:8",
													"statements": [
														{
															"nativeSrc": "11538:26:8",
															"nodeType": "YulAssignment",
															"src": "11538:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11550:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11550:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11561:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11561:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11546:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11546:3:8"
																},
																"nativeSrc": "11546:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11546:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11538:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11538:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11585:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11585:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11596:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11596:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11581:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11581:3:8"
																		},
																		"nativeSrc": "11581:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11581:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11604:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11604:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11610:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11610:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11600:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11600:3:8"
																		},
																		"nativeSrc": "11600:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11600:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11574:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11574:6:8"
																},
																"nativeSrc": "11574:47:8",
																"nodeType": "YulFunctionCall",
																"src": "11574:47:8"
															},
															"nativeSrc": "11574:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "11574:47:8"
														},
														{
															"nativeSrc": "11630:139:8",
															"nodeType": "YulAssignment",
															"src": "11630:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11764:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11764:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a4d0eed3cde0c3bb2a26113f40258e6b92434d0336da732b006592277caac580_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11638:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11638:124:8"
																},
																"nativeSrc": "11638:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11638:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11630:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11630:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a4d0eed3cde0c3bb2a26113f40258e6b92434d0336da732b006592277caac580__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11357:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11508:9:8",
														"nodeType": "YulTypedName",
														"src": "11508:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11523:4:8",
														"nodeType": "YulTypedName",
														"src": "11523:4:8",
														"type": ""
													}
												],
												"src": "11357:419:8"
											},
											{
												"body": {
													"nativeSrc": "11888:118:8",
													"nodeType": "YulBlock",
													"src": "11888:118:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11910:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11910:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11918:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11918:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11906:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11906:3:8"
																		},
																		"nativeSrc": "11906:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11906:14:8"
																	},
																	{
																		"hexValue": "4e6f207075626c69632073616c6520636f6e747269627574696f6e20746f2072",
																		"kind": "string",
																		"nativeSrc": "11922:34:8",
																		"nodeType": "YulLiteral",
																		"src": "11922:34:8",
																		"type": "",
																		"value": "No public sale contribution to r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11899:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11899:6:8"
																},
																"nativeSrc": "11899:58:8",
																"nodeType": "YulFunctionCall",
																"src": "11899:58:8"
															},
															"nativeSrc": "11899:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "11899:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11978:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11978:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11986:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11986:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11974:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11974:3:8"
																		},
																		"nativeSrc": "11974:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11974:15:8"
																	},
																	{
																		"hexValue": "6566756e64",
																		"kind": "string",
																		"nativeSrc": "11991:7:8",
																		"nodeType": "YulLiteral",
																		"src": "11991:7:8",
																		"type": "",
																		"value": "efund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11967:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11967:6:8"
																},
																"nativeSrc": "11967:32:8",
																"nodeType": "YulFunctionCall",
																"src": "11967:32:8"
															},
															"nativeSrc": "11967:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "11967:32:8"
														}
													]
												},
												"name": "store_literal_in_memory_170e0e05573eb0a178e40db61f717720b74467c1c2a75d6e20c5aae44ea7513c",
												"nativeSrc": "11782:224:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11880:6:8",
														"nodeType": "YulTypedName",
														"src": "11880:6:8",
														"type": ""
													}
												],
												"src": "11782:224:8"
											},
											{
												"body": {
													"nativeSrc": "12158:220:8",
													"nodeType": "YulBlock",
													"src": "12158:220:8",
													"statements": [
														{
															"nativeSrc": "12168:74:8",
															"nodeType": "YulAssignment",
															"src": "12168:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12234:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12234:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12239:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12239:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12175:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12175:58:8"
																},
																"nativeSrc": "12175:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12175:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12168:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12168:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12340:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12340:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_170e0e05573eb0a178e40db61f717720b74467c1c2a75d6e20c5aae44ea7513c",
																	"nativeSrc": "12251:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "12251:88:8"
																},
																"nativeSrc": "12251:93:8",
																"nodeType": "YulFunctionCall",
																"src": "12251:93:8"
															},
															"nativeSrc": "12251:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "12251:93:8"
														},
														{
															"nativeSrc": "12353:19:8",
															"nodeType": "YulAssignment",
															"src": "12353:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12364:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12364:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12369:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12369:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12360:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12360:3:8"
																},
																"nativeSrc": "12360:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12360:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12353:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12353:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_170e0e05573eb0a178e40db61f717720b74467c1c2a75d6e20c5aae44ea7513c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12012:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12146:3:8",
														"nodeType": "YulTypedName",
														"src": "12146:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12154:3:8",
														"nodeType": "YulTypedName",
														"src": "12154:3:8",
														"type": ""
													}
												],
												"src": "12012:366:8"
											},
											{
												"body": {
													"nativeSrc": "12555:248:8",
													"nodeType": "YulBlock",
													"src": "12555:248:8",
													"statements": [
														{
															"nativeSrc": "12565:26:8",
															"nodeType": "YulAssignment",
															"src": "12565:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12577:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12577:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12588:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12588:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12573:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12573:3:8"
																},
																"nativeSrc": "12573:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12573:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12565:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12565:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12612:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12612:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12623:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12623:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12608:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12608:3:8"
																		},
																		"nativeSrc": "12608:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12608:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12631:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12631:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12637:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12637:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12627:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12627:3:8"
																		},
																		"nativeSrc": "12627:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12627:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12601:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12601:6:8"
																},
																"nativeSrc": "12601:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12601:47:8"
															},
															"nativeSrc": "12601:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12601:47:8"
														},
														{
															"nativeSrc": "12657:139:8",
															"nodeType": "YulAssignment",
															"src": "12657:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12791:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12791:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_170e0e05573eb0a178e40db61f717720b74467c1c2a75d6e20c5aae44ea7513c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12665:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12665:124:8"
																},
																"nativeSrc": "12665:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12665:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12657:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12657:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_170e0e05573eb0a178e40db61f717720b74467c1c2a75d6e20c5aae44ea7513c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12384:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12535:9:8",
														"nodeType": "YulTypedName",
														"src": "12535:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12550:4:8",
														"nodeType": "YulTypedName",
														"src": "12550:4:8",
														"type": ""
													}
												],
												"src": "12384:419:8"
											},
											{
												"body": {
													"nativeSrc": "12922:34:8",
													"nodeType": "YulBlock",
													"src": "12922:34:8",
													"statements": [
														{
															"nativeSrc": "12932:18:8",
															"nodeType": "YulAssignment",
															"src": "12932:18:8",
															"value": {
																"name": "pos",
																"nativeSrc": "12947:3:8",
																"nodeType": "YulIdentifier",
																"src": "12947:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12932:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "12932:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12809:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12894:3:8",
														"nodeType": "YulTypedName",
														"src": "12894:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12899:6:8",
														"nodeType": "YulTypedName",
														"src": "12899:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12910:11:8",
														"nodeType": "YulTypedName",
														"src": "12910:11:8",
														"type": ""
													}
												],
												"src": "12809:147:8"
											},
											{
												"body": {
													"nativeSrc": "13068:8:8",
													"nodeType": "YulBlock",
													"src": "13068:8:8",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "12962:114:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13060:6:8",
														"nodeType": "YulTypedName",
														"src": "13060:6:8",
														"type": ""
													}
												],
												"src": "12962:114:8"
											},
											{
												"body": {
													"nativeSrc": "13245:235:8",
													"nodeType": "YulBlock",
													"src": "13245:235:8",
													"statements": [
														{
															"nativeSrc": "13255:90:8",
															"nodeType": "YulAssignment",
															"src": "13255:90:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13338:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13338:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13343:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13343:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13262:75:8",
																	"nodeType": "YulIdentifier",
																	"src": "13262:75:8"
																},
																"nativeSrc": "13262:83:8",
																"nodeType": "YulFunctionCall",
																"src": "13262:83:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13255:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13255:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13443:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13443:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "13354:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13354:88:8"
																},
																"nativeSrc": "13354:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13354:93:8"
															},
															"nativeSrc": "13354:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13354:93:8"
														},
														{
															"nativeSrc": "13456:18:8",
															"nodeType": "YulAssignment",
															"src": "13456:18:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13467:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13467:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13472:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13472:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13463:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13463:3:8"
																},
																"nativeSrc": "13463:11:8",
																"nodeType": "YulFunctionCall",
																"src": "13463:11:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13456:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13456:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13082:398:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13233:3:8",
														"nodeType": "YulTypedName",
														"src": "13233:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13241:3:8",
														"nodeType": "YulTypedName",
														"src": "13241:3:8",
														"type": ""
													}
												],
												"src": "13082:398:8"
											},
											{
												"body": {
													"nativeSrc": "13674:191:8",
													"nodeType": "YulBlock",
													"src": "13674:191:8",
													"statements": [
														{
															"nativeSrc": "13685:154:8",
															"nodeType": "YulAssignment",
															"src": "13685:154:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13835:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13835:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13692:141:8",
																	"nodeType": "YulIdentifier",
																	"src": "13692:141:8"
																},
																"nativeSrc": "13692:147:8",
																"nodeType": "YulFunctionCall",
																"src": "13692:147:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13685:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13685:3:8"
																}
															]
														},
														{
															"nativeSrc": "13849:10:8",
															"nodeType": "YulAssignment",
															"src": "13849:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "13856:3:8",
																"nodeType": "YulIdentifier",
																"src": "13856:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13849:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13849:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13486:379:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13661:3:8",
														"nodeType": "YulTypedName",
														"src": "13661:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13670:3:8",
														"nodeType": "YulTypedName",
														"src": "13670:3:8",
														"type": ""
													}
												],
												"src": "13486:379:8"
											},
											{
												"body": {
													"nativeSrc": "13977:57:8",
													"nodeType": "YulBlock",
													"src": "13977:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13999:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13999:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14007:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14007:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13995:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13995:3:8"
																		},
																		"nativeSrc": "13995:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13995:14:8"
																	},
																	{
																		"hexValue": "526566756e64206661696c6564",
																		"kind": "string",
																		"nativeSrc": "14011:15:8",
																		"nodeType": "YulLiteral",
																		"src": "14011:15:8",
																		"type": "",
																		"value": "Refund failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13988:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13988:6:8"
																},
																"nativeSrc": "13988:39:8",
																"nodeType": "YulFunctionCall",
																"src": "13988:39:8"
															},
															"nativeSrc": "13988:39:8",
															"nodeType": "YulExpressionStatement",
															"src": "13988:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e",
												"nativeSrc": "13871:163:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13969:6:8",
														"nodeType": "YulTypedName",
														"src": "13969:6:8",
														"type": ""
													}
												],
												"src": "13871:163:8"
											},
											{
												"body": {
													"nativeSrc": "14186:220:8",
													"nodeType": "YulBlock",
													"src": "14186:220:8",
													"statements": [
														{
															"nativeSrc": "14196:74:8",
															"nodeType": "YulAssignment",
															"src": "14196:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14262:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14262:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14267:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14267:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14203:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "14203:58:8"
																},
																"nativeSrc": "14203:67:8",
																"nodeType": "YulFunctionCall",
																"src": "14203:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14196:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14196:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14368:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14368:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e",
																	"nativeSrc": "14279:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "14279:88:8"
																},
																"nativeSrc": "14279:93:8",
																"nodeType": "YulFunctionCall",
																"src": "14279:93:8"
															},
															"nativeSrc": "14279:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "14279:93:8"
														},
														{
															"nativeSrc": "14381:19:8",
															"nodeType": "YulAssignment",
															"src": "14381:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14392:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14392:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14397:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14397:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14388:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14388:3:8"
																},
																"nativeSrc": "14388:12:8",
																"nodeType": "YulFunctionCall",
																"src": "14388:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14381:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14381:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14040:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14174:3:8",
														"nodeType": "YulTypedName",
														"src": "14174:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14182:3:8",
														"nodeType": "YulTypedName",
														"src": "14182:3:8",
														"type": ""
													}
												],
												"src": "14040:366:8"
											},
											{
												"body": {
													"nativeSrc": "14583:248:8",
													"nodeType": "YulBlock",
													"src": "14583:248:8",
													"statements": [
														{
															"nativeSrc": "14593:26:8",
															"nodeType": "YulAssignment",
															"src": "14593:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14605:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14605:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14616:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14616:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14601:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14601:3:8"
																},
																"nativeSrc": "14601:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14601:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14593:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14593:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14640:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14640:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14651:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14651:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14636:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14636:3:8"
																		},
																		"nativeSrc": "14636:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14636:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14659:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "14659:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14665:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14665:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14655:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14655:3:8"
																		},
																		"nativeSrc": "14655:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14655:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14629:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14629:6:8"
																},
																"nativeSrc": "14629:47:8",
																"nodeType": "YulFunctionCall",
																"src": "14629:47:8"
															},
															"nativeSrc": "14629:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "14629:47:8"
														},
														{
															"nativeSrc": "14685:139:8",
															"nodeType": "YulAssignment",
															"src": "14685:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14819:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14819:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14693:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "14693:124:8"
																},
																"nativeSrc": "14693:131:8",
																"nodeType": "YulFunctionCall",
																"src": "14693:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14685:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14685:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14412:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14563:9:8",
														"nodeType": "YulTypedName",
														"src": "14563:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14578:4:8",
														"nodeType": "YulTypedName",
														"src": "14578:4:8",
														"type": ""
													}
												],
												"src": "14412:419:8"
											},
											{
												"body": {
													"nativeSrc": "14943:68:8",
													"nodeType": "YulBlock",
													"src": "14943:68:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14965:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "14965:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14973:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14973:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14961:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14961:3:8"
																		},
																		"nativeSrc": "14961:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14961:14:8"
																	},
																	{
																		"hexValue": "4e6f7420696e207075626c69632073616c65207068617365",
																		"kind": "string",
																		"nativeSrc": "14977:26:8",
																		"nodeType": "YulLiteral",
																		"src": "14977:26:8",
																		"type": "",
																		"value": "Not in public sale phase"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14954:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14954:6:8"
																},
																"nativeSrc": "14954:50:8",
																"nodeType": "YulFunctionCall",
																"src": "14954:50:8"
															},
															"nativeSrc": "14954:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "14954:50:8"
														}
													]
												},
												"name": "store_literal_in_memory_1bdadf08185d5508cdbdc01e2a97dd384f3d5d49a4e81f930d8ce61cbb46eaa3",
												"nativeSrc": "14837:174:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14935:6:8",
														"nodeType": "YulTypedName",
														"src": "14935:6:8",
														"type": ""
													}
												],
												"src": "14837:174:8"
											},
											{
												"body": {
													"nativeSrc": "15163:220:8",
													"nodeType": "YulBlock",
													"src": "15163:220:8",
													"statements": [
														{
															"nativeSrc": "15173:74:8",
															"nodeType": "YulAssignment",
															"src": "15173:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15239:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15239:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15244:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15244:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15180:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "15180:58:8"
																},
																"nativeSrc": "15180:67:8",
																"nodeType": "YulFunctionCall",
																"src": "15180:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15173:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15173:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15345:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15345:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1bdadf08185d5508cdbdc01e2a97dd384f3d5d49a4e81f930d8ce61cbb46eaa3",
																	"nativeSrc": "15256:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "15256:88:8"
																},
																"nativeSrc": "15256:93:8",
																"nodeType": "YulFunctionCall",
																"src": "15256:93:8"
															},
															"nativeSrc": "15256:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "15256:93:8"
														},
														{
															"nativeSrc": "15358:19:8",
															"nodeType": "YulAssignment",
															"src": "15358:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15369:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15369:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15374:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15374:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15365:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15365:3:8"
																},
																"nativeSrc": "15365:12:8",
																"nodeType": "YulFunctionCall",
																"src": "15365:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15358:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15358:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1bdadf08185d5508cdbdc01e2a97dd384f3d5d49a4e81f930d8ce61cbb46eaa3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15017:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15151:3:8",
														"nodeType": "YulTypedName",
														"src": "15151:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15159:3:8",
														"nodeType": "YulTypedName",
														"src": "15159:3:8",
														"type": ""
													}
												],
												"src": "15017:366:8"
											},
											{
												"body": {
													"nativeSrc": "15560:248:8",
													"nodeType": "YulBlock",
													"src": "15560:248:8",
													"statements": [
														{
															"nativeSrc": "15570:26:8",
															"nodeType": "YulAssignment",
															"src": "15570:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15582:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15582:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15593:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15593:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15578:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15578:3:8"
																},
																"nativeSrc": "15578:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15578:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15570:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15570:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15617:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15617:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15628:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15628:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15613:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15613:3:8"
																		},
																		"nativeSrc": "15613:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15613:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15636:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15636:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15642:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15642:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15632:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15632:3:8"
																		},
																		"nativeSrc": "15632:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15632:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15606:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15606:6:8"
																},
																"nativeSrc": "15606:47:8",
																"nodeType": "YulFunctionCall",
																"src": "15606:47:8"
															},
															"nativeSrc": "15606:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "15606:47:8"
														},
														{
															"nativeSrc": "15662:139:8",
															"nodeType": "YulAssignment",
															"src": "15662:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15796:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15796:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1bdadf08185d5508cdbdc01e2a97dd384f3d5d49a4e81f930d8ce61cbb46eaa3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15670:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "15670:124:8"
																},
																"nativeSrc": "15670:131:8",
																"nodeType": "YulFunctionCall",
																"src": "15670:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15662:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15662:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1bdadf08185d5508cdbdc01e2a97dd384f3d5d49a4e81f930d8ce61cbb46eaa3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15389:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15540:9:8",
														"nodeType": "YulTypedName",
														"src": "15540:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15555:4:8",
														"nodeType": "YulTypedName",
														"src": "15555:4:8",
														"type": ""
													}
												],
												"src": "15389:419:8"
											},
											{
												"body": {
													"nativeSrc": "15920:119:8",
													"nodeType": "YulBlock",
													"src": "15920:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15942:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15942:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15950:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15950:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15938:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15938:3:8"
																		},
																		"nativeSrc": "15938:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15938:14:8"
																	},
																	{
																		"hexValue": "42656c6f77207075626c69632073616c65206d696e696d756d20636f6e747269",
																		"kind": "string",
																		"nativeSrc": "15954:34:8",
																		"nodeType": "YulLiteral",
																		"src": "15954:34:8",
																		"type": "",
																		"value": "Below public sale minimum contri"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15931:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15931:6:8"
																},
																"nativeSrc": "15931:58:8",
																"nodeType": "YulFunctionCall",
																"src": "15931:58:8"
															},
															"nativeSrc": "15931:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "15931:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16010:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16010:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16018:2:8",
																				"nodeType": "YulLiteral",
																				"src": "16018:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16006:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16006:3:8"
																		},
																		"nativeSrc": "16006:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16006:15:8"
																	},
																	{
																		"hexValue": "627574696f6e",
																		"kind": "string",
																		"nativeSrc": "16023:8:8",
																		"nodeType": "YulLiteral",
																		"src": "16023:8:8",
																		"type": "",
																		"value": "bution"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15999:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15999:6:8"
																},
																"nativeSrc": "15999:33:8",
																"nodeType": "YulFunctionCall",
																"src": "15999:33:8"
															},
															"nativeSrc": "15999:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "15999:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_4a416c07eaf5249727c707e8ce66fa46914920413139e2355062a65d939e1866",
												"nativeSrc": "15814:225:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15912:6:8",
														"nodeType": "YulTypedName",
														"src": "15912:6:8",
														"type": ""
													}
												],
												"src": "15814:225:8"
											},
											{
												"body": {
													"nativeSrc": "16191:220:8",
													"nodeType": "YulBlock",
													"src": "16191:220:8",
													"statements": [
														{
															"nativeSrc": "16201:74:8",
															"nodeType": "YulAssignment",
															"src": "16201:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16267:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16267:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16272:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16272:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16208:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "16208:58:8"
																},
																"nativeSrc": "16208:67:8",
																"nodeType": "YulFunctionCall",
																"src": "16208:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16201:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16201:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16373:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16373:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4a416c07eaf5249727c707e8ce66fa46914920413139e2355062a65d939e1866",
																	"nativeSrc": "16284:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "16284:88:8"
																},
																"nativeSrc": "16284:93:8",
																"nodeType": "YulFunctionCall",
																"src": "16284:93:8"
															},
															"nativeSrc": "16284:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "16284:93:8"
														},
														{
															"nativeSrc": "16386:19:8",
															"nodeType": "YulAssignment",
															"src": "16386:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16397:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16397:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16402:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16402:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16393:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16393:3:8"
																},
																"nativeSrc": "16393:12:8",
																"nodeType": "YulFunctionCall",
																"src": "16393:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16386:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16386:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4a416c07eaf5249727c707e8ce66fa46914920413139e2355062a65d939e1866_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16045:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16179:3:8",
														"nodeType": "YulTypedName",
														"src": "16179:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16187:3:8",
														"nodeType": "YulTypedName",
														"src": "16187:3:8",
														"type": ""
													}
												],
												"src": "16045:366:8"
											},
											{
												"body": {
													"nativeSrc": "16588:248:8",
													"nodeType": "YulBlock",
													"src": "16588:248:8",
													"statements": [
														{
															"nativeSrc": "16598:26:8",
															"nodeType": "YulAssignment",
															"src": "16598:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16610:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "16610:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16621:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16621:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16606:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16606:3:8"
																},
																"nativeSrc": "16606:18:8",
																"nodeType": "YulFunctionCall",
																"src": "16606:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16598:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16598:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16645:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16645:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16656:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16656:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16641:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16641:3:8"
																		},
																		"nativeSrc": "16641:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16641:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16664:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "16664:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16670:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16670:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16660:3:8"
																		},
																		"nativeSrc": "16660:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16660:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16634:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16634:6:8"
																},
																"nativeSrc": "16634:47:8",
																"nodeType": "YulFunctionCall",
																"src": "16634:47:8"
															},
															"nativeSrc": "16634:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "16634:47:8"
														},
														{
															"nativeSrc": "16690:139:8",
															"nodeType": "YulAssignment",
															"src": "16690:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16824:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16824:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4a416c07eaf5249727c707e8ce66fa46914920413139e2355062a65d939e1866_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16698:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "16698:124:8"
																},
																"nativeSrc": "16698:131:8",
																"nodeType": "YulFunctionCall",
																"src": "16698:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16690:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16690:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a416c07eaf5249727c707e8ce66fa46914920413139e2355062a65d939e1866__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16417:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16568:9:8",
														"nodeType": "YulTypedName",
														"src": "16568:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16583:4:8",
														"nodeType": "YulTypedName",
														"src": "16583:4:8",
														"type": ""
													}
												],
												"src": "16417:419:8"
											},
											{
												"body": {
													"nativeSrc": "16948:121:8",
													"nodeType": "YulBlock",
													"src": "16948:121:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16970:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16970:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16978:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16978:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16966:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16966:3:8"
																		},
																		"nativeSrc": "16966:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16966:14:8"
																	},
																	{
																		"hexValue": "45786365656473207075626c69632073616c65206d6178696d756d20636f6e74",
																		"kind": "string",
																		"nativeSrc": "16982:34:8",
																		"nodeType": "YulLiteral",
																		"src": "16982:34:8",
																		"type": "",
																		"value": "Exceeds public sale maximum cont"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16959:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16959:6:8"
																},
																"nativeSrc": "16959:58:8",
																"nodeType": "YulFunctionCall",
																"src": "16959:58:8"
															},
															"nativeSrc": "16959:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "16959:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17038:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "17038:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17046:2:8",
																				"nodeType": "YulLiteral",
																				"src": "17046:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17034:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17034:3:8"
																		},
																		"nativeSrc": "17034:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17034:15:8"
																	},
																	{
																		"hexValue": "7269627574696f6e",
																		"kind": "string",
																		"nativeSrc": "17051:10:8",
																		"nodeType": "YulLiteral",
																		"src": "17051:10:8",
																		"type": "",
																		"value": "ribution"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17027:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17027:6:8"
																},
																"nativeSrc": "17027:35:8",
																"nodeType": "YulFunctionCall",
																"src": "17027:35:8"
															},
															"nativeSrc": "17027:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "17027:35:8"
														}
													]
												},
												"name": "store_literal_in_memory_24f78bdc540fa518f899558cbd02c2348ec59a00e6c73d111cf9aa107af4e447",
												"nativeSrc": "16842:227:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16940:6:8",
														"nodeType": "YulTypedName",
														"src": "16940:6:8",
														"type": ""
													}
												],
												"src": "16842:227:8"
											},
											{
												"body": {
													"nativeSrc": "17221:220:8",
													"nodeType": "YulBlock",
													"src": "17221:220:8",
													"statements": [
														{
															"nativeSrc": "17231:74:8",
															"nodeType": "YulAssignment",
															"src": "17231:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17297:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17297:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17302:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17302:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17238:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "17238:58:8"
																},
																"nativeSrc": "17238:67:8",
																"nodeType": "YulFunctionCall",
																"src": "17238:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17231:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17231:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17403:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17403:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24f78bdc540fa518f899558cbd02c2348ec59a00e6c73d111cf9aa107af4e447",
																	"nativeSrc": "17314:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "17314:88:8"
																},
																"nativeSrc": "17314:93:8",
																"nodeType": "YulFunctionCall",
																"src": "17314:93:8"
															},
															"nativeSrc": "17314:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "17314:93:8"
														},
														{
															"nativeSrc": "17416:19:8",
															"nodeType": "YulAssignment",
															"src": "17416:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17427:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17427:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17432:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17432:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17423:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17423:3:8"
																},
																"nativeSrc": "17423:12:8",
																"nodeType": "YulFunctionCall",
																"src": "17423:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17416:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17416:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24f78bdc540fa518f899558cbd02c2348ec59a00e6c73d111cf9aa107af4e447_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17075:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17209:3:8",
														"nodeType": "YulTypedName",
														"src": "17209:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17217:3:8",
														"nodeType": "YulTypedName",
														"src": "17217:3:8",
														"type": ""
													}
												],
												"src": "17075:366:8"
											},
											{
												"body": {
													"nativeSrc": "17618:248:8",
													"nodeType": "YulBlock",
													"src": "17618:248:8",
													"statements": [
														{
															"nativeSrc": "17628:26:8",
															"nodeType": "YulAssignment",
															"src": "17628:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17640:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17640:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17651:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17651:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17636:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17636:3:8"
																},
																"nativeSrc": "17636:18:8",
																"nodeType": "YulFunctionCall",
																"src": "17636:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17628:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17628:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17675:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17675:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17686:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17686:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17671:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17671:3:8"
																		},
																		"nativeSrc": "17671:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17671:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17694:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "17694:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17700:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17700:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17690:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17690:3:8"
																		},
																		"nativeSrc": "17690:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17690:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17664:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17664:6:8"
																},
																"nativeSrc": "17664:47:8",
																"nodeType": "YulFunctionCall",
																"src": "17664:47:8"
															},
															"nativeSrc": "17664:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "17664:47:8"
														},
														{
															"nativeSrc": "17720:139:8",
															"nodeType": "YulAssignment",
															"src": "17720:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17854:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17854:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24f78bdc540fa518f899558cbd02c2348ec59a00e6c73d111cf9aa107af4e447_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17728:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "17728:124:8"
																},
																"nativeSrc": "17728:131:8",
																"nodeType": "YulFunctionCall",
																"src": "17728:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17720:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17720:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24f78bdc540fa518f899558cbd02c2348ec59a00e6c73d111cf9aa107af4e447__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17447:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17598:9:8",
														"nodeType": "YulTypedName",
														"src": "17598:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17613:4:8",
														"nodeType": "YulTypedName",
														"src": "17613:4:8",
														"type": ""
													}
												],
												"src": "17447:419:8"
											},
											{
												"body": {
													"nativeSrc": "17978:67:8",
													"nodeType": "YulBlock",
													"src": "17978:67:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18000:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "18000:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18008:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18008:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17996:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17996:3:8"
																		},
																		"nativeSrc": "17996:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17996:14:8"
																	},
																	{
																		"hexValue": "5075626c69632073616c65206361702072656163686564",
																		"kind": "string",
																		"nativeSrc": "18012:25:8",
																		"nodeType": "YulLiteral",
																		"src": "18012:25:8",
																		"type": "",
																		"value": "Public sale cap reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17989:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17989:6:8"
																},
																"nativeSrc": "17989:49:8",
																"nodeType": "YulFunctionCall",
																"src": "17989:49:8"
															},
															"nativeSrc": "17989:49:8",
															"nodeType": "YulExpressionStatement",
															"src": "17989:49:8"
														}
													]
												},
												"name": "store_literal_in_memory_bf220db8b7e738831b38283f816668eeccdbb13d8b1decd6299cb3a7bc22448c",
												"nativeSrc": "17872:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17970:6:8",
														"nodeType": "YulTypedName",
														"src": "17970:6:8",
														"type": ""
													}
												],
												"src": "17872:173:8"
											},
											{
												"body": {
													"nativeSrc": "18197:220:8",
													"nodeType": "YulBlock",
													"src": "18197:220:8",
													"statements": [
														{
															"nativeSrc": "18207:74:8",
															"nodeType": "YulAssignment",
															"src": "18207:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18273:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18273:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18278:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18278:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18214:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "18214:58:8"
																},
																"nativeSrc": "18214:67:8",
																"nodeType": "YulFunctionCall",
																"src": "18214:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18207:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18207:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18379:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18379:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bf220db8b7e738831b38283f816668eeccdbb13d8b1decd6299cb3a7bc22448c",
																	"nativeSrc": "18290:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "18290:88:8"
																},
																"nativeSrc": "18290:93:8",
																"nodeType": "YulFunctionCall",
																"src": "18290:93:8"
															},
															"nativeSrc": "18290:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "18290:93:8"
														},
														{
															"nativeSrc": "18392:19:8",
															"nodeType": "YulAssignment",
															"src": "18392:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18403:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18403:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18408:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18408:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18399:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18399:3:8"
																},
																"nativeSrc": "18399:12:8",
																"nodeType": "YulFunctionCall",
																"src": "18399:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18392:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18392:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bf220db8b7e738831b38283f816668eeccdbb13d8b1decd6299cb3a7bc22448c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18051:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18185:3:8",
														"nodeType": "YulTypedName",
														"src": "18185:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18193:3:8",
														"nodeType": "YulTypedName",
														"src": "18193:3:8",
														"type": ""
													}
												],
												"src": "18051:366:8"
											},
											{
												"body": {
													"nativeSrc": "18594:248:8",
													"nodeType": "YulBlock",
													"src": "18594:248:8",
													"statements": [
														{
															"nativeSrc": "18604:26:8",
															"nodeType": "YulAssignment",
															"src": "18604:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18616:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "18616:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18627:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18627:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18612:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18612:3:8"
																},
																"nativeSrc": "18612:18:8",
																"nodeType": "YulFunctionCall",
																"src": "18612:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18604:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18604:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18651:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18651:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18662:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18662:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18647:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18647:3:8"
																		},
																		"nativeSrc": "18647:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18647:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18670:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "18670:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18676:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18676:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18666:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18666:3:8"
																		},
																		"nativeSrc": "18666:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18666:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18640:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18640:6:8"
																},
																"nativeSrc": "18640:47:8",
																"nodeType": "YulFunctionCall",
																"src": "18640:47:8"
															},
															"nativeSrc": "18640:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "18640:47:8"
														},
														{
															"nativeSrc": "18696:139:8",
															"nodeType": "YulAssignment",
															"src": "18696:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18830:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18830:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bf220db8b7e738831b38283f816668eeccdbb13d8b1decd6299cb3a7bc22448c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18704:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "18704:124:8"
																},
																"nativeSrc": "18704:131:8",
																"nodeType": "YulFunctionCall",
																"src": "18704:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18696:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18696:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf220db8b7e738831b38283f816668eeccdbb13d8b1decd6299cb3a7bc22448c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18423:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18574:9:8",
														"nodeType": "YulTypedName",
														"src": "18574:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18589:4:8",
														"nodeType": "YulTypedName",
														"src": "18589:4:8",
														"type": ""
													}
												],
												"src": "18423:419:8"
											},
											{
												"body": {
													"nativeSrc": "18954:64:8",
													"nodeType": "YulBlock",
													"src": "18954:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18976:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "18976:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18984:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18984:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18972:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18972:3:8"
																		},
																		"nativeSrc": "18972:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18972:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "18988:22:8",
																		"nodeType": "YulLiteral",
																		"src": "18988:22:8",
																		"type": "",
																		"value": "Invalid token amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18965:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18965:6:8"
																},
																"nativeSrc": "18965:46:8",
																"nodeType": "YulFunctionCall",
																"src": "18965:46:8"
															},
															"nativeSrc": "18965:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "18965:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58",
												"nativeSrc": "18848:170:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18946:6:8",
														"nodeType": "YulTypedName",
														"src": "18946:6:8",
														"type": ""
													}
												],
												"src": "18848:170:8"
											},
											{
												"body": {
													"nativeSrc": "19170:220:8",
													"nodeType": "YulBlock",
													"src": "19170:220:8",
													"statements": [
														{
															"nativeSrc": "19180:74:8",
															"nodeType": "YulAssignment",
															"src": "19180:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19246:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19246:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19251:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19251:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19187:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "19187:58:8"
																},
																"nativeSrc": "19187:67:8",
																"nodeType": "YulFunctionCall",
																"src": "19187:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19180:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19180:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19352:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19352:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58",
																	"nativeSrc": "19263:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "19263:88:8"
																},
																"nativeSrc": "19263:93:8",
																"nodeType": "YulFunctionCall",
																"src": "19263:93:8"
															},
															"nativeSrc": "19263:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "19263:93:8"
														},
														{
															"nativeSrc": "19365:19:8",
															"nodeType": "YulAssignment",
															"src": "19365:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19376:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19376:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19381:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19381:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19372:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19372:3:8"
																},
																"nativeSrc": "19372:12:8",
																"nodeType": "YulFunctionCall",
																"src": "19372:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19365:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19365:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19024:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19158:3:8",
														"nodeType": "YulTypedName",
														"src": "19158:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19166:3:8",
														"nodeType": "YulTypedName",
														"src": "19166:3:8",
														"type": ""
													}
												],
												"src": "19024:366:8"
											},
											{
												"body": {
													"nativeSrc": "19567:248:8",
													"nodeType": "YulBlock",
													"src": "19567:248:8",
													"statements": [
														{
															"nativeSrc": "19577:26:8",
															"nodeType": "YulAssignment",
															"src": "19577:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19589:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "19589:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19600:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19600:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19585:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19585:3:8"
																},
																"nativeSrc": "19585:18:8",
																"nodeType": "YulFunctionCall",
																"src": "19585:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19577:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19577:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19624:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19624:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19635:1:8",
																				"nodeType": "YulLiteral",
																				"src": "19635:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19620:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19620:3:8"
																		},
																		"nativeSrc": "19620:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19620:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19643:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "19643:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19649:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19649:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19639:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19639:3:8"
																		},
																		"nativeSrc": "19639:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19639:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19613:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19613:6:8"
																},
																"nativeSrc": "19613:47:8",
																"nodeType": "YulFunctionCall",
																"src": "19613:47:8"
															},
															"nativeSrc": "19613:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "19613:47:8"
														},
														{
															"nativeSrc": "19669:139:8",
															"nodeType": "YulAssignment",
															"src": "19669:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19803:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19803:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19677:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "19677:124:8"
																},
																"nativeSrc": "19677:131:8",
																"nodeType": "YulFunctionCall",
																"src": "19677:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19669:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19669:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19396:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19547:9:8",
														"nodeType": "YulTypedName",
														"src": "19547:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19562:4:8",
														"nodeType": "YulTypedName",
														"src": "19562:4:8",
														"type": ""
													}
												],
												"src": "19396:419:8"
											},
											{
												"body": {
													"nativeSrc": "19947:206:8",
													"nodeType": "YulBlock",
													"src": "19947:206:8",
													"statements": [
														{
															"nativeSrc": "19957:26:8",
															"nodeType": "YulAssignment",
															"src": "19957:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19969:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "19969:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19980:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19980:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19965:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19965:3:8"
																},
																"nativeSrc": "19965:18:8",
																"nodeType": "YulFunctionCall",
																"src": "19965:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19957:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19957:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20037:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20037:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20050:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20050:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20061:1:8",
																				"nodeType": "YulLiteral",
																				"src": "20061:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20046:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20046:3:8"
																		},
																		"nativeSrc": "20046:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20046:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19993:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "19993:43:8"
																},
																"nativeSrc": "19993:71:8",
																"nodeType": "YulFunctionCall",
																"src": "19993:71:8"
															},
															"nativeSrc": "19993:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "19993:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20118:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20118:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20131:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20131:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20142:2:8",
																				"nodeType": "YulLiteral",
																				"src": "20142:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20127:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20127:3:8"
																		},
																		"nativeSrc": "20127:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20127:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20074:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "20074:43:8"
																},
																"nativeSrc": "20074:72:8",
																"nodeType": "YulFunctionCall",
																"src": "20074:72:8"
															},
															"nativeSrc": "20074:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "20074:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "19821:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19911:9:8",
														"nodeType": "YulTypedName",
														"src": "19911:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19923:6:8",
														"nodeType": "YulTypedName",
														"src": "19923:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19931:6:8",
														"nodeType": "YulTypedName",
														"src": "19931:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19942:4:8",
														"nodeType": "YulTypedName",
														"src": "19942:4:8",
														"type": ""
													}
												],
												"src": "19821:332:8"
											},
											{
												"body": {
													"nativeSrc": "20201:48:8",
													"nodeType": "YulBlock",
													"src": "20201:48:8",
													"statements": [
														{
															"nativeSrc": "20211:32:8",
															"nodeType": "YulAssignment",
															"src": "20211:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20236:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "20236:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "20229:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "20229:6:8"
																		},
																		"nativeSrc": "20229:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20229:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20222:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20222:6:8"
																},
																"nativeSrc": "20222:21:8",
																"nodeType": "YulFunctionCall",
																"src": "20222:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "20211:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "20211:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "20159:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20183:5:8",
														"nodeType": "YulTypedName",
														"src": "20183:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "20193:7:8",
														"nodeType": "YulTypedName",
														"src": "20193:7:8",
														"type": ""
													}
												],
												"src": "20159:90:8"
											},
											{
												"body": {
													"nativeSrc": "20295:76:8",
													"nodeType": "YulBlock",
													"src": "20295:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "20349:16:8",
																"nodeType": "YulBlock",
																"src": "20349:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20358:1:8",
																					"nodeType": "YulLiteral",
																					"src": "20358:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20361:1:8",
																					"nodeType": "YulLiteral",
																					"src": "20361:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20351:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "20351:6:8"
																			},
																			"nativeSrc": "20351:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "20351:12:8"
																		},
																		"nativeSrc": "20351:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "20351:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20318:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "20318:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20340:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "20340:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "20325:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "20325:14:8"
																				},
																				"nativeSrc": "20325:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "20325:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20315:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "20315:2:8"
																		},
																		"nativeSrc": "20315:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20315:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20308:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20308:6:8"
																},
																"nativeSrc": "20308:40:8",
																"nodeType": "YulFunctionCall",
																"src": "20308:40:8"
															},
															"nativeSrc": "20305:60:8",
															"nodeType": "YulIf",
															"src": "20305:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "20255:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20288:5:8",
														"nodeType": "YulTypedName",
														"src": "20288:5:8",
														"type": ""
													}
												],
												"src": "20255:116:8"
											},
											{
												"body": {
													"nativeSrc": "20437:77:8",
													"nodeType": "YulBlock",
													"src": "20437:77:8",
													"statements": [
														{
															"nativeSrc": "20447:22:8",
															"nodeType": "YulAssignment",
															"src": "20447:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20462:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20462:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20456:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "20456:5:8"
																},
																"nativeSrc": "20456:13:8",
																"nodeType": "YulFunctionCall",
																"src": "20456:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20447:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "20447:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20502:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "20502:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "20478:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "20478:23:8"
																},
																"nativeSrc": "20478:30:8",
																"nodeType": "YulFunctionCall",
																"src": "20478:30:8"
															},
															"nativeSrc": "20478:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "20478:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "20377:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20415:6:8",
														"nodeType": "YulTypedName",
														"src": "20415:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20423:3:8",
														"nodeType": "YulTypedName",
														"src": "20423:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20431:5:8",
														"nodeType": "YulTypedName",
														"src": "20431:5:8",
														"type": ""
													}
												],
												"src": "20377:137:8"
											},
											{
												"body": {
													"nativeSrc": "20594:271:8",
													"nodeType": "YulBlock",
													"src": "20594:271:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "20640:83:8",
																"nodeType": "YulBlock",
																"src": "20640:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20642:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "20642:77:8"
																			},
																			"nativeSrc": "20642:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "20642:79:8"
																		},
																		"nativeSrc": "20642:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "20642:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20615:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "20615:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20624:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20624:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20611:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20611:3:8"
																		},
																		"nativeSrc": "20611:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20611:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20636:2:8",
																		"nodeType": "YulLiteral",
																		"src": "20636:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20607:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20607:3:8"
																},
																"nativeSrc": "20607:32:8",
																"nodeType": "YulFunctionCall",
																"src": "20607:32:8"
															},
															"nativeSrc": "20604:119:8",
															"nodeType": "YulIf",
															"src": "20604:119:8"
														},
														{
															"nativeSrc": "20733:125:8",
															"nodeType": "YulBlock",
															"src": "20733:125:8",
															"statements": [
																{
																	"nativeSrc": "20748:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20748:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20762:1:8",
																		"nodeType": "YulLiteral",
																		"src": "20762:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20752:6:8",
																			"nodeType": "YulTypedName",
																			"src": "20752:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20777:71:8",
																	"nodeType": "YulAssignment",
																	"src": "20777:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20820:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "20820:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20831:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "20831:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20816:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "20816:3:8"
																				},
																				"nativeSrc": "20816:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "20816:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20840:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "20840:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "20787:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "20787:28:8"
																		},
																		"nativeSrc": "20787:61:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20787:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20777:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "20777:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "20520:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20564:9:8",
														"nodeType": "YulTypedName",
														"src": "20564:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20575:7:8",
														"nodeType": "YulTypedName",
														"src": "20575:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20587:6:8",
														"nodeType": "YulTypedName",
														"src": "20587:6:8",
														"type": ""
													}
												],
												"src": "20520:345:8"
											},
											{
												"body": {
													"nativeSrc": "20899:152:8",
													"nodeType": "YulBlock",
													"src": "20899:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20916:1:8",
																		"nodeType": "YulLiteral",
																		"src": "20916:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20919:77:8",
																		"nodeType": "YulLiteral",
																		"src": "20919:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20909:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20909:6:8"
																},
																"nativeSrc": "20909:88:8",
																"nodeType": "YulFunctionCall",
																"src": "20909:88:8"
															},
															"nativeSrc": "20909:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "20909:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21013:1:8",
																		"nodeType": "YulLiteral",
																		"src": "21013:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21016:4:8",
																		"nodeType": "YulLiteral",
																		"src": "21016:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21006:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "21006:6:8"
																},
																"nativeSrc": "21006:15:8",
																"nodeType": "YulFunctionCall",
																"src": "21006:15:8"
															},
															"nativeSrc": "21006:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "21006:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21037:1:8",
																		"nodeType": "YulLiteral",
																		"src": "21037:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21040:4:8",
																		"nodeType": "YulLiteral",
																		"src": "21040:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21030:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "21030:6:8"
																},
																"nativeSrc": "21030:15:8",
																"nodeType": "YulFunctionCall",
																"src": "21030:15:8"
															},
															"nativeSrc": "21030:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "21030:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "20871:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "20871:180:8"
											},
											{
												"body": {
													"nativeSrc": "21101:147:8",
													"nodeType": "YulBlock",
													"src": "21101:147:8",
													"statements": [
														{
															"nativeSrc": "21111:25:8",
															"nodeType": "YulAssignment",
															"src": "21111:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21134:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21134:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21116:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "21116:17:8"
																},
																"nativeSrc": "21116:20:8",
																"nodeType": "YulFunctionCall",
																"src": "21116:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21111:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "21111:1:8"
																}
															]
														},
														{
															"nativeSrc": "21145:25:8",
															"nodeType": "YulAssignment",
															"src": "21145:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21168:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21168:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21150:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "21150:17:8"
																},
																"nativeSrc": "21150:20:8",
																"nodeType": "YulFunctionCall",
																"src": "21150:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21145:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "21145:1:8"
																}
															]
														},
														{
															"nativeSrc": "21179:16:8",
															"nodeType": "YulAssignment",
															"src": "21179:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21190:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21190:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21193:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21193:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21186:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21186:3:8"
																},
																"nativeSrc": "21186:9:8",
																"nodeType": "YulFunctionCall",
																"src": "21186:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "21179:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21179:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21219:22:8",
																"nodeType": "YulBlock",
																"src": "21219:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21221:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "21221:16:8"
																			},
																			"nativeSrc": "21221:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "21221:18:8"
																		},
																		"nativeSrc": "21221:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "21221:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21211:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21211:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "21214:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21214:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21208:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "21208:2:8"
																},
																"nativeSrc": "21208:10:8",
																"nodeType": "YulFunctionCall",
																"src": "21208:10:8"
															},
															"nativeSrc": "21205:36:8",
															"nodeType": "YulIf",
															"src": "21205:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "21057:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21088:1:8",
														"nodeType": "YulTypedName",
														"src": "21088:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21091:1:8",
														"nodeType": "YulTypedName",
														"src": "21091:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "21097:3:8",
														"nodeType": "YulTypedName",
														"src": "21097:3:8",
														"type": ""
													}
												],
												"src": "21057:191:8"
											},
											{
												"body": {
													"nativeSrc": "21420:300:8",
													"nodeType": "YulBlock",
													"src": "21420:300:8",
													"statements": [
														{
															"nativeSrc": "21430:26:8",
															"nodeType": "YulAssignment",
															"src": "21430:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21442:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "21442:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21453:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21453:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21438:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21438:3:8"
																},
																"nativeSrc": "21438:18:8",
																"nodeType": "YulFunctionCall",
																"src": "21438:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21430:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "21430:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21510:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "21510:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21523:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "21523:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21534:1:8",
																				"nodeType": "YulLiteral",
																				"src": "21534:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21519:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21519:3:8"
																		},
																		"nativeSrc": "21519:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21519:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21466:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "21466:43:8"
																},
																"nativeSrc": "21466:71:8",
																"nodeType": "YulFunctionCall",
																"src": "21466:71:8"
															},
															"nativeSrc": "21466:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "21466:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21591:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "21591:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21604:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "21604:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21615:2:8",
																				"nodeType": "YulLiteral",
																				"src": "21615:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21600:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21600:3:8"
																		},
																		"nativeSrc": "21600:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21600:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21547:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "21547:43:8"
																},
																"nativeSrc": "21547:72:8",
																"nodeType": "YulFunctionCall",
																"src": "21547:72:8"
															},
															"nativeSrc": "21547:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "21547:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21685:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "21685:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21698:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "21698:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21709:2:8",
																				"nodeType": "YulLiteral",
																				"src": "21709:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21694:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21694:3:8"
																		},
																		"nativeSrc": "21694:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21694:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_SalePhase_$1283_to_t_uint8_fromStack",
																	"nativeSrc": "21629:55:8",
																	"nodeType": "YulIdentifier",
																	"src": "21629:55:8"
																},
																"nativeSrc": "21629:84:8",
																"nodeType": "YulFunctionCall",
																"src": "21629:84:8"
															},
															"nativeSrc": "21629:84:8",
															"nodeType": "YulExpressionStatement",
															"src": "21629:84:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_enum$_SalePhase_$1283__to_t_uint256_t_uint256_t_uint8__fromStack_reversed",
												"nativeSrc": "21254:466:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21376:9:8",
														"nodeType": "YulTypedName",
														"src": "21376:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21388:6:8",
														"nodeType": "YulTypedName",
														"src": "21388:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21396:6:8",
														"nodeType": "YulTypedName",
														"src": "21396:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21404:6:8",
														"nodeType": "YulTypedName",
														"src": "21404:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21415:4:8",
														"nodeType": "YulTypedName",
														"src": "21415:4:8",
														"type": ""
													}
												],
												"src": "21254:466:8"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3220cb0e510e1fcc5b8ebbe7e0fb4f28a7eb74b62a1825d130d339146247e647(memPtr) {\n\n        mstore(add(memPtr, 0), \"Fallback function not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_3220cb0e510e1fcc5b8ebbe7e0fb4f28a7eb74b62a1825d130d339146247e647_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3220cb0e510e1fcc5b8ebbe7e0fb4f28a7eb74b62a1825d130d339146247e647(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3220cb0e510e1fcc5b8ebbe7e0fb4f28a7eb74b62a1825d130d339146247e647__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3220cb0e510e1fcc5b8ebbe7e0fb4f28a7eb74b62a1825d130d339146247e647_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_SalePhase_$1283(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_SalePhase_$1283(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_SalePhase_$1283(value)\n    }\n\n    function convert_t_enum$_SalePhase_$1283_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_SalePhase_$1283(value)\n    }\n\n    function abi_encode_t_enum$_SalePhase_$1283_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_SalePhase_$1283_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_SalePhase_$1283__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_SalePhase_$1283_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$799_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$799_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$799__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_11dceae1f6fe37f98654565689f256508e5e1d136e9204b15d7d6313600e3ba9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not in presale phase\")\n\n    }\n\n    function abi_encode_t_stringliteral_11dceae1f6fe37f98654565689f256508e5e1d136e9204b15d7d6313600e3ba9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_11dceae1f6fe37f98654565689f256508e5e1d136e9204b15d7d6313600e3ba9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_11dceae1f6fe37f98654565689f256508e5e1d136e9204b15d7d6313600e3ba9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_11dceae1f6fe37f98654565689f256508e5e1d136e9204b15d7d6313600e3ba9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f60a2877b0c2d535227e68c42b7651a75acbcf1c62616f00b8946788a0c807d7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Below presale minimum contributi\")\n\n        mstore(add(memPtr, 32), \"on\")\n\n    }\n\n    function abi_encode_t_stringliteral_f60a2877b0c2d535227e68c42b7651a75acbcf1c62616f00b8946788a0c807d7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f60a2877b0c2d535227e68c42b7651a75acbcf1c62616f00b8946788a0c807d7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f60a2877b0c2d535227e68c42b7651a75acbcf1c62616f00b8946788a0c807d7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f60a2877b0c2d535227e68c42b7651a75acbcf1c62616f00b8946788a0c807d7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f212a1a49cb2a4d8bd4c7344416f62ab0139924f122c28867e8d08455ec6aac8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds presale maximum contribu\")\n\n        mstore(add(memPtr, 32), \"tion\")\n\n    }\n\n    function abi_encode_t_stringliteral_f212a1a49cb2a4d8bd4c7344416f62ab0139924f122c28867e8d08455ec6aac8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_f212a1a49cb2a4d8bd4c7344416f62ab0139924f122c28867e8d08455ec6aac8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f212a1a49cb2a4d8bd4c7344416f62ab0139924f122c28867e8d08455ec6aac8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f212a1a49cb2a4d8bd4c7344416f62ab0139924f122c28867e8d08455ec6aac8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_039875f28fd62c64eb2a7c30f6ed91c70a45e101ec247c9ef31897f9d7c81bf0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale cap reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_039875f28fd62c64eb2a7c30f6ed91c70a45e101ec247c9ef31897f9d7c81bf0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_039875f28fd62c64eb2a7c30f6ed91c70a45e101ec247c9ef31897f9d7c81bf0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_039875f28fd62c64eb2a7c30f6ed91c70a45e101ec247c9ef31897f9d7c81bf0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_039875f28fd62c64eb2a7c30f6ed91c70a45e101ec247c9ef31897f9d7c81bf0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f538c3dae3ae556c2667197f31eeb6cee0b2916f588ec055ee0529d83d1317f1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sale is finished\")\n\n    }\n\n    function abi_encode_t_stringliteral_f538c3dae3ae556c2667197f31eeb6cee0b2916f588ec055ee0529d83d1317f1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_f538c3dae3ae556c2667197f31eeb6cee0b2916f588ec055ee0529d83d1317f1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f538c3dae3ae556c2667197f31eeb6cee0b2916f588ec055ee0529d83d1317f1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f538c3dae3ae556c2667197f31eeb6cee0b2916f588ec055ee0529d83d1317f1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a4d0eed3cde0c3bb2a26113f40258e6b92434d0336da732b006592277caac580(memPtr) {\n\n        mstore(add(memPtr, 0), \"No presale contribution to refun\")\n\n        mstore(add(memPtr, 32), \"d\")\n\n    }\n\n    function abi_encode_t_stringliteral_a4d0eed3cde0c3bb2a26113f40258e6b92434d0336da732b006592277caac580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_a4d0eed3cde0c3bb2a26113f40258e6b92434d0336da732b006592277caac580(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a4d0eed3cde0c3bb2a26113f40258e6b92434d0336da732b006592277caac580__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a4d0eed3cde0c3bb2a26113f40258e6b92434d0336da732b006592277caac580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_170e0e05573eb0a178e40db61f717720b74467c1c2a75d6e20c5aae44ea7513c(memPtr) {\n\n        mstore(add(memPtr, 0), \"No public sale contribution to r\")\n\n        mstore(add(memPtr, 32), \"efund\")\n\n    }\n\n    function abi_encode_t_stringliteral_170e0e05573eb0a178e40db61f717720b74467c1c2a75d6e20c5aae44ea7513c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_170e0e05573eb0a178e40db61f717720b74467c1c2a75d6e20c5aae44ea7513c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_170e0e05573eb0a178e40db61f717720b74467c1c2a75d6e20c5aae44ea7513c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_170e0e05573eb0a178e40db61f717720b74467c1c2a75d6e20c5aae44ea7513c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Refund failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1bdadf08185d5508cdbdc01e2a97dd384f3d5d49a4e81f930d8ce61cbb46eaa3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not in public sale phase\")\n\n    }\n\n    function abi_encode_t_stringliteral_1bdadf08185d5508cdbdc01e2a97dd384f3d5d49a4e81f930d8ce61cbb46eaa3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_1bdadf08185d5508cdbdc01e2a97dd384f3d5d49a4e81f930d8ce61cbb46eaa3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1bdadf08185d5508cdbdc01e2a97dd384f3d5d49a4e81f930d8ce61cbb46eaa3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1bdadf08185d5508cdbdc01e2a97dd384f3d5d49a4e81f930d8ce61cbb46eaa3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4a416c07eaf5249727c707e8ce66fa46914920413139e2355062a65d939e1866(memPtr) {\n\n        mstore(add(memPtr, 0), \"Below public sale minimum contri\")\n\n        mstore(add(memPtr, 32), \"bution\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a416c07eaf5249727c707e8ce66fa46914920413139e2355062a65d939e1866_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4a416c07eaf5249727c707e8ce66fa46914920413139e2355062a65d939e1866(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a416c07eaf5249727c707e8ce66fa46914920413139e2355062a65d939e1866__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a416c07eaf5249727c707e8ce66fa46914920413139e2355062a65d939e1866_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24f78bdc540fa518f899558cbd02c2348ec59a00e6c73d111cf9aa107af4e447(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds public sale maximum cont\")\n\n        mstore(add(memPtr, 32), \"ribution\")\n\n    }\n\n    function abi_encode_t_stringliteral_24f78bdc540fa518f899558cbd02c2348ec59a00e6c73d111cf9aa107af4e447_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_24f78bdc540fa518f899558cbd02c2348ec59a00e6c73d111cf9aa107af4e447(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24f78bdc540fa518f899558cbd02c2348ec59a00e6c73d111cf9aa107af4e447__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24f78bdc540fa518f899558cbd02c2348ec59a00e6c73d111cf9aa107af4e447_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bf220db8b7e738831b38283f816668eeccdbb13d8b1decd6299cb3a7bc22448c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Public sale cap reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_bf220db8b7e738831b38283f816668eeccdbb13d8b1decd6299cb3a7bc22448c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_bf220db8b7e738831b38283f816668eeccdbb13d8b1decd6299cb3a7bc22448c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bf220db8b7e738831b38283f816668eeccdbb13d8b1decd6299cb3a7bc22448c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bf220db8b7e738831b38283f816668eeccdbb13d8b1decd6299cb3a7bc22448c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_enum$_SalePhase_$1283__to_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_enum$_SalePhase_$1283_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x122 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87E449C3 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xC7D17FD1 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xC7D17FD1 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xE59C9510 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xFEFAE016 EQ PUSH2 0x402 JUMPI PUSH2 0x162 JUMP JUMPDEST DUP1 PUSH4 0x87E449C3 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xA43BE57B EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xB5545A3C EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xC4849847 EQ PUSH2 0x366 JUMPI PUSH2 0x162 JUMP JUMPDEST DUP1 PUSH4 0x477F1EBA GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x477F1EBA EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x63D5502F EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x64826B7A EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x7146E4FA EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D0 JUMPI PUSH2 0x162 JUMP JUMPDEST DUP1 PUSH4 0x269D3B4 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x4C98B2B EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x55AD42E EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x2A517AB2 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x35F74869 EQ PUSH2 0x1DA JUMPI PUSH2 0x162 JUMP JUMPDEST CALLDATASIZE PUSH2 0x162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159 SWAP1 PUSH2 0x12FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16E PUSH2 0x42A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x61D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x138F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x290 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH2 0x719 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FA PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH2 0x759 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH2 0x802 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A4 PUSH2 0xB7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH2 0xC23 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xE16 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EC PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x428 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0xEBF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x43E JUMPI PUSH2 0x43D PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x45F JUMPI PUSH2 0x45E PUSH2 0x131C JUMP JUMPDEST JUMPDEST EQ PUSH2 0x49F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x496 SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD CALLVALUE LT ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DB SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD CALLVALUE GT ISZERO PUSH2 0x529 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x520 SWAP1 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x53F CALLVALUE SELFBALANCE PUSH2 0xFF8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x577 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D0 CALLVALUE PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xFF8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x61B CALLER CALLVALUE PUSH2 0x100D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x625 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x638 JUMPI PUSH2 0x637 PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x659 JUMPI PUSH2 0x658 PUSH2 0x131C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x699 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x690 SWAP1 PUSH2 0x179C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6BE JUMPI PUSH2 0x6BD PUSH2 0x131C JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x721 PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x72A PUSH0 PUSH2 0x11DC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x761 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x775 JUMPI PUSH2 0x774 PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x796 JUMPI PUSH2 0x795 PUSH2 0x131C JUMP JUMPDEST JUMPDEST EQ PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CD SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7FB JUMPI PUSH2 0x7FA PUSH2 0x131C JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x815 JUMPI PUSH2 0x814 PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x836 JUMPI PUSH2 0x835 PUSH2 0x131C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86D SWAP1 PUSH2 0x179C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x88B JUMPI PUSH2 0x88A PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8AC JUMPI PUSH2 0x8AB PUSH2 0x131C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x97A JUMPI PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x182A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x98E JUMPI PUSH2 0x98D PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9AF JUMPI PUSH2 0x9AE PUSH2 0x131C JUMP JUMPDEST JUMPDEST SUB PUSH2 0xA79 JUMPI PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xA36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xA9F SWAP1 PUSH2 0x1903 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xADE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB19 SWAP1 PUSH2 0x1961 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x358FE4192934D3BF28AE181FEDA1F4BD08CA67F5E2FAD55582CCE5EB67304AE9 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB68 SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB82 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB96 JUMPI PUSH2 0xB95 PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBB7 JUMPI PUSH2 0xBB6 PUSH2 0x131C JUMP JUMPDEST JUMPDEST EQ PUSH2 0xBF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEE SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC1C JUMPI PUSH2 0xC1B PUSH2 0x131C JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC37 JUMPI PUSH2 0xC36 PUSH2 0x131C JUMP JUMPDEST JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC58 JUMPI PUSH2 0xC57 PUSH2 0x131C JUMP JUMPDEST JUMPDEST EQ PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8F SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD CALLVALUE LT ISZERO PUSH2 0xCDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP1 PUSH2 0x1A57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD CALLVALUE GT ISZERO PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD19 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xD38 CALLVALUE SELFBALANCE PUSH2 0xFF8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0xD79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD70 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC9 CALLVALUE PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xFF8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE14 CALLER CALLVALUE PUSH2 0x100D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE1E PUSH2 0x1155 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE85 SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE97 DUP2 PUSH2 0x11DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xEC7 PUSH2 0x1155 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xF09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF00 SWAP1 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF65 SWAP3 SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF81 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA5 SWAP2 SWAP1 PUSH2 0x1C2F JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x16B0DA2FFCB90C6723317BD637D9AAD7F04711F42BBE0AC0918EBE10F1F9001C DUP3 PUSH1 0x40 MLOAD PUSH2 0xFEC SWAP2 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1005 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP1 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AF SWAP3 SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10CB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10EF SWAP2 SWAP1 PUSH2 0x1C2F JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7BD967119635E499EDB871F00E988945FC967531C4DFA79A630A18ED98CF1EB DUP3 DUP5 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1148 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x115D PUSH2 0x129D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x117B PUSH2 0x732 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11DA JUMPI PUSH2 0x119E PUSH2 0x129D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D1 SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x46616C6C6261636B2066756E6374696F6E206E6F7420616C6C6F776564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12E8 PUSH1 0x1D DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F3 DUP3 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1315 DUP2 PUSH2 0x12DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x135A JUMPI PUSH2 0x1359 PUSH2 0x131C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x136A DUP3 PUSH2 0x1349 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1379 DUP3 PUSH2 0x135D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1389 DUP2 PUSH2 0x136F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1380 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BA DUP2 PUSH2 0x13A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x13B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1406 DUP3 PUSH2 0x13DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1416 DUP2 PUSH2 0x13FC JUMP JUMPDEST DUP2 EQ PUSH2 0x1420 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1431 DUP2 PUSH2 0x140D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x144C JUMPI PUSH2 0x144B PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1459 DUP5 DUP3 DUP6 ADD PUSH2 0x1423 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x146B DUP2 PUSH2 0x13FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1484 PUSH0 DUP4 ADD DUP5 PUSH2 0x1462 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14AD PUSH2 0x14A8 PUSH2 0x14A3 DUP5 PUSH2 0x13DD JUMP JUMPDEST PUSH2 0x148A JUMP JUMPDEST PUSH2 0x13DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14BE DUP3 PUSH2 0x1493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14CF DUP3 PUSH2 0x14B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DF DUP2 PUSH2 0x14C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F8 PUSH0 DUP4 ADD DUP5 PUSH2 0x14D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1507 DUP2 PUSH2 0x13A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1511 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1522 DUP2 PUSH2 0x14FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x153E JUMPI PUSH2 0x153D PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x154B DUP6 DUP3 DUP7 ADD PUSH2 0x1423 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x155C DUP6 DUP3 DUP7 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420696E2070726573616C65207068617365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x159A PUSH1 0x14 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x15A5 DUP3 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15C7 DUP2 PUSH2 0x158E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42656C6F772070726573616C65206D696E696D756D20636F6E74726962757469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1628 PUSH1 0x22 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1633 DUP3 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1655 DUP2 PUSH2 0x161C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x457863656564732070726573616C65206D6178696D756D20636F6E7472696275 PUSH0 DUP3 ADD MSTORE PUSH32 0x74696F6E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16B6 PUSH1 0x24 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x16C1 DUP3 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16E3 DUP2 PUSH2 0x16AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C6520636170207265616368656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x171E PUSH1 0x13 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1729 DUP3 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x174B DUP2 PUSH2 0x1712 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616C652069732066696E697368656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1786 PUSH1 0x10 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1791 DUP3 PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17B3 DUP2 PUSH2 0x177A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2070726573616C6520636F6E747269627574696F6E20746F20726566756E PUSH0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1814 PUSH1 0x21 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x181F DUP3 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1841 DUP2 PUSH2 0x1808 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207075626C69632073616C6520636F6E747269627574696F6E20746F2072 PUSH0 DUP3 ADD MSTORE PUSH32 0x6566756E64000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18A2 PUSH1 0x25 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x18AD DUP3 PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18CF DUP2 PUSH2 0x1896 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x18EE PUSH0 DUP4 PUSH2 0x18D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F9 DUP3 PUSH2 0x18E0 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x190D DUP3 PUSH2 0x18E3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526566756E64206661696C656400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x194B PUSH1 0xD DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1956 DUP3 PUSH2 0x1917 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1978 DUP2 PUSH2 0x193F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420696E207075626C69632073616C652070686173650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19B3 PUSH1 0x18 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BE DUP3 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19E0 DUP2 PUSH2 0x19A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42656C6F77207075626C69632073616C65206D696E696D756D20636F6E747269 PUSH0 DUP3 ADD MSTORE PUSH32 0x627574696F6E0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A41 PUSH1 0x26 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4C DUP3 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A6E DUP2 PUSH2 0x1A35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473207075626C69632073616C65206D6178696D756D20636F6E74 PUSH0 DUP3 ADD MSTORE PUSH32 0x7269627574696F6E000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACF PUSH1 0x28 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADA DUP3 PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AFC DUP2 PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5075626C69632073616C65206361702072656163686564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B37 PUSH1 0x17 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B42 DUP3 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B64 DUP2 PUSH2 0x1B2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616D6F756E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9F PUSH1 0x14 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAA DUP3 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BCC DUP2 PUSH2 0x1B93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BE6 PUSH0 DUP4 ADD DUP6 PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x1BF3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13B1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C0E DUP2 PUSH2 0x1BFA JUMP JUMPDEST DUP2 EQ PUSH2 0x1C18 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C29 DUP2 PUSH2 0x1C05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C44 JUMPI PUSH2 0x1C43 PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C51 DUP5 DUP3 DUP6 ADD PUSH2 0x1C1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C91 DUP3 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9C DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CB4 JUMPI PUSH2 0x1CB3 PUSH2 0x1C5A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CCD PUSH0 DUP4 ADD DUP7 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x1CDA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x1CE7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1380 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xD0 CALLDATASIZE SWAP8 0xF6 PUSH27 0xB737B582C2428BD78FEC868096D54E8C64CA65FEAD28D72F25E064 PUSH20 0x6F6C634300081700330000000000000000000000 ",
							"sourceMap": "232:5025:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5207:39;;;;;;;;;;:::i;:::-;;;;;;;;232:5025;;;;2603:499;;;:::i;:::-;;2241:110;;;;;;;;;;;;;:::i;:::-;;804:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;513:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;671:58;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;609:55;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;358:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;390:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;560:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;469:37:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2359:112:7;;;;;;;;;;;;;:::i;:::-;;4349:769;;;;;;;;;;;;;:::i;:::-;;425:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2479:116;;;;;;;;;;;;;:::i;:::-;;3110:532;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;306:18:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4074:267;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2603:499;1156:17;1140:33;;;;;;;;:::i;:::-;;:12;;;;;;;;;;;:33;;;;;;;;:::i;:::-;;;1132:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2700:22:::1;;2687:9;:35;;2679:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2793:22;;2780:9;:35;;2772:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;2915:10;;2875:36;2901:9;2875:21;:25;;:36;;;;:::i;:::-;:50;;2867:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2997:47;3034:9;2997:20;:32;3018:10;2997:32;;;;;;;;;;;;;;;;:36;;:47;;;;:::i;:::-;2962:20;:32;2983:10;2962:32;;;;;;;;;;;;;;;:82;;;;3055:39;3072:10;3084:9;3055:16;:39::i;:::-;2603:499::o:0;2241:110::-;1531:13:0;:11;:13::i;:::-;1431:18:7::1;1415:34:::0;::::1;;;;;;;:::i;:::-;;:12;;;;;;;;;;;:34;;;;;;;;:::i;:::-;;::::0;1407:63:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2326:17:::2;2311:12;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2241:110::o:0;804:29::-;;;;;;;;;;;;;:::o;513:40::-;;;;:::o;671:58::-;;;;;;;;;;;;;;;;;:::o;609:55::-;;;;;;;;;;;;;;;;;:::o;358:25::-;;;;:::o;390:28::-;;;;:::o;560:40::-;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;469:37:7:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2359:112:7:-;1531:13:0;:11;:13::i;:::-;1156:17:7::1;1140:33;;;;;;;;:::i;:::-;;:12;;;;;;;;;;;:33;;;;;;;;:::i;:::-;;;1132:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2443:20:::2;2428:12;;:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2359:112::o:0;4349:769::-;1431:18;1415:34;;;;;;;;:::i;:::-;;:12;;;;;;;;;;;:34;;;;;;;;:::i;:::-;;;1407:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4408:20:::1;4459:17;4443:33;;;;;;;;:::i;:::-;;:12;;;;;;;;;;;:33;;;;;;;;:::i;:::-;;::::0;4439:501:::1;;4508:20;:32;4529:10;4508:32;;;;;;;;;;;;;;;;4493:47;;4578:1;4563:12;:16;4555:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4667:1;4632:20;:32;4653:10;4632:32;;;;;;;;;;;;;;;:36;;;;4439:501;;;4706:20;4690:36;;;;;;;;:::i;:::-;;:12;;;;;;;;;;;:36;;;;;;;;:::i;:::-;;::::0;4686:254:::1;;4758:23;:35;4782:10;4758:35;;;;;;;;;;;;;;;;4743:50;;4831:1;4816:12;:16;4808:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;4927:1;4889:23;:35;4913:10;4889:35;;;;;;;;;;;;;;;:39;;;;4686:254;4439:501;4953:12;4971:10;:15;;4994:12;4971:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4952:59;;;5030:7;5022:33;;;;;;;;;;;;:::i;:::-;;;;;;;;;5085:10;5071:39;;;5097:12;5071:39;;;;;;:::i;:::-;;;;;;;;4397:721;;4349:769::o:0;425:37::-;;;;:::o;2479:116::-;1531:13:0;:11;:13::i;:::-;1292:20:7::1;1276:36;;;;;;;;:::i;:::-;;:12;;;;;;;;;;;:36;;;;;;;;:::i;:::-;;;1268:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2569:18:::2;2554:12;;:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2479:116::o:0;3110:532::-;1292:20;1276:36;;;;;;;;:::i;:::-;;:12;;;;;;;;;;;:36;;;;;;;;:::i;:::-;;;1268:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3213:25:::1;;3200:9;:38;;3192:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;3313:25;;3300:9;:38;;3292:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;3442:13;;3402:36;3428:9;3402:21;:25;;:36;;;;:::i;:::-;:53;;3394:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;3534:50;3574:9;3534:23;:35;3558:10;3534:35;;;;;;;;;;;;;;;;:39;;:50;;;;:::i;:::-;3496:23;:35;3520:10;3496:35;;;;;;;;;;;;;;;:88;;;;3595:39;3612:10;3624:9;3595:16;:39::i;:::-;3110:532::o:0;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;306:18:7:-;;;;;;;;;;;;;:::o;4074:267::-;1531:13:0;:11;:13::i;:::-;4201:1:7::1;4187:11;:15;4179:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;4238:5;;;;;;;;;;;:14;;;4253:9;4264:11;4238:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4310:9;4292:41;;;4321:11;4292:41;;;;;;:::i;:::-;;;;;;;;4074:267:::0;;:::o;2755:96:6:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3650:416:7:-;3736:19;3758:11;3736:33;;3899:1;3885:11;:15;3877:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;3938:5;;;;;;;;;;;:14;;;3953:9;3964:11;3938:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4008:9;3992:66;;;4019:11;4032;4045:12;;;;;;;;;;;3992:66;;;;;;;;:::i;:::-;;;;;;;;3725:341;3650:416;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;7:169:8:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:179::-;322:31;318:1;310:6;306:14;299:55;182:179;:::o;367:366::-;509:3;530:67;594:2;589:3;530:67;:::i;:::-;523:74;;606:93;695:3;606:93;:::i;:::-;724:2;719:3;715:12;708:19;;367:366;;;:::o;739:419::-;905:4;943:2;932:9;928:18;920:26;;992:9;986:4;982:20;978:1;967:9;963:17;956:47;1020:131;1146:4;1020:131;:::i;:::-;1012:139;;739:419;;;:::o;1164:180::-;1212:77;1209:1;1202:88;1309:4;1306:1;1299:15;1333:4;1330:1;1323:15;1350:119;1437:1;1430:5;1427:12;1417:46;;1443:18;;:::i;:::-;1417:46;1350:119;:::o;1475:139::-;1526:7;1555:5;1544:16;;1561:47;1602:5;1561:47;:::i;:::-;1475:139;;;:::o;1620:::-;1682:9;1715:38;1747:5;1715:38;:::i;:::-;1702:51;;1620:139;;;:::o;1765:155::-;1864:49;1907:5;1864:49;:::i;:::-;1859:3;1852:62;1765:155;;:::o;1926:246::-;2031:4;2069:2;2058:9;2054:18;2046:26;;2082:83;2162:1;2151:9;2147:17;2138:6;2082:83;:::i;:::-;1926:246;;;;:::o;2178:77::-;2215:7;2244:5;2233:16;;2178:77;;;:::o;2261:118::-;2348:24;2366:5;2348:24;:::i;:::-;2343:3;2336:37;2261:118;;:::o;2385:222::-;2478:4;2516:2;2505:9;2501:18;2493:26;;2529:71;2597:1;2586:9;2582:17;2573:6;2529:71;:::i;:::-;2385:222;;;;:::o;2694:117::-;2803:1;2800;2793:12;2940:126;2977:7;3017:42;3010:5;3006:54;2995:65;;2940:126;;;:::o;3072:96::-;3109:7;3138:24;3156:5;3138:24;:::i;:::-;3127:35;;3072:96;;;:::o;3174:122::-;3247:24;3265:5;3247:24;:::i;:::-;3240:5;3237:35;3227:63;;3286:1;3283;3276:12;3227:63;3174:122;:::o;3302:139::-;3348:5;3386:6;3373:20;3364:29;;3402:33;3429:5;3402:33;:::i;:::-;3302:139;;;;:::o;3447:329::-;3506:6;3555:2;3543:9;3534:7;3530:23;3526:32;3523:119;;;3561:79;;:::i;:::-;3523:119;3681:1;3706:53;3751:7;3742:6;3731:9;3727:22;3706:53;:::i;:::-;3696:63;;3652:117;3447:329;;;;:::o;3782:118::-;3869:24;3887:5;3869:24;:::i;:::-;3864:3;3857:37;3782:118;;:::o;3906:222::-;3999:4;4037:2;4026:9;4022:18;4014:26;;4050:71;4118:1;4107:9;4103:17;4094:6;4050:71;:::i;:::-;3906:222;;;;:::o;4134:60::-;4162:3;4183:5;4176:12;;4134:60;;;:::o;4200:142::-;4250:9;4283:53;4301:34;4310:24;4328:5;4310:24;:::i;:::-;4301:34;:::i;:::-;4283:53;:::i;:::-;4270:66;;4200:142;;;:::o;4348:126::-;4398:9;4431:37;4462:5;4431:37;:::i;:::-;4418:50;;4348:126;;;:::o;4480:139::-;4543:9;4576:37;4607:5;4576:37;:::i;:::-;4563:50;;4480:139;;;:::o;4625:157::-;4725:50;4769:5;4725:50;:::i;:::-;4720:3;4713:63;4625:157;;:::o;4788:248::-;4894:4;4932:2;4921:9;4917:18;4909:26;;4945:84;5026:1;5015:9;5011:17;5002:6;4945:84;:::i;:::-;4788:248;;;;:::o;5042:122::-;5115:24;5133:5;5115:24;:::i;:::-;5108:5;5105:35;5095:63;;5154:1;5151;5144:12;5095:63;5042:122;:::o;5170:139::-;5216:5;5254:6;5241:20;5232:29;;5270:33;5297:5;5270:33;:::i;:::-;5170:139;;;;:::o;5315:474::-;5383:6;5391;5440:2;5428:9;5419:7;5415:23;5411:32;5408:119;;;5446:79;;:::i;:::-;5408:119;5566:1;5591:53;5636:7;5627:6;5616:9;5612:22;5591:53;:::i;:::-;5581:63;;5537:117;5693:2;5719:53;5764:7;5755:6;5744:9;5740:22;5719:53;:::i;:::-;5709:63;;5664:118;5315:474;;;;;:::o;5795:170::-;5935:22;5931:1;5923:6;5919:14;5912:46;5795:170;:::o;5971:366::-;6113:3;6134:67;6198:2;6193:3;6134:67;:::i;:::-;6127:74;;6210:93;6299:3;6210:93;:::i;:::-;6328:2;6323:3;6319:12;6312:19;;5971:366;;;:::o;6343:419::-;6509:4;6547:2;6536:9;6532:18;6524:26;;6596:9;6590:4;6586:20;6582:1;6571:9;6567:17;6560:47;6624:131;6750:4;6624:131;:::i;:::-;6616:139;;6343:419;;;:::o;6768:221::-;6908:34;6904:1;6896:6;6892:14;6885:58;6977:4;6972:2;6964:6;6960:15;6953:29;6768:221;:::o;6995:366::-;7137:3;7158:67;7222:2;7217:3;7158:67;:::i;:::-;7151:74;;7234:93;7323:3;7234:93;:::i;:::-;7352:2;7347:3;7343:12;7336:19;;6995:366;;;:::o;7367:419::-;7533:4;7571:2;7560:9;7556:18;7548:26;;7620:9;7614:4;7610:20;7606:1;7595:9;7591:17;7584:47;7648:131;7774:4;7648:131;:::i;:::-;7640:139;;7367:419;;;:::o;7792:223::-;7932:34;7928:1;7920:6;7916:14;7909:58;8001:6;7996:2;7988:6;7984:15;7977:31;7792:223;:::o;8021:366::-;8163:3;8184:67;8248:2;8243:3;8184:67;:::i;:::-;8177:74;;8260:93;8349:3;8260:93;:::i;:::-;8378:2;8373:3;8369:12;8362:19;;8021:366;;;:::o;8393:419::-;8559:4;8597:2;8586:9;8582:18;8574:26;;8646:9;8640:4;8636:20;8632:1;8621:9;8617:17;8610:47;8674:131;8800:4;8674:131;:::i;:::-;8666:139;;8393:419;;;:::o;8818:169::-;8958:21;8954:1;8946:6;8942:14;8935:45;8818:169;:::o;8993:366::-;9135:3;9156:67;9220:2;9215:3;9156:67;:::i;:::-;9149:74;;9232:93;9321:3;9232:93;:::i;:::-;9350:2;9345:3;9341:12;9334:19;;8993:366;;;:::o;9365:419::-;9531:4;9569:2;9558:9;9554:18;9546:26;;9618:9;9612:4;9608:20;9604:1;9593:9;9589:17;9582:47;9646:131;9772:4;9646:131;:::i;:::-;9638:139;;9365:419;;;:::o;9790:166::-;9930:18;9926:1;9918:6;9914:14;9907:42;9790:166;:::o;9962:366::-;10104:3;10125:67;10189:2;10184:3;10125:67;:::i;:::-;10118:74;;10201:93;10290:3;10201:93;:::i;:::-;10319:2;10314:3;10310:12;10303:19;;9962:366;;;:::o;10334:419::-;10500:4;10538:2;10527:9;10523:18;10515:26;;10587:9;10581:4;10577:20;10573:1;10562:9;10558:17;10551:47;10615:131;10741:4;10615:131;:::i;:::-;10607:139;;10334:419;;;:::o;10759:220::-;10899:34;10895:1;10887:6;10883:14;10876:58;10968:3;10963:2;10955:6;10951:15;10944:28;10759:220;:::o;10985:366::-;11127:3;11148:67;11212:2;11207:3;11148:67;:::i;:::-;11141:74;;11224:93;11313:3;11224:93;:::i;:::-;11342:2;11337:3;11333:12;11326:19;;10985:366;;;:::o;11357:419::-;11523:4;11561:2;11550:9;11546:18;11538:26;;11610:9;11604:4;11600:20;11596:1;11585:9;11581:17;11574:47;11638:131;11764:4;11638:131;:::i;:::-;11630:139;;11357:419;;;:::o;11782:224::-;11922:34;11918:1;11910:6;11906:14;11899:58;11991:7;11986:2;11978:6;11974:15;11967:32;11782:224;:::o;12012:366::-;12154:3;12175:67;12239:2;12234:3;12175:67;:::i;:::-;12168:74;;12251:93;12340:3;12251:93;:::i;:::-;12369:2;12364:3;12360:12;12353:19;;12012:366;;;:::o;12384:419::-;12550:4;12588:2;12577:9;12573:18;12565:26;;12637:9;12631:4;12627:20;12623:1;12612:9;12608:17;12601:47;12665:131;12791:4;12665:131;:::i;:::-;12657:139;;12384:419;;;:::o;12809:147::-;12910:11;12947:3;12932:18;;12809:147;;;;:::o;12962:114::-;;:::o;13082:398::-;13241:3;13262:83;13343:1;13338:3;13262:83;:::i;:::-;13255:90;;13354:93;13443:3;13354:93;:::i;:::-;13472:1;13467:3;13463:11;13456:18;;13082:398;;;:::o;13486:379::-;13670:3;13692:147;13835:3;13692:147;:::i;:::-;13685:154;;13856:3;13849:10;;13486:379;;;:::o;13871:163::-;14011:15;14007:1;13999:6;13995:14;13988:39;13871:163;:::o;14040:366::-;14182:3;14203:67;14267:2;14262:3;14203:67;:::i;:::-;14196:74;;14279:93;14368:3;14279:93;:::i;:::-;14397:2;14392:3;14388:12;14381:19;;14040:366;;;:::o;14412:419::-;14578:4;14616:2;14605:9;14601:18;14593:26;;14665:9;14659:4;14655:20;14651:1;14640:9;14636:17;14629:47;14693:131;14819:4;14693:131;:::i;:::-;14685:139;;14412:419;;;:::o;14837:174::-;14977:26;14973:1;14965:6;14961:14;14954:50;14837:174;:::o;15017:366::-;15159:3;15180:67;15244:2;15239:3;15180:67;:::i;:::-;15173:74;;15256:93;15345:3;15256:93;:::i;:::-;15374:2;15369:3;15365:12;15358:19;;15017:366;;;:::o;15389:419::-;15555:4;15593:2;15582:9;15578:18;15570:26;;15642:9;15636:4;15632:20;15628:1;15617:9;15613:17;15606:47;15670:131;15796:4;15670:131;:::i;:::-;15662:139;;15389:419;;;:::o;15814:225::-;15954:34;15950:1;15942:6;15938:14;15931:58;16023:8;16018:2;16010:6;16006:15;15999:33;15814:225;:::o;16045:366::-;16187:3;16208:67;16272:2;16267:3;16208:67;:::i;:::-;16201:74;;16284:93;16373:3;16284:93;:::i;:::-;16402:2;16397:3;16393:12;16386:19;;16045:366;;;:::o;16417:419::-;16583:4;16621:2;16610:9;16606:18;16598:26;;16670:9;16664:4;16660:20;16656:1;16645:9;16641:17;16634:47;16698:131;16824:4;16698:131;:::i;:::-;16690:139;;16417:419;;;:::o;16842:227::-;16982:34;16978:1;16970:6;16966:14;16959:58;17051:10;17046:2;17038:6;17034:15;17027:35;16842:227;:::o;17075:366::-;17217:3;17238:67;17302:2;17297:3;17238:67;:::i;:::-;17231:74;;17314:93;17403:3;17314:93;:::i;:::-;17432:2;17427:3;17423:12;17416:19;;17075:366;;;:::o;17447:419::-;17613:4;17651:2;17640:9;17636:18;17628:26;;17700:9;17694:4;17690:20;17686:1;17675:9;17671:17;17664:47;17728:131;17854:4;17728:131;:::i;:::-;17720:139;;17447:419;;;:::o;17872:173::-;18012:25;18008:1;18000:6;17996:14;17989:49;17872:173;:::o;18051:366::-;18193:3;18214:67;18278:2;18273:3;18214:67;:::i;:::-;18207:74;;18290:93;18379:3;18290:93;:::i;:::-;18408:2;18403:3;18399:12;18392:19;;18051:366;;;:::o;18423:419::-;18589:4;18627:2;18616:9;18612:18;18604:26;;18676:9;18670:4;18666:20;18662:1;18651:9;18647:17;18640:47;18704:131;18830:4;18704:131;:::i;:::-;18696:139;;18423:419;;;:::o;18848:170::-;18988:22;18984:1;18976:6;18972:14;18965:46;18848:170;:::o;19024:366::-;19166:3;19187:67;19251:2;19246:3;19187:67;:::i;:::-;19180:74;;19263:93;19352:3;19263:93;:::i;:::-;19381:2;19376:3;19372:12;19365:19;;19024:366;;;:::o;19396:419::-;19562:4;19600:2;19589:9;19585:18;19577:26;;19649:9;19643:4;19639:20;19635:1;19624:9;19620:17;19613:47;19677:131;19803:4;19677:131;:::i;:::-;19669:139;;19396:419;;;:::o;19821:332::-;19942:4;19980:2;19969:9;19965:18;19957:26;;19993:71;20061:1;20050:9;20046:17;20037:6;19993:71;:::i;:::-;20074:72;20142:2;20131:9;20127:18;20118:6;20074:72;:::i;:::-;19821:332;;;;;:::o;20159:90::-;20193:7;20236:5;20229:13;20222:21;20211:32;;20159:90;;;:::o;20255:116::-;20325:21;20340:5;20325:21;:::i;:::-;20318:5;20315:32;20305:60;;20361:1;20358;20351:12;20305:60;20255:116;:::o;20377:137::-;20431:5;20462:6;20456:13;20447:22;;20478:30;20502:5;20478:30;:::i;:::-;20377:137;;;;:::o;20520:345::-;20587:6;20636:2;20624:9;20615:7;20611:23;20607:32;20604:119;;;20642:79;;:::i;:::-;20604:119;20762:1;20787:61;20840:7;20831:6;20820:9;20816:22;20787:61;:::i;:::-;20777:71;;20733:125;20520:345;;;;:::o;20871:180::-;20919:77;20916:1;20909:88;21016:4;21013:1;21006:15;21040:4;21037:1;21030:15;21057:191;21097:3;21116:20;21134:1;21116:20;:::i;:::-;21111:25;;21150:20;21168:1;21150:20;:::i;:::-;21145:25;;21193:1;21190;21186:9;21179:16;;21214:3;21211:1;21208:10;21205:36;;;21221:18;;:::i;:::-;21205:36;21057:191;;;;:::o;21254:466::-;21415:4;21453:2;21442:9;21438:18;21430:26;;21466:71;21534:1;21523:9;21519:17;21510:6;21466:71;:::i;:::-;21547:72;21615:2;21604:9;21600:18;21591:6;21547:72;:::i;:::-;21629:84;21709:2;21698:9;21694:18;21685:6;21629:84;:::i;:::-;21254:466;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1492200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimRefund()": "infinite",
								"contributeToPresale()": "infinite",
								"contributeToPublicSale()": "infinite",
								"currentPhase()": "2622",
								"distributeTokensToAddress(address,uint256)": "infinite",
								"endPresale()": "infinite",
								"endPublicSale()": "infinite",
								"owner()": "2560",
								"presaleCap()": "2470",
								"presaleContributions(address)": "2825",
								"presaleMaxContribution()": "2448",
								"presaleMinContribution()": "2536",
								"publicSaleCap()": "2492",
								"publicSaleContributions(address)": "2914",
								"publicSaleMaxContribution()": "2514",
								"publicSaleMinContribution()": "2515",
								"renounceOwnership()": "infinite",
								"startPresale()": "infinite",
								"token()": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"distributeTokens(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 232,
									"end": 5257,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 5257,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 232,
									"end": 5257,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1498,
									"end": 2233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1828,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1849,
									"end": 1855,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1846,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1841,
									"end": 1846,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 1,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1890,
									"modifierDepth": 1,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1866,
									"end": 1876,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1866,
									"end": 1890,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1866,
									"end": 1890,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1866,
									"end": 1890,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1866,
									"end": 1890,
									"modifierDepth": 1,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1917,
									"end": 1931,
									"modifierDepth": 1,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1901,
									"end": 1914,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1901,
									"end": 1931,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1901,
									"end": 1931,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1901,
									"end": 1931,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1901,
									"end": 1931,
									"modifierDepth": 1,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1967,
									"end": 1990,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1942,
									"end": 1964,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1942,
									"end": 1990,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1942,
									"end": 1990,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1942,
									"end": 1990,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1942,
									"end": 1990,
									"modifierDepth": 1,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2026,
									"end": 2049,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2023,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2001,
									"end": 2049,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2049,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2049,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2049,
									"modifierDepth": 1,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2088,
									"end": 2114,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2060,
									"end": 2085,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 2060,
									"end": 2114,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2060,
									"end": 2114,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2060,
									"end": 2114,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2060,
									"end": 2114,
									"modifierDepth": 1,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2153,
									"end": 2179,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2125,
									"end": 2150,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2125,
									"end": 2179,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2125,
									"end": 2179,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2125,
									"end": 2179,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2125,
									"end": 2179,
									"modifierDepth": 1,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2205,
									"end": 2225,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2190,
									"end": 2202,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 2190,
									"end": 2202,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 2190,
									"end": 2225,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2225,
									"modifierDepth": 1,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 2233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 232,
									"end": 5257,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 232,
									"end": 5257,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 677,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 677,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 618,
									"end": 625,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 665,
									"end": 670,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 636,
									"end": 671,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 636,
									"end": 671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 568,
									"end": 677,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 683,
									"end": 831,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 683,
									"end": 831,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 800,
									"end": 805,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 769,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 769,
									"end": 806,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 769,
									"end": 806,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 762,
									"end": 767,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 759,
									"end": 807,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 749,
									"end": 825,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 819,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 811,
									"end": 823,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 749,
									"end": 825,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 683,
									"end": 831,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 683,
									"end": 831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 907,
									"end": 912,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 932,
									"end": 945,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 923,
									"end": 945,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 923,
									"end": 945,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 954,
									"end": 1000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 837,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1012,
									"end": 1089,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1012,
									"end": 1089,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1049,
									"end": 1056,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1078,
									"end": 1083,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1067,
									"end": 1083,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1067,
									"end": 1083,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1012,
									"end": 1089,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1012,
									"end": 1089,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1012,
									"end": 1089,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1012,
									"end": 1089,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1095,
									"end": 1217,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1095,
									"end": 1217,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1168,
									"end": 1192,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1186,
									"end": 1191,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1168,
									"end": 1192,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1168,
									"end": 1192,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1168,
									"end": 1192,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1168,
									"end": 1192,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1166,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1158,
									"end": 1193,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1148,
									"end": 1211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1148,
									"end": 1211,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1207,
									"end": 1208,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1204,
									"end": 1205,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1197,
									"end": 1209,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1148,
									"end": 1211,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1148,
									"end": 1211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1095,
									"end": 1217,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1095,
									"end": 1217,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1223,
									"end": 1366,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1223,
									"end": 1366,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1280,
									"end": 1285,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1317,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1305,
									"end": 1318,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1318,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1318,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1327,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1354,
									"end": 1359,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1327,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1327,
									"end": 1360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1327,
									"end": 1360,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1327,
									"end": 1360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1223,
									"end": 1366,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1223,
									"end": 1366,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1223,
									"end": 1366,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1223,
									"end": 1366,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1223,
									"end": 1366,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1372,
									"end": 1494,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1372,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1438,
									"end": 1443,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1435,
									"end": 1470,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1425,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1425,
									"end": 1488,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1481,
									"end": 1482,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1486,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1425,
									"end": 1488,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1425,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1372,
									"end": 1494,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1372,
									"end": 1494,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1643,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1500,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1557,
									"end": 1562,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1588,
									"end": 1594,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1595,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1573,
									"end": 1595,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1573,
									"end": 1595,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1604,
									"end": 1637,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1631,
									"end": 1636,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1604,
									"end": 1637,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1604,
									"end": 1637,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1604,
									"end": 1637,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1604,
									"end": 1637,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1643,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1643,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1643,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1643,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1643,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 3123,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1649,
									"end": 3123,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1795,
									"end": 1801,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1803,
									"end": 1809,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1811,
									"end": 1817,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1827,
									"end": 1833,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1841,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1843,
									"end": 1849,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1851,
									"end": 1857,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1900,
									"end": 1903,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1888,
									"end": 1897,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 1879,
									"end": 1886,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 1875,
									"end": 1898,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1871,
									"end": 1904,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1868,
									"end": 1988,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1868,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1868,
									"end": 1988,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1907,
									"end": 1986,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1907,
									"end": 1986,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1907,
									"end": 1986,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1907,
									"end": 1986,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1907,
									"end": 1986,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1868,
									"end": 1988,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1868,
									"end": 1988,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2027,
									"end": 2028,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2052,
									"end": 2129,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2121,
									"end": 2128,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 2112,
									"end": 2118,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2110,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 2097,
									"end": 2119,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2052,
									"end": 2129,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 2052,
									"end": 2129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2052,
									"end": 2129,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2052,
									"end": 2129,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2042,
									"end": 2129,
									"name": "SWAP9",
									"source": 8
								},
								{
									"begin": 2042,
									"end": 2129,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1998,
									"end": 2139,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2178,
									"end": 2180,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2204,
									"end": 2268,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2260,
									"end": 2267,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2257,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2240,
									"end": 2249,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 2236,
									"end": 2258,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2204,
									"end": 2268,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2204,
									"end": 2268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2204,
									"end": 2268,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2204,
									"end": 2268,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2194,
									"end": 2268,
									"name": "SWAP8",
									"source": 8
								},
								{
									"begin": 2194,
									"end": 2268,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2149,
									"end": 2278,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2319,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2343,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2399,
									"end": 2406,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 2390,
									"end": 2396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2379,
									"end": 2388,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 2375,
									"end": 2397,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2343,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2343,
									"end": 2407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2343,
									"end": 2407,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2343,
									"end": 2407,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2407,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2407,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2288,
									"end": 2417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2456,
									"end": 2458,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2482,
									"end": 2546,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2538,
									"end": 2545,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 2529,
									"end": 2535,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2518,
									"end": 2527,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2482,
									"end": 2546,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2482,
									"end": 2546,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2482,
									"end": 2546,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2482,
									"end": 2546,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2472,
									"end": 2546,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 2472,
									"end": 2546,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2427,
									"end": 2556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2595,
									"end": 2598,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2622,
									"end": 2686,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2678,
									"end": 2685,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 2669,
									"end": 2675,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2658,
									"end": 2667,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 2654,
									"end": 2676,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2622,
									"end": 2686,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2622,
									"end": 2686,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2622,
									"end": 2686,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2622,
									"end": 2686,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2612,
									"end": 2686,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2612,
									"end": 2686,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2696,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2735,
									"end": 2738,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 2762,
									"end": 2826,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2818,
									"end": 2825,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 2809,
									"end": 2815,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2798,
									"end": 2807,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 2794,
									"end": 2816,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2762,
									"end": 2826,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2762,
									"end": 2826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2762,
									"end": 2826,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2762,
									"end": 2826,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2752,
									"end": 2826,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2752,
									"end": 2826,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2706,
									"end": 2836,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2875,
									"end": 2878,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 2902,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2958,
									"end": 2965,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 2949,
									"end": 2955,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2938,
									"end": 2947,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 2934,
									"end": 2956,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2902,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2902,
									"end": 2966,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2902,
									"end": 2966,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2902,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2892,
									"end": 2966,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2892,
									"end": 2966,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2976,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3015,
									"end": 3018,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 3042,
									"end": 3106,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3098,
									"end": 3105,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 3089,
									"end": 3095,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3078,
									"end": 3087,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 3074,
									"end": 3096,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3042,
									"end": 3106,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 3042,
									"end": 3106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3042,
									"end": 3106,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3042,
									"end": 3106,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3032,
									"end": 3106,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3032,
									"end": 3106,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2986,
									"end": 3116,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 3123,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 3123,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 3123,
									"name": "SWAP9",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 3123,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 3123,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 3123,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 3123,
									"name": "SWAP9",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 3123,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 3123,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 3123,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 3123,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 3123,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3129,
									"end": 3247,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 3129,
									"end": 3247,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3216,
									"end": 3240,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 3234,
									"end": 3239,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3216,
									"end": 3240,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 3216,
									"end": 3240,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3216,
									"end": 3240,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 3216,
									"end": 3240,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3211,
									"end": 3214,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3204,
									"end": 3241,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3129,
									"end": 3247,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3129,
									"end": 3247,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3129,
									"end": 3247,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3253,
									"end": 3475,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 3253,
									"end": 3475,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3384,
									"end": 3386,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3373,
									"end": 3382,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3369,
									"end": 3387,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3361,
									"end": 3387,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3361,
									"end": 3387,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3397,
									"end": 3468,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 3465,
									"end": 3466,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3454,
									"end": 3463,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3450,
									"end": 3467,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3441,
									"end": 3447,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3397,
									"end": 3468,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 3397,
									"end": 3468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3397,
									"end": 3468,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 3397,
									"end": 3468,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3253,
									"end": 3475,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3253,
									"end": 3475,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3253,
									"end": 3475,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3253,
									"end": 3475,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3253,
									"end": 3475,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3481,
									"end": 3661,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 3481,
									"end": 3661,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3529,
									"end": 3606,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3526,
									"end": 3527,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3519,
									"end": 3607,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3626,
									"end": 3630,
									"name": "PUSH",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 3623,
									"end": 3624,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3616,
									"end": 3631,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3650,
									"end": 3654,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3647,
									"end": 3648,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3640,
									"end": 3655,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 232,
									"end": 5257,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 232,
									"end": 5257,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 232,
									"end": 5257,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 5257,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 232,
									"end": 5257,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 5257,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 5257,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 232,
									"end": 5257,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 5257,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e4d03697f67ab737b582c2428bd78fec868096d54e8c64ca65fead28d72f25e064736f6c63430008170033",
									".code": [
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "87E449C3"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "C7D17FD1"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "C7D17FD1"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "E59C9510"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "FEFAE016"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "87E449C3"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "A43BE57B"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "B5545A3C"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "C4849847"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "477F1EBA"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "477F1EBA"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "63D5502F"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "64826B7A"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "7146E4FA"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "269D3B4"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "4C98B2B"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "55AD42E"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "2A517AB2"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "35F74869"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5207,
											"end": 5246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 232,
											"end": 5257,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2603,
											"end": 3102,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2603,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2603,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 2603,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2603,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2603,
											"end": 3102,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 2603,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2603,
											"end": 3102,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 2241,
											"end": 2351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 804,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 804,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 513,
											"end": 553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 553,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 553,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 513,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 513,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 513,
											"end": 553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 553,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 513,
											"end": 553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 513,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 513,
											"end": 553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 553,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 671,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 671,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 671,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 609,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 609,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 609,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 358,
											"end": 383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 358,
											"end": 383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 390,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 390,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 560,
											"end": 600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 560,
											"end": 600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 469,
											"end": 506,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 469,
											"end": 506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 469,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 469,
											"end": 506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 469,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 469,
											"end": 506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 469,
											"end": 506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 506,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 469,
											"end": 506,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 469,
											"end": 506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 469,
											"end": 506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 506,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2359,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4349,
											"end": 5118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 425,
											"end": 462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 425,
											"end": 462,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 462,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 425,
											"end": 462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 425,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 425,
											"end": 462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 425,
											"end": 462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 462,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 425,
											"end": 462,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 425,
											"end": 462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 425,
											"end": 462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 462,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2479,
											"end": 2595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3642,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 3110,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3110,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 3110,
											"end": 3642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3642,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3110,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3642,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 306,
											"end": 324,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 306,
											"end": 324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 306,
											"end": 324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 324,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 306,
											"end": 324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 306,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 306,
											"end": 324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 306,
											"end": 324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 324,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 306,
											"end": 324,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 306,
											"end": 324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 306,
											"end": 324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 324,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4074,
											"end": 4341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4074,
											"end": 4341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2603,
											"end": 3102,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2603,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1173,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1140,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1152,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1140,
											"end": 1152,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1152,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1152,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1152,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1152,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1140,
											"end": 1152,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1152,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1152,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1152,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1140,
											"end": 1152,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1140,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1132,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1132,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2700,
											"end": 2722,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2687,
											"end": 2696,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2687,
											"end": 2722,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2687,
											"end": 2722,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2679,
											"end": 2761,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2679,
											"end": 2761,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2793,
											"end": 2815,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2789,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2815,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2815,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2772,
											"end": 2856,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2772,
											"end": 2856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 2925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2915,
											"end": 2925,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2901,
											"end": 2910,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2896,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2875,
											"end": 2900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2875,
											"end": 2911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2911,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2875,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2925,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2925,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2867,
											"end": 2949,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2867,
											"end": 2949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3044,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3034,
											"end": 3043,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3028,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3029,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3033,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2997,
											"end": 3033,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3044,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3044,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2997,
											"end": 3044,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3044,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3044,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2997,
											"end": 3044,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 2993,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 3044,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 3044,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 3044,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 3044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3072,
											"end": 3082,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3093,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3055,
											"end": 3094,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3094,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3055,
											"end": 3094,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2603,
											"end": 3102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 2241,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1415,
											"end": 1449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1415,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1427,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1415,
											"end": 1427,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1427,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1415,
											"end": 1427,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1415,
											"end": 1449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1415,
											"end": 1449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1407,
											"end": 1470,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1407,
											"end": 1470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2343,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2311,
											"end": 2323,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2311,
											"end": 2323,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2311,
											"end": 2343,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2343,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 804,
											"end": 833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 513,
											"end": 553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 513,
											"end": 553,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 513,
											"end": 553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 729,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 671,
											"end": 729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 609,
											"end": 664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 358,
											"end": 383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 390,
											"end": 418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 560,
											"end": 600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 469,
											"end": 506,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 469,
											"end": 506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 469,
											"end": 506,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 469,
											"end": 506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2359,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1140,
											"end": 1173,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1140,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1152,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1140,
											"end": 1152,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1152,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1140,
											"end": 1152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1140,
											"end": 1173,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1173,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1132,
											"end": 1198,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1132,
											"end": 1198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2443,
											"end": 2463,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2428,
											"end": 2440,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2428,
											"end": 2440,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2428,
											"end": 2463,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2463,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4349,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1449,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1415,
											"end": 1449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1415,
											"end": 1449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1449,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1407,
											"end": 1470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 1407,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4443,
											"end": 4476,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4443,
											"end": 4455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4455,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4443,
											"end": 4455,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4455,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4443,
											"end": 4455,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4443,
											"end": 4476,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 4443,
											"end": 4476,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4476,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4439,
											"end": 4940,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 4439,
											"end": 4940,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4539,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4540,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4540,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4540,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4579,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 4555,
											"end": 4617,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 4555,
											"end": 4617,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4667,
											"end": 4668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4663,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4664,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4668,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4668,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4668,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4668,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4439,
											"end": 4940,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 4439,
											"end": 4940,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4439,
											"end": 4940,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 4439,
											"end": 4940,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4690,
											"end": 4726,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4690,
											"end": 4702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4702,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4702,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4702,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4690,
											"end": 4702,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4702,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4702,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4690,
											"end": 4702,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 4690,
											"end": 4726,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4690,
											"end": 4726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4726,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4940,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 4686,
											"end": 4940,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4782,
											"end": 4792,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4793,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4831,
											"end": 4832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4828,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4832,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 4808,
											"end": 4874,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 4808,
											"end": 4874,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4927,
											"end": 4928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4889,
											"end": 4912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4913,
											"end": 4923,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4889,
											"end": 4924,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4928,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4928,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4928,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4928,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4940,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 4686,
											"end": 4940,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4439,
											"end": 4940,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 4439,
											"end": 4940,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4953,
											"end": 4965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4971,
											"end": 4981,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4971,
											"end": 4986,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5006,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 4971,
											"end": 5011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4952,
											"end": 5011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4952,
											"end": 5011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4952,
											"end": 5011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5037,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5022,
											"end": 5055,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5022,
											"end": 5055,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5095,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "358FE4192934D3BF28AE181FEDA1F4BD08CA67F5E2FAD55582CCE5EB67304AE9"
										},
										{
											"begin": 5097,
											"end": 5109,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5071,
											"end": 5110,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5110,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 4397,
											"end": 5118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4397,
											"end": 5118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 5118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 425,
											"end": 462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 425,
											"end": 462,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 425,
											"end": 462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2479,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1276,
											"end": 1312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1276,
											"end": 1288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1288,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1288,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1288,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1276,
											"end": 1288,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1288,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1288,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1276,
											"end": 1288,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1276,
											"end": 1312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1268,
											"end": 1341,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 1268,
											"end": 1341,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2587,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2554,
											"end": 2566,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2554,
											"end": 2566,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2554,
											"end": 2587,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2587,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3642,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 3110,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1276,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1276,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1312,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1268,
											"end": 1341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1268,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3213,
											"end": 3238,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3209,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3238,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3238,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3192,
											"end": 3281,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3192,
											"end": 3281,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3338,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3313,
											"end": 3338,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3309,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3338,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3338,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3292,
											"end": 3383,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3292,
											"end": 3383,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3442,
											"end": 3455,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3428,
											"end": 3437,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3423,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 3402,
											"end": 3427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3438,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3455,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3455,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3394,
											"end": 3483,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3394,
											"end": 3483,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3584,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3574,
											"end": 3583,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3568,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3569,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 3534,
											"end": 3573,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3584,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3584,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3534,
											"end": 3584,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3584,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3584,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3534,
											"end": 3584,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3520,
											"end": 3530,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3531,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3584,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3584,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3584,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3584,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3634,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3612,
											"end": 3622,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3633,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3595,
											"end": 3634,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3634,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3595,
											"end": 3634,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 306,
											"end": 324,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 306,
											"end": 324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 306,
											"end": 324,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 306,
											"end": 324,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 306,
											"end": 324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4187,
											"end": 4198,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4187,
											"end": 4202,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4179,
											"end": 4227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4179,
											"end": 4227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4238,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4238,
											"end": 4243,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4243,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4243,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4252,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 4253,
											"end": 4262,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4264,
											"end": 4275,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4238,
											"end": 4276,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 4238,
											"end": 4276,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4276,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4310,
											"end": 4319,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "16B0DA2FFCB90C6723317BD637D9AAD7F04711F42BBE0AC0918EBE10F1F9001C"
										},
										{
											"begin": 4321,
											"end": 4332,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4292,
											"end": 4333,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4333,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 4066,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3650,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3769,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3900,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3885,
											"end": 3900,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3877,
											"end": 3925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3952,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3938,
											"end": 3952,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3952,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 3953,
											"end": 3962,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3938,
											"end": 3976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 3938,
											"end": 3976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "PUSH",
											"source": 7,
											"value": "7BD967119635E499EDB871F00E988945FC967531C4DFA79A630A18ED98CF1EB"
										},
										{
											"begin": 4019,
											"end": 4030,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4043,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4057,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4045,
											"end": 4057,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4057,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4057,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4045,
											"end": 4057,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4057,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4057,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4045,
											"end": 4057,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3992,
											"end": 4058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4058,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 4066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 4066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 4066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 4066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 182,
											"end": 361,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 182,
											"end": 361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 322,
											"end": 353,
											"name": "PUSH",
											"source": 8,
											"value": "46616C6C6261636B2066756E6374696F6E206E6F7420616C6C6F776564000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 299,
											"end": 354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 182,
											"end": 361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 182,
											"end": 361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 367,
											"end": 733,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 367,
											"end": 733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 509,
											"end": 512,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 594,
											"end": 596,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 589,
											"end": 592,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 530,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 530,
											"end": 597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 530,
											"end": 597,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 530,
											"end": 597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 523,
											"end": 597,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 523,
											"end": 597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 606,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 695,
											"end": 698,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 606,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 606,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 606,
											"end": 699,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 606,
											"end": 699,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 724,
											"end": 726,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 719,
											"end": 722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 715,
											"end": 727,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 708,
											"end": 727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 708,
											"end": 727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 367,
											"end": 733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 367,
											"end": 733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 367,
											"end": 733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 367,
											"end": 733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 1158,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 739,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 905,
											"end": 909,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 945,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 928,
											"end": 946,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 920,
											"end": 946,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 920,
											"end": 946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1001,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 986,
											"end": 990,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 982,
											"end": 1002,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 978,
											"end": 979,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 976,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 963,
											"end": 980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1020,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 1146,
											"end": 1150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1020,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 1020,
											"end": 1151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1020,
											"end": 1151,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 1020,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 1158,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 739,
											"end": 1158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 739,
											"end": 1158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 1158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1344,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1164,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1289,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1209,
											"end": 1210,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1290,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1313,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1299,
											"end": 1314,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1330,
											"end": 1331,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1338,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1469,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1350,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1438,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1430,
											"end": 1435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1439,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1417,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 1417,
											"end": 1463,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1443,
											"end": 1461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1417,
											"end": 1463,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 1417,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1533,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1560,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1602,
											"end": 1607,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1561,
											"end": 1608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1759,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1620,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1682,
											"end": 1691,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 1747,
											"end": 1752,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1715,
											"end": 1753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1753,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 1715,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1759,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1759,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1765,
											"end": 1920,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 1765,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 1907,
											"end": 1912,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1864,
											"end": 1913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1913,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 1864,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1859,
											"end": 1862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1914,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1765,
											"end": 1920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1765,
											"end": 1920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1765,
											"end": 1920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 2172,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1926,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2035,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2071,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2054,
											"end": 2072,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2072,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2082,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2160,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2147,
											"end": 2164,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2082,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2082,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2082,
											"end": 2165,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 2082,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 2172,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 2172,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 2172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 2172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 2172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2255,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2178,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2222,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2379,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2261,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2348,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 2366,
											"end": 2371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2348,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2348,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2348,
											"end": 2372,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 2348,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2346,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2373,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2385,
											"end": 2607,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2385,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2482,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2518,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2505,
											"end": 2514,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2519,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2493,
											"end": 2519,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2529,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2595,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2582,
											"end": 2599,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2579,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2529,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2529,
											"end": 2600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2529,
											"end": 2600,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 2529,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2385,
											"end": 2607,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2385,
											"end": 2607,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2385,
											"end": 2607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2385,
											"end": 2607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2385,
											"end": 2607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2811,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2694,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2801,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2793,
											"end": 2805,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 3066,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2940,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2977,
											"end": 2984,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3059,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3060,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2995,
											"end": 3060,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2995,
											"end": 3060,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 3066,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 3066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 3066,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 3066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3072,
											"end": 3168,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 3072,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3109,
											"end": 3116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3138,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 3156,
											"end": 3161,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 3138,
											"end": 3162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3162,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 3138,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3072,
											"end": 3168,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3072,
											"end": 3168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3072,
											"end": 3168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3072,
											"end": 3168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3174,
											"end": 3296,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 3174,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 3265,
											"end": 3270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 3247,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3271,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 3247,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3240,
											"end": 3245,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3272,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3227,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 3227,
											"end": 3290,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3288,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3227,
											"end": 3290,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 3227,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3174,
											"end": 3296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3174,
											"end": 3296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3441,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3302,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3353,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3386,
											"end": 3392,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3373,
											"end": 3393,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3393,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 3402,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3435,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 3402,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3776,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3447,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3512,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3557,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3543,
											"end": 3552,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3530,
											"end": 3553,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3526,
											"end": 3558,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3642,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3523,
											"end": 3642,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 3561,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 3561,
											"end": 3640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3640,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 3561,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3642,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3523,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3681,
											"end": 3682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3706,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3751,
											"end": 3758,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3742,
											"end": 3748,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3731,
											"end": 3740,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3727,
											"end": 3749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3706,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3759,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3706,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3696,
											"end": 3759,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3696,
											"end": 3759,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3776,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3782,
											"end": 3900,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 3782,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 3887,
											"end": 3892,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 3869,
											"end": 3893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3893,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 3869,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3864,
											"end": 3867,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3782,
											"end": 3900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3782,
											"end": 3900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3782,
											"end": 3900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 4128,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 3906,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4003,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4037,
											"end": 4039,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4026,
											"end": 4035,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4022,
											"end": 4040,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4014,
											"end": 4040,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4014,
											"end": 4040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4050,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 4118,
											"end": 4119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4107,
											"end": 4116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4103,
											"end": 4120,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4094,
											"end": 4100,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4050,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 4050,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4050,
											"end": 4121,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 4050,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 4128,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 4128,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 4128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 4128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 4128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4134,
											"end": 4194,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 4134,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4162,
											"end": 4165,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4188,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4176,
											"end": 4188,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4176,
											"end": 4188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4134,
											"end": 4194,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4134,
											"end": 4194,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4134,
											"end": 4194,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4134,
											"end": 4194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4342,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 4200,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4283,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 4310,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 4328,
											"end": 4333,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4310,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 4310,
											"end": 4334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4310,
											"end": 4334,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 4310,
											"end": 4334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 4301,
											"end": 4335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4283,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 4283,
											"end": 4336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4283,
											"end": 4336,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 4283,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4342,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4342,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4348,
											"end": 4474,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 4348,
											"end": 4474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4407,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4431,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 4462,
											"end": 4467,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4431,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 4431,
											"end": 4468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4431,
											"end": 4468,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 4431,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4468,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4468,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4348,
											"end": 4474,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4348,
											"end": 4474,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4348,
											"end": 4474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4348,
											"end": 4474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4480,
											"end": 4619,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 4480,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4543,
											"end": 4552,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4576,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 4607,
											"end": 4612,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4576,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 4576,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4576,
											"end": 4613,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 4576,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4613,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4480,
											"end": 4619,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4480,
											"end": 4619,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4480,
											"end": 4619,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4480,
											"end": 4619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4782,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4625,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4725,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 4769,
											"end": 4774,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4725,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 4725,
											"end": 4775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4725,
											"end": 4775,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 4725,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4723,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4713,
											"end": 4776,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4788,
											"end": 5036,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 4788,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4894,
											"end": 4898,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4932,
											"end": 4934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4921,
											"end": 4930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4917,
											"end": 4935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4909,
											"end": 4935,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4909,
											"end": 4935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 5026,
											"end": 5027,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5028,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5002,
											"end": 5008,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4945,
											"end": 5029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 5029,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 4945,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4788,
											"end": 5036,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4788,
											"end": 5036,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4788,
											"end": 5036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4788,
											"end": 5036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4788,
											"end": 5036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5164,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 5042,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 5133,
											"end": 5138,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 5115,
											"end": 5139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5139,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 5115,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5105,
											"end": 5140,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5095,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 5095,
											"end": 5158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5152,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5156,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5095,
											"end": 5158,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 5095,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5170,
											"end": 5309,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 5170,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5221,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5260,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5241,
											"end": 5261,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5232,
											"end": 5261,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5232,
											"end": 5261,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 5297,
											"end": 5302,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 5270,
											"end": 5303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5170,
											"end": 5309,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5170,
											"end": 5309,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5170,
											"end": 5309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5170,
											"end": 5309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5170,
											"end": 5309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5789,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 5315,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5391,
											"end": 5397,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5440,
											"end": 5442,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5428,
											"end": 5437,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5415,
											"end": 5438,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5411,
											"end": 5443,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5527,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 5408,
											"end": 5527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5446,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 5446,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 5446,
											"end": 5525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5446,
											"end": 5525,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 5446,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5527,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 5408,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 5636,
											"end": 5643,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5616,
											"end": 5625,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5612,
											"end": 5634,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5591,
											"end": 5644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 5591,
											"end": 5644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5591,
											"end": 5644,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 5591,
											"end": 5644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5644,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5693,
											"end": 5695,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5719,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 5764,
											"end": 5771,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5755,
											"end": 5761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5744,
											"end": 5753,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5719,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 5719,
											"end": 5772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5719,
											"end": 5772,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 5719,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 5772,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 5772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5789,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5789,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5795,
											"end": 5965,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 5795,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 5957,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7420696E2070726573616C65207068617365000000000000000000000000"
										},
										{
											"begin": 5931,
											"end": 5932,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5929,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5919,
											"end": 5933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 5958,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5795,
											"end": 5965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5795,
											"end": 5965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 6337,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 5971,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6134,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 6198,
											"end": 6200,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 6193,
											"end": 6196,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6134,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 6134,
											"end": 6201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6134,
											"end": 6201,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 6134,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6127,
											"end": 6201,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6127,
											"end": 6201,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6210,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6210,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 6210,
											"end": 6303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6210,
											"end": 6303,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 6210,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6330,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6323,
											"end": 6326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6319,
											"end": 6331,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6312,
											"end": 6331,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6312,
											"end": 6331,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 6337,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 6337,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 6337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 6337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6343,
											"end": 6762,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 6343,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6549,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6536,
											"end": 6545,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6532,
											"end": 6550,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6596,
											"end": 6605,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6590,
											"end": 6594,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6586,
											"end": 6606,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6582,
											"end": 6583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6567,
											"end": 6584,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6560,
											"end": 6607,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6624,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 6750,
											"end": 6754,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6624,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 6624,
											"end": 6755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6624,
											"end": 6755,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 6624,
											"end": 6755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6616,
											"end": 6755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6616,
											"end": 6755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6343,
											"end": 6762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6343,
											"end": 6762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6343,
											"end": 6762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6343,
											"end": 6762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6989,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 6768,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6908,
											"end": 6942,
											"name": "PUSH",
											"source": 8,
											"value": "42656C6F772070726573616C65206D696E696D756D20636F6E74726962757469"
										},
										{
											"begin": 6904,
											"end": 6905,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6896,
											"end": 6902,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6892,
											"end": 6906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6885,
											"end": 6943,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6977,
											"end": 6981,
											"name": "PUSH",
											"source": 8,
											"value": "6F6E000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6972,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6964,
											"end": 6970,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6960,
											"end": 6975,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6953,
											"end": 6982,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6989,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6995,
											"end": 7361,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 6995,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7140,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7158,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 7222,
											"end": 7224,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 7217,
											"end": 7220,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7158,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 7158,
											"end": 7225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7158,
											"end": 7225,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 7158,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7151,
											"end": 7225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7151,
											"end": 7225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7234,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 7323,
											"end": 7326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7234,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 7234,
											"end": 7327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7234,
											"end": 7327,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 7234,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7354,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7347,
											"end": 7350,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7343,
											"end": 7355,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7336,
											"end": 7355,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7336,
											"end": 7355,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6995,
											"end": 7361,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6995,
											"end": 7361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6995,
											"end": 7361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6995,
											"end": 7361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7367,
											"end": 7786,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 7367,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7533,
											"end": 7537,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7571,
											"end": 7573,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7560,
											"end": 7569,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7548,
											"end": 7574,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7548,
											"end": 7574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7620,
											"end": 7629,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7606,
											"end": 7607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7604,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7591,
											"end": 7608,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7648,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7648,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 7648,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7648,
											"end": 7779,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 7648,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7640,
											"end": 7779,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7640,
											"end": 7779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7367,
											"end": 7786,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7367,
											"end": 7786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7367,
											"end": 7786,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7367,
											"end": 7786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7792,
											"end": 8015,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 7792,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7932,
											"end": 7966,
											"name": "PUSH",
											"source": 8,
											"value": "457863656564732070726573616C65206D6178696D756D20636F6E7472696275"
										},
										{
											"begin": 7928,
											"end": 7929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7920,
											"end": 7926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7916,
											"end": 7930,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7909,
											"end": 7967,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8001,
											"end": 8007,
											"name": "PUSH",
											"source": 8,
											"value": "74696F6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7996,
											"end": 7998,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7988,
											"end": 7994,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7984,
											"end": 7999,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7977,
											"end": 8008,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7792,
											"end": 8015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7792,
											"end": 8015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8021,
											"end": 8387,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 8021,
											"end": 8387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8163,
											"end": 8166,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 8248,
											"end": 8250,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8243,
											"end": 8246,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8184,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 8184,
											"end": 8251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8184,
											"end": 8251,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 8184,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8177,
											"end": 8251,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8177,
											"end": 8251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8260,
											"end": 8353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 8349,
											"end": 8352,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8260,
											"end": 8353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 8260,
											"end": 8353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8260,
											"end": 8353,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 8260,
											"end": 8353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8378,
											"end": 8380,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8373,
											"end": 8376,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8369,
											"end": 8381,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8381,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8021,
											"end": 8387,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8021,
											"end": 8387,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8021,
											"end": 8387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8021,
											"end": 8387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8393,
											"end": 8812,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 8393,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8559,
											"end": 8563,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8597,
											"end": 8599,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8586,
											"end": 8595,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8582,
											"end": 8600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8574,
											"end": 8600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8574,
											"end": 8600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8646,
											"end": 8655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8640,
											"end": 8644,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 8656,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8632,
											"end": 8633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8621,
											"end": 8630,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8617,
											"end": 8634,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8610,
											"end": 8657,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8674,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 8800,
											"end": 8804,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8674,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 8674,
											"end": 8805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8674,
											"end": 8805,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 8674,
											"end": 8805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8666,
											"end": 8805,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8666,
											"end": 8805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8393,
											"end": 8812,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8393,
											"end": 8812,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8393,
											"end": 8812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8393,
											"end": 8812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8818,
											"end": 8987,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8818,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8958,
											"end": 8979,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C6520636170207265616368656400000000000000000000000000"
										},
										{
											"begin": 8954,
											"end": 8955,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8952,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8942,
											"end": 8956,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8935,
											"end": 8980,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8818,
											"end": 8987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8818,
											"end": 8987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8993,
											"end": 9359,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 8993,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9135,
											"end": 9138,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9156,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 9220,
											"end": 9222,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 9215,
											"end": 9218,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 9156,
											"end": 9223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9223,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 9156,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9149,
											"end": 9223,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9149,
											"end": 9223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9232,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 9321,
											"end": 9324,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9232,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 9232,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9232,
											"end": 9325,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 9232,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9350,
											"end": 9352,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9345,
											"end": 9348,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9341,
											"end": 9353,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9353,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8993,
											"end": 9359,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8993,
											"end": 9359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8993,
											"end": 9359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8993,
											"end": 9359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9365,
											"end": 9784,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 9365,
											"end": 9784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9531,
											"end": 9535,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9569,
											"end": 9571,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9558,
											"end": 9567,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9554,
											"end": 9572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9546,
											"end": 9572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9546,
											"end": 9572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9618,
											"end": 9627,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9612,
											"end": 9616,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9608,
											"end": 9628,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9604,
											"end": 9605,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9593,
											"end": 9602,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9589,
											"end": 9606,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9582,
											"end": 9629,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9646,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9646,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 9646,
											"end": 9777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9646,
											"end": 9777,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 9646,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9638,
											"end": 9777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9638,
											"end": 9777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9365,
											"end": 9784,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9365,
											"end": 9784,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9365,
											"end": 9784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9365,
											"end": 9784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9790,
											"end": 9956,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 9790,
											"end": 9956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9930,
											"end": 9948,
											"name": "PUSH",
											"source": 8,
											"value": "53616C652069732066696E697368656400000000000000000000000000000000"
										},
										{
											"begin": 9926,
											"end": 9927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9918,
											"end": 9924,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9914,
											"end": 9928,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9907,
											"end": 9949,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9790,
											"end": 9956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9790,
											"end": 9956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9962,
											"end": 10328,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 9962,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10104,
											"end": 10107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10125,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 10189,
											"end": 10191,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 10184,
											"end": 10187,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10125,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 10125,
											"end": 10192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10125,
											"end": 10192,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 10125,
											"end": 10192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10118,
											"end": 10192,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10118,
											"end": 10192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10201,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 10290,
											"end": 10293,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10201,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 10201,
											"end": 10294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10201,
											"end": 10294,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 10201,
											"end": 10294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10319,
											"end": 10321,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10314,
											"end": 10317,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10310,
											"end": 10322,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10303,
											"end": 10322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10303,
											"end": 10322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9962,
											"end": 10328,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9962,
											"end": 10328,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9962,
											"end": 10328,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9962,
											"end": 10328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10753,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 10334,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10504,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10538,
											"end": 10540,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10527,
											"end": 10536,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10523,
											"end": 10541,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10515,
											"end": 10541,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10515,
											"end": 10541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10587,
											"end": 10596,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10581,
											"end": 10585,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10577,
											"end": 10597,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10573,
											"end": 10574,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10562,
											"end": 10571,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10558,
											"end": 10575,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10551,
											"end": 10598,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10615,
											"end": 10746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 10741,
											"end": 10745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10615,
											"end": 10746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 10615,
											"end": 10746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10615,
											"end": 10746,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 10615,
											"end": 10746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10607,
											"end": 10746,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10607,
											"end": 10746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10753,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10753,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10759,
											"end": 10979,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 10759,
											"end": 10979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10899,
											"end": 10933,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F2070726573616C6520636F6E747269627574696F6E20746F20726566756E"
										},
										{
											"begin": 10895,
											"end": 10896,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10887,
											"end": 10893,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10883,
											"end": 10897,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10876,
											"end": 10934,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10968,
											"end": 10971,
											"name": "PUSH",
											"source": 8,
											"value": "6400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10963,
											"end": 10965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10955,
											"end": 10961,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10951,
											"end": 10966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10944,
											"end": 10972,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10759,
											"end": 10979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10759,
											"end": 10979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10985,
											"end": 11351,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 10985,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11127,
											"end": 11130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11148,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 11212,
											"end": 11214,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 11207,
											"end": 11210,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11148,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 11148,
											"end": 11215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11148,
											"end": 11215,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 11148,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11141,
											"end": 11215,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11141,
											"end": 11215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11224,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 11313,
											"end": 11316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11224,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 11224,
											"end": 11317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11224,
											"end": 11317,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 11224,
											"end": 11317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11342,
											"end": 11344,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11337,
											"end": 11340,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11333,
											"end": 11345,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11326,
											"end": 11345,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11326,
											"end": 11345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10985,
											"end": 11351,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10985,
											"end": 11351,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10985,
											"end": 11351,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10985,
											"end": 11351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11357,
											"end": 11776,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 11357,
											"end": 11776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11561,
											"end": 11563,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11550,
											"end": 11559,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11546,
											"end": 11564,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11538,
											"end": 11564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11538,
											"end": 11564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11610,
											"end": 11619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11604,
											"end": 11608,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11600,
											"end": 11620,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11596,
											"end": 11597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11585,
											"end": 11594,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11581,
											"end": 11598,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11621,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11638,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 11764,
											"end": 11768,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11638,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 11638,
											"end": 11769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11638,
											"end": 11769,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 11638,
											"end": 11769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11630,
											"end": 11769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11630,
											"end": 11769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11357,
											"end": 11776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11357,
											"end": 11776,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11357,
											"end": 11776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11357,
											"end": 11776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11782,
											"end": 12006,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 11782,
											"end": 12006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11922,
											"end": 11956,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F207075626C69632073616C6520636F6E747269627574696F6E20746F2072"
										},
										{
											"begin": 11918,
											"end": 11919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11910,
											"end": 11916,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11906,
											"end": 11920,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11899,
											"end": 11957,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11991,
											"end": 11998,
											"name": "PUSH",
											"source": 8,
											"value": "6566756E64000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11986,
											"end": 11988,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11978,
											"end": 11984,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11974,
											"end": 11989,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11967,
											"end": 11999,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11782,
											"end": 12006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11782,
											"end": 12006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12012,
											"end": 12378,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 12012,
											"end": 12378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12154,
											"end": 12157,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12175,
											"end": 12242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 12239,
											"end": 12241,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 12234,
											"end": 12237,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12175,
											"end": 12242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 12175,
											"end": 12242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12175,
											"end": 12242,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 12175,
											"end": 12242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12168,
											"end": 12242,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12168,
											"end": 12242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12251,
											"end": 12344,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 12340,
											"end": 12343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12251,
											"end": 12344,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 12251,
											"end": 12344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12251,
											"end": 12344,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 12251,
											"end": 12344,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12369,
											"end": 12371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12364,
											"end": 12367,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12360,
											"end": 12372,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12353,
											"end": 12372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12353,
											"end": 12372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12012,
											"end": 12378,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12012,
											"end": 12378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12012,
											"end": 12378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12012,
											"end": 12378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12384,
											"end": 12803,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 12384,
											"end": 12803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12550,
											"end": 12554,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12588,
											"end": 12590,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12577,
											"end": 12586,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12573,
											"end": 12591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12565,
											"end": 12591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12565,
											"end": 12591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12637,
											"end": 12646,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12631,
											"end": 12635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12627,
											"end": 12647,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12623,
											"end": 12624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12612,
											"end": 12621,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12608,
											"end": 12625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12601,
											"end": 12648,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12665,
											"end": 12796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 12791,
											"end": 12795,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12665,
											"end": 12796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 12665,
											"end": 12796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12665,
											"end": 12796,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 12665,
											"end": 12796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12657,
											"end": 12796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12657,
											"end": 12796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12384,
											"end": 12803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12384,
											"end": 12803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12384,
											"end": 12803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12384,
											"end": 12803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12956,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 12809,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12910,
											"end": 12921,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12947,
											"end": 12950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12932,
											"end": 12950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12932,
											"end": 12950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12956,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12956,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12962,
											"end": 13076,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 12962,
											"end": 13076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12962,
											"end": 13076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12962,
											"end": 13076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13082,
											"end": 13480,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 13082,
											"end": 13480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13241,
											"end": 13244,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13262,
											"end": 13345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 13343,
											"end": 13344,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13338,
											"end": 13341,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13262,
											"end": 13345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 13262,
											"end": 13345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13262,
											"end": 13345,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 13262,
											"end": 13345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13255,
											"end": 13345,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13255,
											"end": 13345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13354,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 13443,
											"end": 13446,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13354,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 13354,
											"end": 13447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13354,
											"end": 13447,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 13354,
											"end": 13447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13472,
											"end": 13473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13467,
											"end": 13470,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13463,
											"end": 13474,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13456,
											"end": 13474,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13456,
											"end": 13474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13082,
											"end": 13480,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13082,
											"end": 13480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13082,
											"end": 13480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13082,
											"end": 13480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13486,
											"end": 13865,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 13486,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13670,
											"end": 13673,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13692,
											"end": 13839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 13835,
											"end": 13838,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13692,
											"end": 13839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 13692,
											"end": 13839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13692,
											"end": 13839,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 13692,
											"end": 13839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13685,
											"end": 13839,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13685,
											"end": 13839,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13856,
											"end": 13859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13849,
											"end": 13859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13849,
											"end": 13859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13486,
											"end": 13865,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13486,
											"end": 13865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13486,
											"end": 13865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13486,
											"end": 13865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13871,
											"end": 14034,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 13871,
											"end": 14034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14011,
											"end": 14026,
											"name": "PUSH",
											"source": 8,
											"value": "526566756E64206661696C656400000000000000000000000000000000000000"
										},
										{
											"begin": 14007,
											"end": 14008,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13999,
											"end": 14005,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13995,
											"end": 14009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13988,
											"end": 14027,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13871,
											"end": 14034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13871,
											"end": 14034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14406,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 14040,
											"end": 14406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14182,
											"end": 14185,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14203,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 14267,
											"end": 14269,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 14262,
											"end": 14265,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14203,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 14203,
											"end": 14270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14203,
											"end": 14270,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 14203,
											"end": 14270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14196,
											"end": 14270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14196,
											"end": 14270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14279,
											"end": 14372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 14368,
											"end": 14371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14279,
											"end": 14372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 14279,
											"end": 14372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14279,
											"end": 14372,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 14279,
											"end": 14372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14397,
											"end": 14399,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14392,
											"end": 14395,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14388,
											"end": 14400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14381,
											"end": 14400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14381,
											"end": 14400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14406,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14412,
											"end": 14831,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 14412,
											"end": 14831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14578,
											"end": 14582,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14616,
											"end": 14618,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14605,
											"end": 14614,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14601,
											"end": 14619,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14593,
											"end": 14619,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14593,
											"end": 14619,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14665,
											"end": 14674,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14659,
											"end": 14663,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14655,
											"end": 14675,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14651,
											"end": 14652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14640,
											"end": 14649,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14636,
											"end": 14653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14629,
											"end": 14676,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14693,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 14819,
											"end": 14823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14693,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 14693,
											"end": 14824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14693,
											"end": 14824,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 14693,
											"end": 14824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14685,
											"end": 14824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14685,
											"end": 14824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14412,
											"end": 14831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14412,
											"end": 14831,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14412,
											"end": 14831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14412,
											"end": 14831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14837,
											"end": 15011,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 14837,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14977,
											"end": 15003,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7420696E207075626C69632073616C652070686173650000000000000000"
										},
										{
											"begin": 14973,
											"end": 14974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14965,
											"end": 14971,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14961,
											"end": 14975,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14954,
											"end": 15004,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14837,
											"end": 15011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14837,
											"end": 15011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15017,
											"end": 15383,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 15017,
											"end": 15383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15159,
											"end": 15162,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15180,
											"end": 15247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 15244,
											"end": 15246,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 15239,
											"end": 15242,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15180,
											"end": 15247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 15180,
											"end": 15247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15180,
											"end": 15247,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 15180,
											"end": 15247,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15173,
											"end": 15247,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15173,
											"end": 15247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15256,
											"end": 15349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 15345,
											"end": 15348,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15256,
											"end": 15349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 15256,
											"end": 15349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15256,
											"end": 15349,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 15256,
											"end": 15349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15374,
											"end": 15376,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15369,
											"end": 15372,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15365,
											"end": 15377,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15358,
											"end": 15377,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15358,
											"end": 15377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15017,
											"end": 15383,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15017,
											"end": 15383,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15017,
											"end": 15383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15017,
											"end": 15383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15808,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 15389,
											"end": 15808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15555,
											"end": 15559,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15593,
											"end": 15595,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15582,
											"end": 15591,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15578,
											"end": 15596,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15570,
											"end": 15596,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15570,
											"end": 15596,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15642,
											"end": 15651,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 15640,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15632,
											"end": 15652,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15628,
											"end": 15629,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15617,
											"end": 15626,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15613,
											"end": 15630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15606,
											"end": 15653,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15670,
											"end": 15801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 15796,
											"end": 15800,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15670,
											"end": 15801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 15670,
											"end": 15801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15670,
											"end": 15801,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 15670,
											"end": 15801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15662,
											"end": 15801,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15662,
											"end": 15801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15808,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15808,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15389,
											"end": 15808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15814,
											"end": 16039,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 15814,
											"end": 16039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15954,
											"end": 15988,
											"name": "PUSH",
											"source": 8,
											"value": "42656C6F77207075626C69632073616C65206D696E696D756D20636F6E747269"
										},
										{
											"begin": 15950,
											"end": 15951,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15942,
											"end": 15948,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15938,
											"end": 15952,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15931,
											"end": 15989,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16023,
											"end": 16031,
											"name": "PUSH",
											"source": 8,
											"value": "627574696F6E0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16018,
											"end": 16020,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16010,
											"end": 16016,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16006,
											"end": 16021,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15999,
											"end": 16032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15814,
											"end": 16039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15814,
											"end": 16039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16045,
											"end": 16411,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 16045,
											"end": 16411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16187,
											"end": 16190,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16208,
											"end": 16275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 16272,
											"end": 16274,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 16267,
											"end": 16270,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16208,
											"end": 16275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 16208,
											"end": 16275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16208,
											"end": 16275,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 16208,
											"end": 16275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16201,
											"end": 16275,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16201,
											"end": 16275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16284,
											"end": 16377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 16373,
											"end": 16376,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16284,
											"end": 16377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 16284,
											"end": 16377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16284,
											"end": 16377,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 16284,
											"end": 16377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16402,
											"end": 16404,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16397,
											"end": 16400,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16393,
											"end": 16405,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16386,
											"end": 16405,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16386,
											"end": 16405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16045,
											"end": 16411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16045,
											"end": 16411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16045,
											"end": 16411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16045,
											"end": 16411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16417,
											"end": 16836,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 16417,
											"end": 16836,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16583,
											"end": 16587,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16621,
											"end": 16623,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16610,
											"end": 16619,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16606,
											"end": 16624,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16598,
											"end": 16624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16598,
											"end": 16624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16670,
											"end": 16679,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16664,
											"end": 16668,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16660,
											"end": 16680,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16656,
											"end": 16657,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16645,
											"end": 16654,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16641,
											"end": 16658,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16634,
											"end": 16681,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16698,
											"end": 16829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 16824,
											"end": 16828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16698,
											"end": 16829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 16698,
											"end": 16829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16698,
											"end": 16829,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 16698,
											"end": 16829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16690,
											"end": 16829,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16690,
											"end": 16829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16417,
											"end": 16836,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16417,
											"end": 16836,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16417,
											"end": 16836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16417,
											"end": 16836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16842,
											"end": 17069,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 16842,
											"end": 17069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16982,
											"end": 17016,
											"name": "PUSH",
											"source": 8,
											"value": "45786365656473207075626C69632073616C65206D6178696D756D20636F6E74"
										},
										{
											"begin": 16978,
											"end": 16979,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16970,
											"end": 16976,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16966,
											"end": 16980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16959,
											"end": 17017,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17051,
											"end": 17061,
											"name": "PUSH",
											"source": 8,
											"value": "7269627574696F6E000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17046,
											"end": 17048,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17038,
											"end": 17044,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17034,
											"end": 17049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17027,
											"end": 17062,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16842,
											"end": 17069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16842,
											"end": 17069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17441,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 17075,
											"end": 17441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17217,
											"end": 17220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17238,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 17302,
											"end": 17304,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 17297,
											"end": 17300,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17238,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 17238,
											"end": 17305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17238,
											"end": 17305,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 17238,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17231,
											"end": 17305,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17231,
											"end": 17305,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17314,
											"end": 17407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 17403,
											"end": 17406,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17314,
											"end": 17407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 17314,
											"end": 17407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17314,
											"end": 17407,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 17314,
											"end": 17407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17432,
											"end": 17434,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17427,
											"end": 17430,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17423,
											"end": 17435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17416,
											"end": 17435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17416,
											"end": 17435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17447,
											"end": 17866,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 17447,
											"end": 17866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17613,
											"end": 17617,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17651,
											"end": 17653,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17640,
											"end": 17649,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17636,
											"end": 17654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17628,
											"end": 17654,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17628,
											"end": 17654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17700,
											"end": 17709,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17694,
											"end": 17698,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17690,
											"end": 17710,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17686,
											"end": 17687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17675,
											"end": 17684,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17671,
											"end": 17688,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17664,
											"end": 17711,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17728,
											"end": 17859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 17854,
											"end": 17858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17728,
											"end": 17859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 17728,
											"end": 17859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17728,
											"end": 17859,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 17728,
											"end": 17859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17720,
											"end": 17859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17720,
											"end": 17859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17447,
											"end": 17866,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17447,
											"end": 17866,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17447,
											"end": 17866,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17447,
											"end": 17866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17872,
											"end": 18045,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 17872,
											"end": 18045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18012,
											"end": 18037,
											"name": "PUSH",
											"source": 8,
											"value": "5075626C69632073616C65206361702072656163686564000000000000000000"
										},
										{
											"begin": 18008,
											"end": 18009,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18000,
											"end": 18006,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17996,
											"end": 18010,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17989,
											"end": 18038,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17872,
											"end": 18045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17872,
											"end": 18045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18051,
											"end": 18417,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 18051,
											"end": 18417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18193,
											"end": 18196,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18214,
											"end": 18281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 18278,
											"end": 18280,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 18273,
											"end": 18276,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18214,
											"end": 18281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 18214,
											"end": 18281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18214,
											"end": 18281,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 18214,
											"end": 18281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18207,
											"end": 18281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18207,
											"end": 18281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18290,
											"end": 18383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 18379,
											"end": 18382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18290,
											"end": 18383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 18290,
											"end": 18383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18290,
											"end": 18383,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 18290,
											"end": 18383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18408,
											"end": 18410,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18403,
											"end": 18406,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18399,
											"end": 18411,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18392,
											"end": 18411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18392,
											"end": 18411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18051,
											"end": 18417,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18051,
											"end": 18417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18051,
											"end": 18417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18051,
											"end": 18417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18423,
											"end": 18842,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 18423,
											"end": 18842,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18589,
											"end": 18593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18627,
											"end": 18629,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18616,
											"end": 18625,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18612,
											"end": 18630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18604,
											"end": 18630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18604,
											"end": 18630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18676,
											"end": 18685,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18670,
											"end": 18674,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18666,
											"end": 18686,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18662,
											"end": 18663,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18651,
											"end": 18660,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18647,
											"end": 18664,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18640,
											"end": 18687,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18704,
											"end": 18835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 18830,
											"end": 18834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18704,
											"end": 18835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 18704,
											"end": 18835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18704,
											"end": 18835,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 18704,
											"end": 18835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18696,
											"end": 18835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18696,
											"end": 18835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18423,
											"end": 18842,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18423,
											"end": 18842,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18423,
											"end": 18842,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18423,
											"end": 18842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18848,
											"end": 19018,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 18848,
											"end": 19018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18988,
											"end": 19010,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420746F6B656E20616D6F756E74000000000000000000000000"
										},
										{
											"begin": 18984,
											"end": 18985,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18976,
											"end": 18982,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18972,
											"end": 18986,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18965,
											"end": 19011,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18848,
											"end": 19018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18848,
											"end": 19018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19024,
											"end": 19390,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 19024,
											"end": 19390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19166,
											"end": 19169,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19187,
											"end": 19254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 19251,
											"end": 19253,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 19246,
											"end": 19249,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19187,
											"end": 19254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 19187,
											"end": 19254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19187,
											"end": 19254,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 19187,
											"end": 19254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19180,
											"end": 19254,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19180,
											"end": 19254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19263,
											"end": 19356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 19352,
											"end": 19355,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19263,
											"end": 19356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 19263,
											"end": 19356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19263,
											"end": 19356,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 19263,
											"end": 19356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19381,
											"end": 19383,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19376,
											"end": 19379,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19372,
											"end": 19384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19365,
											"end": 19384,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19365,
											"end": 19384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19024,
											"end": 19390,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19024,
											"end": 19390,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19024,
											"end": 19390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19024,
											"end": 19390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19396,
											"end": 19815,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 19396,
											"end": 19815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19562,
											"end": 19566,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19600,
											"end": 19602,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19589,
											"end": 19598,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19585,
											"end": 19603,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19577,
											"end": 19603,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19577,
											"end": 19603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19649,
											"end": 19658,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19643,
											"end": 19647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19639,
											"end": 19659,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19635,
											"end": 19636,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19624,
											"end": 19633,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19620,
											"end": 19637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19613,
											"end": 19660,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19677,
											"end": 19808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 19803,
											"end": 19807,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19677,
											"end": 19808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 19677,
											"end": 19808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19677,
											"end": 19808,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 19677,
											"end": 19808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19669,
											"end": 19808,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19669,
											"end": 19808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19396,
											"end": 19815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19396,
											"end": 19815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19396,
											"end": 19815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19396,
											"end": 19815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19821,
											"end": 20153,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 19821,
											"end": 20153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19942,
											"end": 19946,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19980,
											"end": 19982,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19969,
											"end": 19978,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19965,
											"end": 19983,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19957,
											"end": 19983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19957,
											"end": 19983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19993,
											"end": 20064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 20061,
											"end": 20062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20050,
											"end": 20059,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20046,
											"end": 20063,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20037,
											"end": 20043,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19993,
											"end": 20064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 19993,
											"end": 20064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19993,
											"end": 20064,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 19993,
											"end": 20064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20074,
											"end": 20146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 20142,
											"end": 20144,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20131,
											"end": 20140,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20127,
											"end": 20145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20118,
											"end": 20124,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20074,
											"end": 20146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 20074,
											"end": 20146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20074,
											"end": 20146,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 20074,
											"end": 20146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19821,
											"end": 20153,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 19821,
											"end": 20153,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19821,
											"end": 20153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19821,
											"end": 20153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19821,
											"end": 20153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19821,
											"end": 20153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20159,
											"end": 20249,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 20159,
											"end": 20249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20193,
											"end": 20200,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20236,
											"end": 20241,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20229,
											"end": 20242,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20222,
											"end": 20243,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20211,
											"end": 20243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20211,
											"end": 20243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20159,
											"end": 20249,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20159,
											"end": 20249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20159,
											"end": 20249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20159,
											"end": 20249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20255,
											"end": 20371,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 20255,
											"end": 20371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20325,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 20340,
											"end": 20345,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20325,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 20325,
											"end": 20346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20325,
											"end": 20346,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 20325,
											"end": 20346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20318,
											"end": 20323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20315,
											"end": 20347,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 20305,
											"end": 20365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 20305,
											"end": 20365,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20361,
											"end": 20362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20358,
											"end": 20359,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20351,
											"end": 20363,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 20305,
											"end": 20365,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 20305,
											"end": 20365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20255,
											"end": 20371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20255,
											"end": 20371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20377,
											"end": 20514,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 20377,
											"end": 20514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20431,
											"end": 20436,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20462,
											"end": 20468,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20456,
											"end": 20469,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20447,
											"end": 20469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20447,
											"end": 20469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20478,
											"end": 20508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 20502,
											"end": 20507,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20478,
											"end": 20508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 20478,
											"end": 20508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20478,
											"end": 20508,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 20478,
											"end": 20508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20377,
											"end": 20514,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20377,
											"end": 20514,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20377,
											"end": 20514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20377,
											"end": 20514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20377,
											"end": 20514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20520,
											"end": 20865,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 20520,
											"end": 20865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20587,
											"end": 20593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20636,
											"end": 20638,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20624,
											"end": 20633,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20615,
											"end": 20622,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20611,
											"end": 20634,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20607,
											"end": 20639,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 20604,
											"end": 20723,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20604,
											"end": 20723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 20604,
											"end": 20723,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20642,
											"end": 20721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 20642,
											"end": 20721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 20642,
											"end": 20721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20642,
											"end": 20721,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 20642,
											"end": 20721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20604,
											"end": 20723,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 20604,
											"end": 20723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20762,
											"end": 20763,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20787,
											"end": 20848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 20840,
											"end": 20847,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20831,
											"end": 20837,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20820,
											"end": 20829,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20816,
											"end": 20838,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20787,
											"end": 20848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 20787,
											"end": 20848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20787,
											"end": 20848,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 20787,
											"end": 20848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20777,
											"end": 20848,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20777,
											"end": 20848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20733,
											"end": 20858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20520,
											"end": 20865,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20520,
											"end": 20865,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20520,
											"end": 20865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20520,
											"end": 20865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20520,
											"end": 20865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20871,
											"end": 21051,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 20871,
											"end": 21051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20919,
											"end": 20996,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20916,
											"end": 20917,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20909,
											"end": 20997,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21016,
											"end": 21020,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 21013,
											"end": 21014,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21006,
											"end": 21021,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21040,
											"end": 21044,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 21037,
											"end": 21038,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21030,
											"end": 21045,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21248,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 21057,
											"end": 21248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21097,
											"end": 21100,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 21134,
											"end": 21135,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 21116,
											"end": 21136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21111,
											"end": 21136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21111,
											"end": 21136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21150,
											"end": 21170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 21168,
											"end": 21169,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21150,
											"end": 21170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 21150,
											"end": 21170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21150,
											"end": 21170,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 21150,
											"end": 21170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21145,
											"end": 21170,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21145,
											"end": 21170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21193,
											"end": 21194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21190,
											"end": 21191,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21186,
											"end": 21195,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21179,
											"end": 21195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21179,
											"end": 21195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21214,
											"end": 21217,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21211,
											"end": 21212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21208,
											"end": 21218,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 21205,
											"end": 21241,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21205,
											"end": 21241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 21205,
											"end": 21241,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21221,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 21221,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 21221,
											"end": 21239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21221,
											"end": 21239,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 21221,
											"end": 21239,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21205,
											"end": 21241,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 21205,
											"end": 21241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21248,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21254,
											"end": 21720,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 21254,
											"end": 21720,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21415,
											"end": 21419,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21453,
											"end": 21455,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 21442,
											"end": 21451,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21438,
											"end": 21456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21430,
											"end": 21456,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21430,
											"end": 21456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21466,
											"end": 21537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 21534,
											"end": 21535,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21523,
											"end": 21532,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21519,
											"end": 21536,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21510,
											"end": 21516,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21466,
											"end": 21537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 21466,
											"end": 21537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21466,
											"end": 21537,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 21466,
											"end": 21537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21547,
											"end": 21619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 21615,
											"end": 21617,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21604,
											"end": 21613,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21600,
											"end": 21618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21591,
											"end": 21597,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21547,
											"end": 21619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 21547,
											"end": 21619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21547,
											"end": 21619,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 21547,
											"end": 21619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21629,
											"end": 21713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 21709,
											"end": 21711,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21698,
											"end": 21707,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21694,
											"end": 21712,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21685,
											"end": 21691,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21629,
											"end": 21713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 21629,
											"end": 21713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21629,
											"end": 21713,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 21629,
											"end": 21713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21254,
											"end": 21720,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 21254,
											"end": 21720,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 21254,
											"end": 21720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21254,
											"end": 21720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21254,
											"end": 21720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21254,
											"end": 21720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21254,
											"end": 21720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/TokenSale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimRefund()": "b5545a3c",
							"contributeToPresale()": "0269d3b4",
							"contributeToPublicSale()": "e59c9510",
							"currentPhase()": "055ad42e",
							"distributeTokensToAddress(address,uint256)": "fefae016",
							"endPresale()": "a43be57b",
							"endPublicSale()": "c7d17fd1",
							"owner()": "8da5cb5b",
							"presaleCap()": "63d5502f",
							"presaleContributions(address)": "477f1eba",
							"presaleMaxContribution()": "87e449c3",
							"presaleMinContribution()": "c4849847",
							"publicSaleCap()": "64826b7a",
							"publicSaleContributions(address)": "35f74869",
							"publicSaleMaxContribution()": "7146e4fa",
							"publicSaleMinContribution()": "2a517ab2",
							"renounceOwnership()": "715018a6",
							"startPresale()": "04c98b2b",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_presaleCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_publicSaleCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_presaleMinContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_presaleMaxContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_publicSaleMinContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_publicSaleMaxContribution\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"etherAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum TokenSale.SalePhase\",\"name\":\"phase\",\"type\":\"uint8\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contributeToPresale\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contributeToPublicSale\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentPhase\",\"outputs\":[{\"internalType\":\"enum TokenSale.SalePhase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"distributeTokensToAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endPublicSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"presaleContributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleMaxContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleMinContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicSaleCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"publicSaleContributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicSaleMaxContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicSaleMinContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenSale.sol\":\"TokenSale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/TokenSale.sol\":{\"keccak256\":\"0xf50beb53cbecffdbb030cb318c900b2d86045f56effd764b3ecb369fb5448f8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3200a53fe4c347056f60929ebe331ac9c21085858246c1cefba462e28f1a6e88\",\"dweb:/ipfs/QmWpPZR74LncyTHZ2sNBHg1SKGJE5UStTJqQE3nfgtv2P3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1258,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ERC20)799"
							},
							{
								"astId": 1260,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "presaleCap",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1262,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "publicSaleCap",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1264,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "presaleMinContribution",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1266,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "presaleMaxContribution",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1268,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "publicSaleMinContribution",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1270,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "publicSaleMaxContribution",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1274,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "presaleContributions",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1278,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "publicSaleContributions",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1286,
								"contract": "contracts/TokenSale.sol:TokenSale",
								"label": "currentPhase",
								"offset": 0,
								"slot": "10",
								"type": "t_enum(SalePhase)1283"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ERC20)799": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_enum(SalePhase)1283": {
								"encoding": "inplace",
								"label": "enum TokenSale.SalePhase",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1245
						]
					},
					"id": 1246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 936,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1245,
							"linearizedBaseContracts": [
								1245
							],
							"name": "SafeMath",
							"nameLocation": "490:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "717:140:6",
										"statements": [
											{
												"id": 966,
												"nodeType": "UncheckedBlock",
												"src": "727:124:6",
												"statements": [
													{
														"assignments": [
															949
														],
														"declarations": [
															{
																"constant": false,
																"id": 949,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 966,
																"src": "751:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 948,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 953,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 950,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "763:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 951,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "767:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 954,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "786:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 955,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "790:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 961,
														"nodeType": "IfStatement",
														"src": "782:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 959,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 947,
															"id": 960,
															"nodeType": "Return",
															"src": "793:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 963,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 949,
																	"src": "838:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 964,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 947,
														"id": 965,
														"nodeType": "Return",
														"src": "824:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "657:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "668:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:6"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "702:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "708:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:6"
									},
									"scope": 1245,
									"src": "641:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "1078:113:6",
										"statements": [
											{
												"id": 994,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 980,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "1116:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 981,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "1120:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 987,
														"nodeType": "IfStatement",
														"src": "1112:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 985,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 979,
															"id": 986,
															"nodeType": "Return",
															"src": "1123:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 989,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "1168:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 990,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 973,
																		"src": "1172:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 992,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 979,
														"id": 993,
														"nodeType": "Return",
														"src": "1154:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:6",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1018:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1029:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:6"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1063:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 975,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1069:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:6"
									},
									"scope": 1245,
									"src": "1002:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "1415:417:6",
										"statements": [
											{
												"id": 1036,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1008,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "1683:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1015,
														"nodeType": "IfStatement",
														"src": "1679:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1013,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1007,
															"id": 1014,
															"nodeType": "Return",
															"src": "1691:16:6"
														}
													},
													{
														"assignments": [
															1017
														],
														"declarations": [
															{
																"constant": false,
																"id": 1017,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1036,
																"src": "1721:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1016,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1021,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1018,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "1733:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1019,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "1737:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1022,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "1756:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1023,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 999,
																	"src": "1760:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1025,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "1765:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1031,
														"nodeType": "IfStatement",
														"src": "1752:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1029,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1007,
															"id": 1030,
															"nodeType": "Return",
															"src": "1768:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1033,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "1813:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1034,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1007,
														"id": 1035,
														"nodeType": "Return",
														"src": "1799:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "1355:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "1366:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:6"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "1400:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1003,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "1406:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:6"
									},
									"scope": 1245,
									"src": "1339:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "2057:114:6",
										"statements": [
											{
												"id": 1064,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1050,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1043,
																"src": "2095:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1057,
														"nodeType": "IfStatement",
														"src": "2091:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1055,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1049,
															"id": 1056,
															"nodeType": "Return",
															"src": "2103:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1059,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1041,
																		"src": "2148:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1060,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1043,
																		"src": "2152:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1062,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1049,
														"id": 1063,
														"nodeType": "Return",
														"src": "2134:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1997:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2008:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:6"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2042:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1045,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2048:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:6"
									},
									"scope": 1245,
									"src": "1981:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "2406:114:6",
										"statements": [
											{
												"id": 1092,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1078,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "2444:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1085,
														"nodeType": "IfStatement",
														"src": "2440:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1083,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1077,
															"id": 1084,
															"nodeType": "Return",
															"src": "2452:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1087,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "2497:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1088,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1071,
																		"src": "2501:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1090,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1077,
														"id": 1091,
														"nodeType": "Return",
														"src": "2483:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2346:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2357:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:6"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2391:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1073,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2397:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:6"
									},
									"scope": 1245,
									"src": "2330:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "2822:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1104,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "2839:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1105,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "2843:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1103,
												"id": 1107,
												"nodeType": "Return",
												"src": "2832:12:6"
											}
										]
									},
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "2768:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "2779:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:6"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "2813:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:6"
									},
									"scope": 1245,
									"src": "2755:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "3189:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1119,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "3206:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1120,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "3210:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1118,
												"id": 1122,
												"nodeType": "Return",
												"src": "3199:12:6"
											}
										]
									},
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3135:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3146:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:6"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3180:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:6"
									},
									"scope": 1245,
									"src": "3122:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "3532:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1134,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "3549:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1135,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "3553:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1133,
												"id": 1137,
												"nodeType": "Return",
												"src": "3542:12:6"
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3478:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3489:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:6"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3523:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:6"
									},
									"scope": 1245,
									"src": "3465:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "3917:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1149,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "3934:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1150,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "3938:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1148,
												"id": 1152,
												"nodeType": "Return",
												"src": "3927:12:6"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "3863:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "3874:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:6"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "3908:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:6"
									},
									"scope": 1245,
									"src": "3850:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "4466:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1164,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "4483:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1165,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "4487:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1163,
												"id": 1167,
												"nodeType": "Return",
												"src": "4476:12:6"
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "4412:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "4423:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:6"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "4457:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:6"
									},
									"scope": 1245,
									"src": "4399:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "5054:106:6",
										"statements": [
											{
												"id": 1192,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1182,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "5096:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1183,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1172,
																		"src": "5101:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1185,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "5104:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1181,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1187,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1188,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "5138:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1189,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "5142:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1180,
														"id": 1191,
														"nodeType": "Return",
														"src": "5131:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "4972:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "4983:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "4994:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:6"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "5045:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:6"
									},
									"scope": 1245,
									"src": "4959:201:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "5739:105:6",
										"statements": [
											{
												"id": 1217,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1207,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "5781:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1210,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "5788:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1206,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1212,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1213,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "5822:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1214,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "5826:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1205,
														"id": 1216,
														"nodeType": "Return",
														"src": "5815:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "5657:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "5668:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "5679:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:6"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "5730:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:6"
									},
									"scope": 1245,
									"src": "5644:200:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "6585:105:6",
										"statements": [
											{
												"id": 1242,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1224,
																		"src": "6627:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1235,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "6634:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1231,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1237,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1238,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "6668:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1239,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1224,
																"src": "6672:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1230,
														"id": 1241,
														"nodeType": "Return",
														"src": "6661:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "6503:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "6514:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "6525:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:6"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "6576:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:6"
									},
									"scope": 1245,
									"src": "6490:200:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1246,
							"src": "482:6210:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:6"
				},
				"id": 6
			},
			"contracts/TokenSale.sol": {
				"ast": {
					"absolutePath": "contracts/TokenSale.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"SafeMath": [
							1245
						],
						"TokenSale": [
							1712
						]
					},
					"id": 1713,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1247,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1713,
							"sourceUnit": 800,
							"src": "60:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1713,
							"sourceUnit": 1246,
							"src": "117:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1713,
							"sourceUnit": 148,
							"src": "176:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1251,
										"name": "Ownable",
										"nameLocations": [
											"254:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "254:7:7"
									},
									"id": 1252,
									"nodeType": "InheritanceSpecifier",
									"src": "254:7:7"
								}
							],
							"canonicalName": "TokenSale",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1712,
							"linearizedBaseContracts": [
								1712,
								147,
								933
							],
							"name": "TokenSale",
							"nameLocation": "241:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1255,
									"libraryName": {
										"id": 1253,
										"name": "SafeMath",
										"nameLocations": [
											"275:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1245,
										"src": "275:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "269:27:7",
									"typeName": {
										"id": 1254,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "288:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1258,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "319:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "306:18:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$799",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 1257,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1256,
											"name": "ERC20",
											"nameLocations": [
												"306:5:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 799,
											"src": "306:5:7"
										},
										"referencedDeclaration": 799,
										"src": "306:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$799",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "63d5502f",
									"id": 1260,
									"mutability": "mutable",
									"name": "presaleCap",
									"nameLocation": "373:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "358:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1259,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "358:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "64826b7a",
									"id": 1262,
									"mutability": "mutable",
									"name": "publicSaleCap",
									"nameLocation": "405:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "390:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1261,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "390:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c4849847",
									"id": 1264,
									"mutability": "mutable",
									"name": "presaleMinContribution",
									"nameLocation": "440:22:7",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "425:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1263,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "425:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "87e449c3",
									"id": 1266,
									"mutability": "mutable",
									"name": "presaleMaxContribution",
									"nameLocation": "484:22:7",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "469:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1265,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "469:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2a517ab2",
									"id": 1268,
									"mutability": "mutable",
									"name": "publicSaleMinContribution",
									"nameLocation": "528:25:7",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "513:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1267,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "513:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7146e4fa",
									"id": 1270,
									"mutability": "mutable",
									"name": "publicSaleMaxContribution",
									"nameLocation": "575:25:7",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "560:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1269,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "560:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "477f1eba",
									"id": 1274,
									"mutability": "mutable",
									"name": "presaleContributions",
									"nameLocation": "644:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "609:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1273,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1271,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "617:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "609:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1272,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "628:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "35f74869",
									"id": 1278,
									"mutability": "mutable",
									"name": "publicSaleContributions",
									"nameLocation": "706:23:7",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "671:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1277,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1275,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "679:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "671:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1276,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "690:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "TokenSale.SalePhase",
									"id": 1283,
									"members": [
										{
											"id": 1279,
											"name": "NotStarted",
											"nameLocation": "755:10:7",
											"nodeType": "EnumValue",
											"src": "755:10:7"
										},
										{
											"id": 1280,
											"name": "Presale",
											"nameLocation": "767:7:7",
											"nodeType": "EnumValue",
											"src": "767:7:7"
										},
										{
											"id": 1281,
											"name": "PublicSale",
											"nameLocation": "776:10:7",
											"nodeType": "EnumValue",
											"src": "776:10:7"
										},
										{
											"id": 1282,
											"name": "Finished",
											"nameLocation": "788:8:7",
											"nodeType": "EnumValue",
											"src": "788:8:7"
										}
									],
									"name": "SalePhase",
									"nameLocation": "743:9:7",
									"nodeType": "EnumDefinition",
									"src": "738:60:7"
								},
								{
									"constant": false,
									"functionSelector": "055ad42e",
									"id": 1286,
									"mutability": "mutable",
									"name": "currentPhase",
									"nameLocation": "821:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "804:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_SalePhase_$1283",
										"typeString": "enum TokenSale.SalePhase"
									},
									"typeName": {
										"id": 1285,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1284,
											"name": "SalePhase",
											"nameLocations": [
												"804:9:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1283,
											"src": "804:9:7"
										},
										"referencedDeclaration": 1283,
										"src": "804:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_SalePhase_$1283",
											"typeString": "enum TokenSale.SalePhase"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "07bd967119635e499edb871f00e988945fc967531c4dfa79a630a18ed98cf1eb",
									"id": 1297,
									"name": "TokensPurchased",
									"nameLocation": "848:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "880:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "864:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "895:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "887:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"indexed": false,
												"mutability": "mutable",
												"name": "etherAmount",
												"nameLocation": "911:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "903:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"indexed": false,
												"mutability": "mutable",
												"name": "phase",
												"nameLocation": "934:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "924:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_SalePhase_$1283",
													"typeString": "enum TokenSale.SalePhase"
												},
												"typeName": {
													"id": 1294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1293,
														"name": "SalePhase",
														"nameLocations": [
															"924:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1283,
														"src": "924:9:7"
													},
													"referencedDeclaration": 1283,
													"src": "924:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SalePhase_$1283",
														"typeString": "enum TokenSale.SalePhase"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "863:77:7"
									},
									"src": "842:99:7"
								},
								{
									"anonymous": false,
									"eventSelector": "16b0da2ffcb90c6723317bd637d9aad7f04711f42bbe0ac0918ebe10f1f9001c",
									"id": 1303,
									"name": "TokensDistributed",
									"nameLocation": "953:17:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "987:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "971:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1006:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "998:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:43:7"
									},
									"src": "947:67:7"
								},
								{
									"anonymous": false,
									"eventSelector": "358fe4192934d3bf28ae181feda1f4bd08ca67f5e2fad55582cce5eb67304ae9",
									"id": 1309,
									"name": "RefundClaimed",
									"nameLocation": "1026:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"indexed": true,
												"mutability": "mutable",
												"name": "contributor",
												"nameLocation": "1056:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1040:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1077:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1069:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:45:7"
									},
									"src": "1020:65:7"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "1121:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_SalePhase_$1283",
																"typeString": "enum TokenSale.SalePhase"
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1312,
																"name": "currentPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "1140:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SalePhase_$1283",
																	"typeString": "enum TokenSale.SalePhase"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1313,
																	"name": "SalePhase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "1156:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_SalePhase_$1283_$",
																		"typeString": "type(enum TokenSale.SalePhase)"
																	}
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1166:7:7",
																"memberName": "Presale",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1280,
																"src": "1156:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SalePhase_$1283",
																	"typeString": "enum TokenSale.SalePhase"
																}
															},
															"src": "1140:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420696e2070726573616c65207068617365",
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1175:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11dceae1f6fe37f98654565689f256508e5e1d136e9204b15d7d6313600e3ba9",
																"typeString": "literal_string \"Not in presale phase\""
															},
															"value": "Not in presale phase"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_11dceae1f6fe37f98654565689f256508e5e1d136e9204b15d7d6313600e3ba9",
																"typeString": "literal_string \"Not in presale phase\""
															}
														],
														"id": 1311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1132:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1132:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1318,
												"nodeType": "ExpressionStatement",
												"src": "1132:66:7"
											},
											{
												"id": 1319,
												"nodeType": "PlaceholderStatement",
												"src": "1209:1:7"
											}
										]
									},
									"id": 1321,
									"name": "onlyPresalePhase",
									"nameLocation": "1102:16:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1118:2:7"
									},
									"src": "1093:125:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "1257:104:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_SalePhase_$1283",
																"typeString": "enum TokenSale.SalePhase"
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1324,
																"name": "currentPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "1276:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SalePhase_$1283",
																	"typeString": "enum TokenSale.SalePhase"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1325,
																	"name": "SalePhase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "1292:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_SalePhase_$1283_$",
																		"typeString": "type(enum TokenSale.SalePhase)"
																	}
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1302:10:7",
																"memberName": "PublicSale",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1281,
																"src": "1292:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SalePhase_$1283",
																	"typeString": "enum TokenSale.SalePhase"
																}
															},
															"src": "1276:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420696e207075626c69632073616c65207068617365",
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1314:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1bdadf08185d5508cdbdc01e2a97dd384f3d5d49a4e81f930d8ce61cbb46eaa3",
																"typeString": "literal_string \"Not in public sale phase\""
															},
															"value": "Not in public sale phase"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1bdadf08185d5508cdbdc01e2a97dd384f3d5d49a4e81f930d8ce61cbb46eaa3",
																"typeString": "literal_string \"Not in public sale phase\""
															}
														],
														"id": 1323,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1268:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1268:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "1268:73:7"
											},
											{
												"id": 1331,
												"nodeType": "PlaceholderStatement",
												"src": "1352:1:7"
											}
										]
									},
									"id": 1333,
									"name": "onlyPublicSalePhase",
									"nameLocation": "1235:19:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1254:2:7"
									},
									"src": "1226:135:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "1396:94:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_SalePhase_$1283",
																"typeString": "enum TokenSale.SalePhase"
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1336,
																"name": "currentPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "1415:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SalePhase_$1283",
																	"typeString": "enum TokenSale.SalePhase"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 1337,
																	"name": "SalePhase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "1431:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_SalePhase_$1283_$",
																		"typeString": "type(enum TokenSale.SalePhase)"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1441:8:7",
																"memberName": "Finished",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1282,
																"src": "1431:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SalePhase_$1283",
																	"typeString": "enum TokenSale.SalePhase"
																}
															},
															"src": "1415:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c652069732066696e6973686564",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1451:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f538c3dae3ae556c2667197f31eeb6cee0b2916f588ec055ee0529d83d1317f1",
																"typeString": "literal_string \"Sale is finished\""
															},
															"value": "Sale is finished"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f538c3dae3ae556c2667197f31eeb6cee0b2916f588ec055ee0529d83d1317f1",
																"typeString": "literal_string \"Sale is finished\""
															}
														],
														"id": 1335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1407:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1407:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "ExpressionStatement",
												"src": "1407:63:7"
											},
											{
												"id": 1343,
												"nodeType": "PlaceholderStatement",
												"src": "1481:1:7"
											}
										]
									},
									"id": 1345,
									"name": "saleNotFinished",
									"nameLocation": "1378:15:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1393:2:7"
									},
									"src": "1369:121:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "1830:403:7",
										"statements": [
											{
												"expression": {
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1368,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "1841:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1369,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1348,
														"src": "1849:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"src": "1841:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$799",
														"typeString": "contract ERC20"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "1841:14:7"
											},
											{
												"expression": {
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1372,
														"name": "presaleCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1866:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1373,
														"name": "_presaleCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "1879:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1866:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "1866:24:7"
											},
											{
												"expression": {
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1376,
														"name": "publicSaleCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "1901:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1377,
														"name": "_publicSaleCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "1917:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1901:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "1901:30:7"
											},
											{
												"expression": {
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1380,
														"name": "presaleMinContribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "1942:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1381,
														"name": "_presaleMinContribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "1967:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1942:48:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "1942:48:7"
											},
											{
												"expression": {
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1384,
														"name": "presaleMaxContribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "2001:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1385,
														"name": "_presaleMaxContribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "2026:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2001:48:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "2001:48:7"
											},
											{
												"expression": {
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1388,
														"name": "publicSaleMinContribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "2060:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1389,
														"name": "_publicSaleMinContribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "2088:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2060:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1391,
												"nodeType": "ExpressionStatement",
												"src": "2060:54:7"
											},
											{
												"expression": {
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1392,
														"name": "publicSaleMaxContribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "2125:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1393,
														"name": "_publicSaleMaxContribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "2153:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2125:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "2125:54:7"
											},
											{
												"expression": {
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1396,
														"name": "currentPhase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "2190:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SalePhase_$1283",
															"typeString": "enum TokenSale.SalePhase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1397,
															"name": "SalePhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "2205:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SalePhase_$1283_$",
																"typeString": "type(enum TokenSale.SalePhase)"
															}
														},
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2215:10:7",
														"memberName": "NotStarted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1279,
														"src": "2205:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SalePhase_$1283",
															"typeString": "enum TokenSale.SalePhase"
														}
													},
													"src": "2190:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SalePhase_$1283",
														"typeString": "enum TokenSale.SalePhase"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "2190:35:7"
											}
										]
									},
									"id": 1402,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1365,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1362,
													"src": "1816:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1366,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1364,
												"name": "Ownable",
												"nameLocations": [
													"1808:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1808:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1808:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1526:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "1520:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$799",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 1347,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1346,
														"name": "ERC20",
														"nameLocations": [
															"1520:5:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 799,
														"src": "1520:5:7"
													},
													"referencedDeclaration": 799,
													"src": "1520:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$799",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "_presaleCap",
												"nameLocation": "1551:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "1543:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "_publicSaleCap",
												"nameLocation": "1581:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "1573:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "_presaleMinContribution",
												"nameLocation": "1614:23:7",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "1606:31:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "_presaleMaxContribution",
												"nameLocation": "1656:23:7",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "1648:31:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "_publicSaleMinContribution",
												"nameLocation": "1698:26:7",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "1690:34:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "_publicSaleMaxContribution",
												"nameLocation": "1743:26:7",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "1735:34:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1735:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1788:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "1780:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1509:298:7"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1830:0:7"
									},
									"scope": 1712,
									"src": "1498:735:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "2300:51:7",
										"statements": [
											{
												"expression": {
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1409,
														"name": "currentPhase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "2311:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SalePhase_$1283",
															"typeString": "enum TokenSale.SalePhase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1410,
															"name": "SalePhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "2326:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SalePhase_$1283_$",
																"typeString": "type(enum TokenSale.SalePhase)"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2336:7:7",
														"memberName": "Presale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1280,
														"src": "2326:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SalePhase_$1283",
															"typeString": "enum TokenSale.SalePhase"
														}
													},
													"src": "2311:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SalePhase_$1283",
														"typeString": "enum TokenSale.SalePhase"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "2311:32:7"
											}
										]
									},
									"functionSelector": "04c98b2b",
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1405,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1404,
												"name": "onlyOwner",
												"nameLocations": [
													"2274:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2274:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2274:9:7"
										},
										{
											"id": 1407,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1406,
												"name": "saleNotFinished",
												"nameLocations": [
													"2284:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1345,
												"src": "2284:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2284:15:7"
										}
									],
									"name": "startPresale",
									"nameLocation": "2250:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2262:2:7"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2300:0:7"
									},
									"scope": 1712,
									"src": "2241:110:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "2417:54:7",
										"statements": [
											{
												"expression": {
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1422,
														"name": "currentPhase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "2428:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SalePhase_$1283",
															"typeString": "enum TokenSale.SalePhase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1423,
															"name": "SalePhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "2443:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SalePhase_$1283_$",
																"typeString": "type(enum TokenSale.SalePhase)"
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2453:10:7",
														"memberName": "PublicSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1281,
														"src": "2443:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SalePhase_$1283",
															"typeString": "enum TokenSale.SalePhase"
														}
													},
													"src": "2428:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SalePhase_$1283",
														"typeString": "enum TokenSale.SalePhase"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "2428:35:7"
											}
										]
									},
									"functionSelector": "a43be57b",
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1418,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1417,
												"name": "onlyOwner",
												"nameLocations": [
													"2390:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2390:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2390:9:7"
										},
										{
											"id": 1420,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1419,
												"name": "onlyPresalePhase",
												"nameLocations": [
													"2400:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1321,
												"src": "2400:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2400:16:7"
										}
									],
									"name": "endPresale",
									"nameLocation": "2368:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:7"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2417:0:7"
									},
									"scope": 1712,
									"src": "2359:112:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "2543:52:7",
										"statements": [
											{
												"expression": {
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1435,
														"name": "currentPhase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "2554:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SalePhase_$1283",
															"typeString": "enum TokenSale.SalePhase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1436,
															"name": "SalePhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "2569:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SalePhase_$1283_$",
																"typeString": "type(enum TokenSale.SalePhase)"
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2579:8:7",
														"memberName": "Finished",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1282,
														"src": "2569:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SalePhase_$1283",
															"typeString": "enum TokenSale.SalePhase"
														}
													},
													"src": "2554:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SalePhase_$1283",
														"typeString": "enum TokenSale.SalePhase"
													}
												},
												"id": 1439,
												"nodeType": "ExpressionStatement",
												"src": "2554:33:7"
											}
										]
									},
									"functionSelector": "c7d17fd1",
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1431,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1430,
												"name": "onlyOwner",
												"nameLocations": [
													"2513:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2513:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2513:9:7"
										},
										{
											"id": 1433,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1432,
												"name": "onlyPublicSalePhase",
												"nameLocations": [
													"2523:19:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1333,
												"src": "2523:19:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2523:19:7"
										}
									],
									"name": "endPublicSale",
									"nameLocation": "2488:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2501:2:7"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2543:0:7"
									},
									"scope": 1712,
									"src": "2479:116:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "2668:434:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1447,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2687:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2691:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2687:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1449,
																"name": "presaleMinContribution",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "2700:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2687:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42656c6f772070726573616c65206d696e696d756d20636f6e747269627574696f6e",
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2724:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f60a2877b0c2d535227e68c42b7651a75acbcf1c62616f00b8946788a0c807d7",
																"typeString": "literal_string \"Below presale minimum contribution\""
															},
															"value": "Below presale minimum contribution"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f60a2877b0c2d535227e68c42b7651a75acbcf1c62616f00b8946788a0c807d7",
																"typeString": "literal_string \"Below presale minimum contribution\""
															}
														],
														"id": 1446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2679:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2679:82:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "2679:82:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1455,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2780:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2784:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2780:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1457,
																"name": "presaleMaxContribution",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "2793:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2780:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "457863656564732070726573616c65206d6178696d756d20636f6e747269627574696f6e",
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2817:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f212a1a49cb2a4d8bd4c7344416f62ab0139924f122c28867e8d08455ec6aac8",
																"typeString": "literal_string \"Exceeds presale maximum contribution\""
															},
															"value": "Exceeds presale maximum contribution"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f212a1a49cb2a4d8bd4c7344416f62ab0139924f122c28867e8d08455ec6aac8",
																"typeString": "literal_string \"Exceeds presale maximum contribution\""
															}
														],
														"id": 1454,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2772:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2772:84:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "2772:84:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1469,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2901:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2905:5:7",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "2901:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 1465,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "2883:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_TokenSale_$1712",
																						"typeString": "contract TokenSale"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_TokenSale_$1712",
																						"typeString": "contract TokenSale"
																					}
																				],
																				"id": 1464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2875:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1463,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2875:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2875:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2889:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "2875:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2897:3:7",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1109,
																	"src": "2875:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2875:36:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1472,
																"name": "presaleCap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "2915:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2875:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c65206361702072656163686564",
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2927:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_039875f28fd62c64eb2a7c30f6ed91c70a45e101ec247c9ef31897f9d7c81bf0",
																"typeString": "literal_string \"Presale cap reached\""
															},
															"value": "Presale cap reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_039875f28fd62c64eb2a7c30f6ed91c70a45e101ec247c9ef31897f9d7c81bf0",
																"typeString": "literal_string \"Presale cap reached\""
															}
														],
														"id": 1462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2867:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2867:82:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "2867:82:7"
											},
											{
												"expression": {
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1477,
															"name": "presaleContributions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "2962:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1480,
														"indexExpression": {
															"expression": {
																"id": 1478,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2983:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2987:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2983:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2962:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1486,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3034:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3038:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3034:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1481,
																	"name": "presaleContributions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "2997:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1484,
																"indexExpression": {
																	"expression": {
																		"id": 1482,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3018:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3022:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3018:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2997:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3030:3:7",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1109,
															"src": "2997:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2997:47:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2962:82:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "2962:82:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1492,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3072:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3076:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3072:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1494,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3084:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3088:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3084:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1491,
														"name": "distributeTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "3055:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3055:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "3055:39:7"
											}
										]
									},
									"functionSelector": "0269d3b4",
									"id": 1499,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1444,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1443,
												"name": "onlyPresalePhase",
												"nameLocations": [
													"2651:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1321,
												"src": "2651:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2651:16:7"
										}
									],
									"name": "contributeToPresale",
									"nameLocation": "2612:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2631:2:7"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:7"
									},
									"scope": 1712,
									"src": "2603:499:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "3181:461:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1505,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3200:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3204:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3200:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1507,
																"name": "publicSaleMinContribution",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "3213:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3200:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42656c6f77207075626c69632073616c65206d696e696d756d20636f6e747269627574696f6e",
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3240:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a416c07eaf5249727c707e8ce66fa46914920413139e2355062a65d939e1866",
																"typeString": "literal_string \"Below public sale minimum contribution\""
															},
															"value": "Below public sale minimum contribution"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a416c07eaf5249727c707e8ce66fa46914920413139e2355062a65d939e1866",
																"typeString": "literal_string \"Below public sale minimum contribution\""
															}
														],
														"id": 1504,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3192:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3192:89:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "3192:89:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1513,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3300:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3304:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3300:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1515,
																"name": "publicSaleMaxContribution",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "3313:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3300:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473207075626c69632073616c65206d6178696d756d20636f6e747269627574696f6e",
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3340:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24f78bdc540fa518f899558cbd02c2348ec59a00e6c73d111cf9aa107af4e447",
																"typeString": "literal_string \"Exceeds public sale maximum contribution\""
															},
															"value": "Exceeds public sale maximum contribution"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24f78bdc540fa518f899558cbd02c2348ec59a00e6c73d111cf9aa107af4e447",
																"typeString": "literal_string \"Exceeds public sale maximum contribution\""
															}
														],
														"id": 1512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3292:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:91:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "3292:91:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1527,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3428:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3432:5:7",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "3428:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 1523,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3410:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_TokenSale_$1712",
																						"typeString": "contract TokenSale"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_TokenSale_$1712",
																						"typeString": "contract TokenSale"
																					}
																				],
																				"id": 1522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3402:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1521,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3402:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3402:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3416:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3402:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3424:3:7",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1109,
																	"src": "3402:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3402:36:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1530,
																"name": "publicSaleCap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "3442:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3402:53:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5075626c69632073616c65206361702072656163686564",
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3457:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf220db8b7e738831b38283f816668eeccdbb13d8b1decd6299cb3a7bc22448c",
																"typeString": "literal_string \"Public sale cap reached\""
															},
															"value": "Public sale cap reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf220db8b7e738831b38283f816668eeccdbb13d8b1decd6299cb3a7bc22448c",
																"typeString": "literal_string \"Public sale cap reached\""
															}
														],
														"id": 1520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3394:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:89:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "3394:89:7"
											},
											{
												"expression": {
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1535,
															"name": "publicSaleContributions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "3496:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1538,
														"indexExpression": {
															"expression": {
																"id": 1536,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3520:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3524:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3520:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3496:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1544,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3574:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3578:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3574:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1539,
																	"name": "publicSaleContributions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "3534:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1542,
																"indexExpression": {
																	"expression": {
																		"id": 1540,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3558:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3562:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3558:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3534:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3570:3:7",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1109,
															"src": "3534:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3534:50:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3496:88:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1548,
												"nodeType": "ExpressionStatement",
												"src": "3496:88:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1550,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3612:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3616:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3612:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1552,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3624:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3628:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3624:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1549,
														"name": "distributeTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "3595:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3595:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "3595:39:7"
											}
										]
									},
									"functionSelector": "e59c9510",
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1502,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1501,
												"name": "onlyPublicSalePhase",
												"nameLocations": [
													"3161:19:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1333,
												"src": "3161:19:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3161:19:7"
										}
									],
									"name": "contributeToPublicSale",
									"nameLocation": "3119:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3141:2:7"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:0:7"
									},
									"scope": 1712,
									"src": "3110:532:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "3725:341:7",
										"statements": [
											{
												"assignments": [
													1565
												],
												"declarations": [
													{
														"constant": false,
														"id": 1565,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "3744:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1589,
														"src": "3736:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1564,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3736:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1567,
												"initialValue": {
													"id": 1566,
													"name": "etherAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1561,
													"src": "3758:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3736:33:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1569,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "3885:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3899:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3885:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e20616d6f756e74",
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3902:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58",
																"typeString": "literal_string \"Invalid token amount\""
															},
															"value": "Invalid token amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58",
																"typeString": "literal_string \"Invalid token amount\""
															}
														],
														"id": 1568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3877:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3877:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1574,
												"nodeType": "ExpressionStatement",
												"src": "3877:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1578,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "3953:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1579,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "3964:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1575,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "3938:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$799",
																"typeString": "contract ERC20"
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3944:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "3938:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3938:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "3938:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1583,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "4008:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1584,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "4019:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1585,
															"name": "etherAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "4032:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1586,
															"name": "currentPhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "4045:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_SalePhase_$1283",
																"typeString": "enum TokenSale.SalePhase"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_SalePhase_$1283",
																"typeString": "enum TokenSale.SalePhase"
															}
														],
														"id": 1582,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "3992:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_enum$_SalePhase_$1283_$returns$__$",
															"typeString": "function (address,uint256,uint256,enum TokenSale.SalePhase)"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1588,
												"nodeType": "EmitStatement",
												"src": "3987:71:7"
											}
										]
									},
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distributeTokens",
									"nameLocation": "3659:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3684:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "3676:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3676:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "etherAmount",
												"nameLocation": "3703:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "3695:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3695:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3675:40:7"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3725:0:7"
									},
									"scope": 1712,
									"src": "3650:416:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "4168:173:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1600,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "4187:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4201:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4187:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e20616d6f756e74",
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4204:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58",
																"typeString": "literal_string \"Invalid token amount\""
															},
															"value": "Invalid token amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58",
																"typeString": "literal_string \"Invalid token amount\""
															}
														],
														"id": 1599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4179:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4179:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1605,
												"nodeType": "ExpressionStatement",
												"src": "4179:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1609,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "4253:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1610,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "4264:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1606,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "4238:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$799",
																"typeString": "contract ERC20"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4244:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "4238:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4238:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "4238:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1614,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "4310:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1615,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "4321:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1613,
														"name": "TokensDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "4292:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4292:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1617,
												"nodeType": "EmitStatement",
												"src": "4287:46:7"
											}
										]
									},
									"functionSelector": "fefae016",
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1597,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1596,
												"name": "onlyOwner",
												"nameLocations": [
													"4158:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4158:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4158:9:7"
										}
									],
									"name": "distributeTokensToAddress",
									"nameLocation": "4083:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4117:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "4109:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4109:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "4136:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "4128:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4128:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4108:40:7"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4168:0:7"
									},
									"scope": 1712,
									"src": "4074:267:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "4397:721:7",
										"statements": [
											{
												"assignments": [
													1625
												],
												"declarations": [
													{
														"constant": false,
														"id": 1625,
														"mutability": "mutable",
														"name": "refundAmount",
														"nameLocation": "4416:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1702,
														"src": "4408:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1624,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4408:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1626,
												"nodeType": "VariableDeclarationStatement",
												"src": "4408:20:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_SalePhase_$1283",
														"typeString": "enum TokenSale.SalePhase"
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1627,
														"name": "currentPhase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "4443:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SalePhase_$1283",
															"typeString": "enum TokenSale.SalePhase"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1628,
															"name": "SalePhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "4459:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SalePhase_$1283_$",
																"typeString": "type(enum TokenSale.SalePhase)"
															}
														},
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4469:7:7",
														"memberName": "Presale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1280,
														"src": "4459:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SalePhase_$1283",
															"typeString": "enum TokenSale.SalePhase"
														}
													},
													"src": "4443:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_SalePhase_$1283",
															"typeString": "enum TokenSale.SalePhase"
														},
														"id": 1656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1653,
															"name": "currentPhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "4690:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_SalePhase_$1283",
																"typeString": "enum TokenSale.SalePhase"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1654,
																"name": "SalePhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "4706:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_SalePhase_$1283_$",
																	"typeString": "type(enum TokenSale.SalePhase)"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4716:10:7",
															"memberName": "PublicSale",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1281,
															"src": "4706:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_SalePhase_$1283",
																"typeString": "enum TokenSale.SalePhase"
															}
														},
														"src": "4690:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1679,
													"nodeType": "IfStatement",
													"src": "4686:254:7",
													"trueBody": {
														"id": 1678,
														"nodeType": "Block",
														"src": "4728:212:7",
														"statements": [
															{
																"expression": {
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1657,
																		"name": "refundAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1625,
																		"src": "4743:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"baseExpression": {
																			"id": 1658,
																			"name": "publicSaleContributions",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1278,
																			"src": "4758:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1661,
																		"indexExpression": {
																			"expression": {
																				"id": 1659,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4782:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4786:6:7",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4782:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4758:35:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4743:50:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1663,
																"nodeType": "ExpressionStatement",
																"src": "4743:50:7"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1665,
																				"name": "refundAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1625,
																				"src": "4816:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4831:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "4816:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "4e6f207075626c69632073616c6520636f6e747269627574696f6e20746f20726566756e64",
																			"id": 1668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4834:39:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_170e0e05573eb0a178e40db61f717720b74467c1c2a75d6e20c5aae44ea7513c",
																				"typeString": "literal_string \"No public sale contribution to refund\""
																			},
																			"value": "No public sale contribution to refund"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_170e0e05573eb0a178e40db61f717720b74467c1c2a75d6e20c5aae44ea7513c",
																				"typeString": "literal_string \"No public sale contribution to refund\""
																			}
																		],
																		"id": 1664,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "4808:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:66:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1670,
																"nodeType": "ExpressionStatement",
																"src": "4808:66:7"
															},
															{
																"expression": {
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 1671,
																			"name": "publicSaleContributions",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1278,
																			"src": "4889:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1674,
																		"indexExpression": {
																			"expression": {
																				"id": 1672,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4913:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4917:6:7",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4913:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "4889:35:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "30",
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4927:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4889:39:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1677,
																"nodeType": "ExpressionStatement",
																"src": "4889:39:7"
															}
														]
													}
												},
												"id": 1680,
												"nodeType": "IfStatement",
												"src": "4439:501:7",
												"trueBody": {
													"id": 1652,
													"nodeType": "Block",
													"src": "4478:202:7",
													"statements": [
														{
															"expression": {
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1631,
																	"name": "refundAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1625,
																	"src": "4493:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1632,
																		"name": "presaleContributions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "4508:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1635,
																	"indexExpression": {
																		"expression": {
																			"id": 1633,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4529:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4533:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4529:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4508:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4493:47:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1637,
															"nodeType": "ExpressionStatement",
															"src": "4493:47:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1639,
																			"name": "refundAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1625,
																			"src": "4563:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4578:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4563:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6f2070726573616c6520636f6e747269627574696f6e20746f20726566756e64",
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4581:35:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a4d0eed3cde0c3bb2a26113f40258e6b92434d0336da732b006592277caac580",
																			"typeString": "literal_string \"No presale contribution to refund\""
																		},
																		"value": "No presale contribution to refund"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_a4d0eed3cde0c3bb2a26113f40258e6b92434d0336da732b006592277caac580",
																			"typeString": "literal_string \"No presale contribution to refund\""
																		}
																	],
																	"id": 1638,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4555:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4555:62:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1644,
															"nodeType": "ExpressionStatement",
															"src": "4555:62:7"
														},
														{
															"expression": {
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1645,
																		"name": "presaleContributions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "4632:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1648,
																	"indexExpression": {
																		"expression": {
																			"id": 1646,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4653:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4657:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4653:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4632:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4667:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4632:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1651,
															"nodeType": "ExpressionStatement",
															"src": "4632:36:7"
														}
													]
												}
											},
											{
												"assignments": [
													1682,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1682,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1702,
														"src": "4953:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1681,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1690,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5008:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 1683,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4971:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4975:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4971:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4982:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4971:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1686,
																"name": "refundAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "4994:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4971:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4971:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:59:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1692,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "5030:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526566756e64206661696c6564",
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5039:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e",
																"typeString": "literal_string \"Refund failed\""
															},
															"value": "Refund failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e",
																"typeString": "literal_string \"Refund failed\""
															}
														],
														"id": 1691,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5022:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1695,
												"nodeType": "ExpressionStatement",
												"src": "5022:33:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1697,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5085:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5089:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5085:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1699,
															"name": "refundAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "5097:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1696,
														"name": "RefundClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "5071:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5071:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1701,
												"nodeType": "EmitStatement",
												"src": "5066:44:7"
											}
										]
									},
									"functionSelector": "b5545a3c",
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1622,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1621,
												"name": "saleNotFinished",
												"nameLocations": [
													"4381:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1345,
												"src": "4381:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4381:15:7"
										}
									],
									"name": "claimRefund",
									"nameLocation": "4358:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4369:2:7"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4397:0:7"
									},
									"scope": 1712,
									"src": "4349:769:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "5196:58:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "46616c6c6261636b2066756e6374696f6e206e6f7420616c6c6f776564",
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5214:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3220cb0e510e1fcc5b8ebbe7e0fb4f28a7eb74b62a1825d130d339146247e647",
																"typeString": "literal_string \"Fallback function not allowed\""
															},
															"value": "Fallback function not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_3220cb0e510e1fcc5b8ebbe7e0fb4f28a7eb74b62a1825d130d339146247e647",
																"typeString": "literal_string \"Fallback function not allowed\""
															}
														],
														"id": 1706,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "5207:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5207:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "5207:39:7"
											}
										]
									},
									"id": 1711,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5176:2:7"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5196:0:7"
									},
									"scope": 1712,
									"src": "5169:85:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1713,
							"src": "232:5025:7",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								1297,
								1303,
								1309
							]
						}
					],
					"src": "33:5226:7"
				},
				"id": 7
			}
		}
	}
}